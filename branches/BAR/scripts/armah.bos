#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare, base, sleeve, turret,wake, doorr, doorl;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5;

// Signal definitions
#define SIG_MOVE			4


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

HitByWeapon(Func_Var_1, Func_Var_2)
{
	turn base to z-axis Func_Var_2 speed <105.000000>;
	turn base to x-axis Func_Var_1 speed <105.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <30.000000>;
	turn base to x-axis <0.000000> speed <30.000000>;
	return (0);
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		if( Static_Var_3 == 1 )
		{
			emit-sfx 5 from wake;
			emit-sfx 5 from wake;
		}
		if( Static_Var_3 == 2 )
		{
			emit-sfx 5 from wake;
			emit-sfx 5 from wake;
		}
		sleep 300;
	}
	return (0);
}

StopMoving()
{
	sleep 150;
	return (0);
}

setSFXoccupy(Func_Var_1)
{
	Static_Var_3 = Func_Var_1;
	return (0);
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_5 = 0;
	Static_Var_4 = 5000;
	Static_Var_2 = 1;
	start-script SmokeUnit();
	return (0);
}


RestoreAfterDelay()
{
	sleep 5000;
	turn turret to y-axis <0.000000> speed <190.000000>;
	turn sleeve to x-axis <0.000000> speed <150.000000>;
	
	turn doorr to y-axis <0> speed <130>;
	turn doorl to y-axis <0> speed <130>;
	return (0);
}

AimSecondary(heading, pitch)
{

	turn turret to y-axis heading speed <370.000000>;
	turn sleeve to x-axis <0.000000> - pitch speed <280.000000>;
	turn doorr to y-axis <-135> speed <370>;
	turn doorl to y-axis <135> speed <370>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromSecondary(piecenum)
{
	piecenum = sleeve;
	return (0);
}

QuerySecondary(piecenum)
{
	piecenum = flare;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}


Killed(severity, corpsetype)
{

	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode sleeve type SHATTER | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode sleeve type SHATTER | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode sleeve type SHATTER | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode sleeve type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	return (0);
}
