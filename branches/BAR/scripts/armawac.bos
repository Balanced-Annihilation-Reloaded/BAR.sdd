#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, wingr, wingl, dish, thrust;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	start-script SmokeUnit();
}

HitByWeapon(anglex, anglez)
{
	turn base to z-axis <0> - anglez speed <105.000000>;
	turn base to x-axis <0> - anglex speed <105.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <15.000000>;
	turn base to x-axis <0.000000> speed <15.000000>;
}


Activate()
{
	turn wingl to x-axis <36> now;
	turn wingl to y-axis <15> now;
	turn wingl to z-axis <-45> now;
	turn wingr to x-axis <36> now;
	turn wingr to y-axis <-15> now;
	turn wingr to z-axis <45> now;
	
	turn wingl to x-axis <0> speed <36>;
	turn wingl to y-axis <0> speed <15>;
	turn wingl to z-axis <0> speed <45>;
	turn wingr to x-axis <0> speed <36>;
	turn wingr to y-axis <0> speed <15>;
	turn wingr to z-axis <0> speed <45>;
	spin dish around y-axis speed <90.021978>;
}

Deactivate()
{

	turn wingl to x-axis <36> speed <36>;
	turn wingl to y-axis <15> speed <15>;
	turn wingl to z-axis <-45> speed <45>;
	turn wingr to x-axis <36> speed <36>;
	turn wingr to y-axis <-15> speed <15>;
	turn wingr to z-axis <45> speed <45>;
	stop-spin dish around y-axis;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY;
		explode wingl type FIRE | SMOKE | FALL;
		explode wingr type BITMAPONLY;
		explode dish type BITMAPONLY;
		explode thrust type BITMAPONLY;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY;
		explode wingl type FIRE | SMOKE | FALL;
		explode wingr type FALL;
		explode dish type FIRE | SMOKE | FALL;
		explode thrust type FIRE | SMOKE | FALL;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode wingl type FIRE | SMOKE | FALL;
		explode wingr type FIRE | SMOKE | FALL;
		explode dish type EXPLODE_ON_HIT | SMOKE | FALL;
		explode thrust type EXPLODE_ON_HIT | SMOKE | FALL;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode wingl type EXPLODE_ON_HIT | FIRE | FALL;
		explode wingr type EXPLODE_ON_HIT | FIRE | FALL;
		explode dish type EXPLODE_ON_HIT | FIRE | FALL;
		explode thrust type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
	return corpsetype;
}
