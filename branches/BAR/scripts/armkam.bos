#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, lflare, rflare, lfin, rfin, rturret, lturret, thrusta, thrustb, engines;

// Signal definitions
#define SIG_MOVE			2

static-var gun_1;
Create()
{
	gun_1=0;
}

RestoreAfterDelay()
{
	sleep 500;
	turn lturret to x-axis <0.000000> speed <50.000000>;
	turn rturret to x-axis <0.000000> speed <50.000000>;
	

	
}



MoveRate1()
{
	start-script RestoreAfterDelay();
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	turn base to z-axis <0.000000> speed <120.000000>;
	//start-script ProcessFlames();
}

MoveRate2()
{
	start-script RestoreAfterDelay();
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	turn engines to x-axis <90> speed <90>;
	//start-script ProcessFlames();
	sleep 1000;
	turn base to z-axis <240.000000> speed <120.000000>;
	wait-for-turn base around z-axis;
	turn base to z-axis <120.000000> speed <180.000000>;
	wait-for-turn base around z-axis;
	turn base to z-axis <0.000000> speed <120.000000>;
	
}

MoveRate3()
{
	start-script RestoreAfterDelay();
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	//start-script ProcessFlames();
	turn base to z-axis <0.000000> speed <120.000000>;
	
	turn engines to x-axis <90> speed <90>;
}

AimFromPrimary(piecenum)
{
	piecenum = base;
}

QueryPrimary(piecenum)
{
	if (gun_1==0)
	{
		piecenum = lflare;
		gun_1=1;
	}
	else 
	{
		piecenum=rflare;
		gun_1=0;
	}
}

FirePrimary()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	sleep 200;
	turn engines to x-axis <0> speed <90>;
	
	start-script RestoreAfterDelay();
}

StartMoving()
{
	start-script RestoreAfterDelay();
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	move lfin to z-axis [-8] speed [8];
	move rfin to z-axis [-8] speed [8];
	turn engines to x-axis <90> speed <90>;
	wait-for-move lfin along z-axis;
}

StopMoving()
{
	start-script RestoreAfterDelay();
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	move lfin to z-axis [0] speed [8];
	move rfin to z-axis [0] speed [8];
	
	turn engines to x-axis <0> speed <90>;
	wait-for-move lfin along z-axis;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	corpsetype = 1;
}
