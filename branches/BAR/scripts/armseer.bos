#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, dish, turret, eye, fwheel, rwheel;

#define SIG_ACTIVATE			2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

HitByWeapon(Func_Var_1, Func_Var_2)
{
	turn base to z-axis <0> - Func_Var_2 speed <105.000000>;
	turn base to x-axis <0> - Func_Var_1 speed <105.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <30.000000>;
	turn base to x-axis <0.000000> speed <30.000000>;
	return (0);
}

Create()
{
	dont-cache dish;
	dont-shade dish;
	start-script SmokeUnit();
	return (0);
}
StartMoving()
{
	spin fwheel around x-axis speed <50> accelerate <10>;
	spin rwheel around x-axis speed <50> accelerate <10>;
}

StopMoving()
{
	stop-spin fwheel around x-axis;
	stop-spin rwheel around x-axis;
}


Activate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	spin dish around y-axis speed <100.021978> accelerate <10>;
	return (0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	stop-spin dish around y-axis decelerate <10>;
	wait-for-turn dish around y-axis;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY;
		explode fwheel type BITMAPONLY;
		explode rwheel type BITMAPONLY;
		explode turret type BITMAPONLY;
		explode eye type FIRE | SMOKE | FALL;
		explode dish type BITMAPONLY;
		return(0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY;
		explode fwheel type FIRE | SMOKE | FALL;
		explode rwheel type FALL;
		explode turret type FIRE | SMOKE | FALL;
		explode eye type FIRE | SMOKE | FALL;
		explode dish type FIRE | SMOKE | FALL;
		return(0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL;
		explode fwheel type FIRE | SMOKE | FALL;
		explode rwheel type EXPLODE_ON_HIT | SMOKE | FALL;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode eye type SMOKE | FALL;
		explode dish type FIRE | SMOKE | FALL;
		return(0);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode fwheel type EXPLODE_ON_HIT | FIRE | FALL;
		explode rwheel type EXPLODE_ON_HIT | FIRE | FALL;
		explode turret type EXPLODE_ON_HIT | FIRE | FALL;
		explode eye type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode dish type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
}
