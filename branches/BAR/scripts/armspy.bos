#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece pelvis, lthigh, rthigh, rleg, rfoot, lleg, lfoot, body, lloarm, rloarm, ruparm, luparm;

static-var bMoving, Static_Var_3, Static_Var_4, Static_Var_5;

// Signal definitions
#define SIG_ACTIVATE			2


walk()
{

	
	if( bMoving )
	{
	//maxvelocity = 2.18, speed = 68 elmos/sec
	//animspeed 60 elmos per cycle
	//step 0 

	turn rthigh to x-axis <0> speed <42.000000>;
	turn rleg to x-axis <0> speed <222.000000>;
	turn rfoot to x-axis <0> speed <204.000000>;
	turn lthigh to x-axis <21> speed <306.000000>;
	turn lleg to x-axis <33> speed <402.000000>;
	turn lfoot to x-axis <-47> speed <420.000000>;
	
	turn luparm to x-axis <-20> speed <120.000000>;
	turn ruparm to x-axis <20> speed <120.000000>;

	move pelvis to y-axis [1] speed [12.000000];
	turn pelvis to z-axis <-1> speed <6.000000>;
	turn body to y-axis <4> speed <48.000000>;

	sleep 150;
	}
	if( bMoving )
	{
	//step 1
	turn rthigh to x-axis <30> speed <180.000000>;
	turn rleg to x-axis <0> now;
	turn rfoot to x-axis <-30> speed <180.000000>;
	turn lthigh to x-axis <-17> speed <228.000000>;
	turn lleg to x-axis <34> speed <6.000000>;
	turn lfoot to x-axis <-17> speed <180.000000>;
	
	
	turn luparm to x-axis <20> speed <240.000000>;
	turn ruparm to x-axis <-20> speed <240.000000>;

	move pelvis to y-axis [0] now;
	turn pelvis to z-axis <1> speed <12.000000>;
	turn body to y-axis <8> speed <24.000000>;

	sleep 150;
		}
	if( bMoving )
	{
	//step 2 
	turn rthigh to x-axis <72> speed <252.000000>;
	turn rleg to x-axis <-34> speed <204.000000>;
	turn rfoot to x-axis <23> speed <318.000000>;
	turn lthigh to x-axis <-7> speed <60.000000>;
	turn lleg to x-axis <-37> speed <426.000000>;
	turn lfoot to x-axis <34> speed <306.000000>;
	
	turn luparm to x-axis <40> speed <120.000000>;
	turn ruparm to x-axis <-40> speed <120.000000>;

	move pelvis to y-axis [-2] speed [12.000000];
	turn pelvis to z-axis <2> speed <6.000000>;
	turn body to y-axis <4> speed <24.000000>;

	sleep 150;
		}
	if( bMoving )
	{
	//step 3 
	turn rthigh to x-axis <21> speed <306.000000>;
	turn rleg to x-axis <33> speed <402.000000>;
	turn rfoot to x-axis <-47> speed <420.000000>;
	turn lthigh to x-axis <0> speed <42.000000>;
	turn lleg to x-axis <0> speed <222.000000>;
	turn lfoot to x-axis <0> speed <204.000000>;

	
	turn luparm to x-axis <20> speed <120.000000>;
	turn ruparm to x-axis <-20> speed <120.000000>;

	move pelvis to y-axis [1] speed [12.000000];
	turn pelvis to z-axis <1> speed <6.000000>;
	turn body to y-axis <-4> speed <48.000000>;

	sleep 150;
		}
	if( bMoving )
	{
	//step 4 
	turn rthigh to x-axis <-17> speed <228.000000>;
	turn rleg to x-axis <34> speed <6.000000>;
	turn rfoot to x-axis <-17> speed <180.000000>;
	turn lthigh to x-axis <30> speed <180.000000>;
	turn lleg to x-axis <0> now;
	turn lfoot to x-axis <-30> speed <180.000000>;

	turn luparm to x-axis <-20> speed <240.000000>;
	turn ruparm to x-axis <20> speed <240.000000>;

	move pelvis to y-axis [0] now;
	turn pelvis to z-axis <-1> speed <12.000000>;
	turn body to y-axis <-8> speed <24.000000>;

	sleep 150;
		}
			if( bMoving )
	{
	//step 5 
	turn rthigh to x-axis <-7> speed <60.000000>;
	turn rleg to x-axis <-37> speed <426.000000>;
	turn rfoot to x-axis <34> speed <306.000000>;
	turn lthigh to x-axis <72> speed <252.000000>;
	turn lleg to x-axis <-34> speed <204.000000>;
	turn lfoot to x-axis <23> speed <318.000000>;

	turn luparm to x-axis <-40> speed <120.000000>;
	turn ruparm to x-axis <40> speed <120.000000>;
	
	move pelvis to y-axis [-2] speed [12.000000];
	turn pelvis to z-axis <-2> speed <6.000000>;
	turn body to y-axis <-4> speed <24.000000>;
	sleep 50;
	}
	

}


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from pelvis;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		sleep 100;
		if( moving )
		{
			Static_Var_3 = 0;
			call-script walk();
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn rfoot to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				turn lfoot to x-axis <0.000000> speed <200.000000>;
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
	return (0);
}

Create()
{
	bMoving = FALSE;
	Static_Var_3 = 1;
	Static_Var_4 = 3000;
	start-script MotionControl();
	start-script SmokeUnit();
	Static_Var_5 = 0;
	return (0);
}

StartMoving()
{
	bMoving = TRUE;
	move pelvis to y-axis [0] speed [40];
	turn lthigh to x-axis <0> speed <160>;
	turn lleg to x-axis <0> speed <190>;
	turn lfoot to x-axis <0> speed <130>;
	
	turn luparm to z-axis <0> speed <130>;
	turn lloarm to z-axis <0> speed <130>;
	
	
	turn rthigh to x-axis <0> speed <160>;
	turn rleg to x-axis <0> speed <190>;
	turn rfoot to x-axis <0> speed <130>;
	
	turn ruparm to z-axis <0> speed <130>;
	turn rloarm to z-axis <0> speed <130>;
	sleep 100;

}

StopMoving()
{
	bMoving = FALSE;
	sleep 500;
	move pelvis to y-axis [-7] speed [14];
	turn lthigh to x-axis <-30> speed <60>;
	turn lleg to x-axis <45> speed <90>;
	turn lfoot to x-axis <-15> speed <30>;
	
	turn luparm to z-axis <15> speed <30>;
	turn lloarm to z-axis <15> speed <30>;
	turn ruparm to z-axis <-15> speed <30>;
	turn rloarm to z-axis <-15> speed <30>;
	
	turn rthigh to x-axis <-30> speed <60>;
	turn rleg to x-axis <45> speed <90>;
	turn rfoot to x-axis <-15> speed <30>;
	
	sleep 500;
}

Activate()
{
	if( Static_Var_5 )
	{
		set ACTIVATION to 0;
		return (0);
	}
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	return (0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	return (0);
}

HitByWeapon(Func_Var_1, Func_Var_2)
{
	if( get ACTIVATION )
	{
		Static_Var_5 = 1;
	}
	if( Static_Var_5 )
	{
		signal 4;
		set-signal-mask 4;
		set ACTIVATION to 0;
		sleep 8000;
		Static_Var_5 = 0;
		set ACTIVATION to 100;
	}
	return (0);
}


RestoreAfterDelay()
{
	sleep Static_Var_4;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = pelvis;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY;
		explode lthigh type BITMAPONLY;
		explode lleg type BITMAPONLY;
		explode lfoot type FIRE | SMOKE | FALL;
		explode rthigh type BITMAPONLY;
		explode rleg type BITMAPONLY;
		explode rfoot type BITMAPONLY;
		explode body type BITMAPONLY;
		explode luparm type FIRE | SMOKE | FALL;
		explode lloarm type FIRE | SMOKE | FALL;
		explode ruparm type BITMAPONLY;
		explode rloarm type BITMAPONLY;
		return(0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type FALL;
		explode lthigh type FIRE | SMOKE | FALL;
		explode lleg type FALL;
		explode lfoot type FALL;
		explode rthigh type FIRE | SMOKE | FALL;
		explode rleg type FIRE | SMOKE | FALL;
		explode rfoot type FALL;
		explode body type FIRE | SMOKE | FALL;
		explode luparm type FALL;
		explode lloarm type FALL;
		explode ruparm type FALL;
		explode rloarm type FIRE | SMOKE | FALL;
		return(0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL;
		explode lthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lleg type SMOKE | FALL;
		explode lfoot type FIRE | SMOKE | FALL;
		explode rthigh type FIRE | SMOKE | FALL;
		explode rleg type SMOKE | FALL;
		explode rfoot type SMOKE | FALL;
		explode body type EXPLODE_ON_HIT | SMOKE | FALL;
		explode luparm type FIRE | SMOKE | FALL;
		explode lloarm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode ruparm type EXPLODE_ON_HIT | SMOKE | FALL;
		explode rloarm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		return(0);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lthigh type EXPLODE_ON_HIT | FIRE | FALL;
		explode lleg type EXPLODE_ON_HIT | FIRE | FALL;
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rthigh type EXPLODE_ON_HIT | FIRE | FALL;
		explode rleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rfoot type EXPLODE_ON_HIT | FIRE | FALL;
		explode body type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode luparm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lloarm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode ruparm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rloarm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
}
