#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  ground, base, dish, 
       tur1, tur2, tur3, tur4, tur5, flaktur1, flaktur2, sleeve1,
       sleeve2, sleeve3, sleeve4, sleeve5, flaksleeve1, flaksleeve2, barrel1a, barrel1b,
       barrel2a, barrel2b, barrel2c, barrel3a, barrel3b, barrel4a, barrel4b, barrel4c,
       barrel5a, barrel5b, barrel5c, flakbarrel1a, flakbarrel1b, flakbarrel2a, flakbarrel2b, flare1a,
       flare1b, flare2a, flare2b, flare2c, flare3a, flare3b, flare4a, flare4b,
       flare4c, flare5a, flare5b, flare5c, flakflare1a, flakflare1b, flakflare2a, flakflare2b;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7, restore_delay, oldHead;

// Signal definitions
#define SIG_MOVE			256


SetDirection(heading)
{
	var spd;
	spd = (get ABS(oldHead) - get ABS(heading)) / 2;
	turn ground to y-axis heading speed spd;
	turn base to y-axis 0-heading speed spd;
	oldHead = heading;
}

RockOnWaves()
{
	var rockDir, rockAng, rockSpeed;
	rockDir = <-0.1>;
	rockAng = <-0.1>;
	while( TRUE )
	{
		while( get ABS(rockAng) < <1.11> )
		{
			rockSpeed = <1.25> - get ABS(rockAng);
			turn ground to x-axis rockAng speed rockSpeed*2;
			wait-for-turn ground around x-axis;
			rockAng = rockAng + rockDir;
		}
		rockDir = 0 - rockDir;
		rockAng = rockAng + rockDir + rockDir;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script RockOnWaves();
	var Func_Var_4;
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			Func_Var_4 = Rand( 1, 3 );
			if( Func_Var_4 == 1 )
			{
				emit-sfx smoketype from base;
			}
			if( Func_Var_4 == 2 )
			{
				emit-sfx smoketype from tur1;
			}
			if( Func_Var_4 == 3 )
			{
				emit-sfx smoketype from tur1;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	set ARMORED to 1;
	hide flare1a;
	hide flare2a;
	hide flare3a;
	hide flare4a;
	hide flare5a;
	hide flare1b;
	hide flare2b;
	hide flare3b;
	hide flare4b;
	hide flare5b;
	hide flare2c;
	hide flare4c;
	hide flare5c;
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	Static_Var_7 = 0;
	spin dish around y-axis speed <100.021978>;
	restore_delay = 6000;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

RestoreAfterDelay2()
{
	sleep restore_delay;
	turn tur2 to y-axis <0.000000> speed <50.000000>;
	turn sleeve2 to x-axis <0.000000> speed <30.000000>;
	turn tur4 to y-axis <0.000000> speed <50.000000>;
	turn sleeve4 to x-axis <0.000000> speed <30.000000>;
	turn tur5 to y-axis <0.000000> speed <50.000000>;
	turn sleeve5 to x-axis <0.000000> speed <30.000000>;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn tur1 to y-axis <0.000000> speed <10.000000>;
	turn sleeve1 to x-axis <0.000000> speed <10.000000>;
	turn tur3 to y-axis <0.000000> speed <10.000000>;
	turn sleeve3 to x-axis <0.000000> speed <10.000000>;
}

RestoreAfterDelay3()
{
	sleep restore_delay;
	turn flaktur1 to y-axis <0.000000> speed <80.000000>;
	turn flaksleeve1 to x-axis <0.000000> speed <50.000000>;
	turn flaktur2 to y-axis <0.000000> speed <80.000000>;
	turn flaksleeve2 to x-axis <0.000000> speed <50.000000>;
}

waveSplash()
{
	while( TRUE )
	{
		turn base to x-axis <-1.0> speed <1.0>;
		move base to y-axis [0.23] speed [0.17];
		wait-for-turn base around x-axis;
		turn base to x-axis <0.0> speed <1.0>;
		move base to y-axis [0.0] speed [0.17];
		wait-for-turn base around x-axis;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	var waketime;
	start-script waveSplash();
	while( TRUE )
	{
		emit-sfx 2 from ground;
		emit-sfx 2 from ground;
		waketime = (get CURRENT_SPEED) * 100 / get MAX_SPEED;
		if( waketime < 50 ) waketime = 50;
		sleep 12000 / waketime;
	}
}

StopMoving()
{
	signal SIG_MOVE;
	turn base to x-axis <0.0> speed <1.0>;
	move base to y-axis [0.0] speed [0.17];
}

AimWeapon1(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn tur1 to y-axis heading speed <50.000000>;
	turn sleeve1 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn tur1 around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon1()
{
	if( Static_Var_1 )
	{
		move barrel1b to z-axis [-3.000000] speed [500.000000];
		show flare1b;
		sleep 150;
		move barrel1b to z-axis [0.000000] speed [3.000000];
		hide flare1b;
	}
	else
	{
		move barrel1a to z-axis [-3.000000] speed [500.000000];
		show flare1a;
		sleep 150;
		move barrel1a to z-axis [0.000000] speed [3.000000];
		hide flare1a;
	}
	Static_Var_1 = !Static_Var_1;
}

AimFromWeapon1(piecenum)
{
	piecenum = tur1;
}

QueryWeapon1(piecenum)
{
	piecenum = flare1a + Static_Var_1;
}

AimWeapon2(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn tur2 to y-axis heading speed <90.000000>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn tur2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireWeapon2()
{
	if( Static_Var_2 == 0 )
	{
		move barrel2a to z-axis [-1.000000] speed [500.000000];
		show flare2a;
		sleep 150;
		move barrel2a to z-axis [0.000000] speed [3.000000];
		hide flare2a;
	}
	else if( Static_Var_2 == 1 )
	{
		move barrel2b to z-axis [-1.000000] speed [500.000000];
		show flare2b;
		sleep 150;
		move barrel2b to z-axis [0.000000] speed [3.000000];
		hide flare2b;
	}
	else
	{
		move barrel2c to z-axis [-1.000000] speed [500.000000];
		show flare2c;
		sleep 150;
		move barrel2c to z-axis [0.000000] speed [3.000000];
		hide flare2c;
	}
	++Static_Var_2;
	if( Static_Var_2 >= 3 )
	{
		Static_Var_2 = 0;
	}
}

AimFromWeapon2(piecenum)
{
	piecenum = tur2;
}

QueryWeapon2(piecenum)
{
	piecenum = flare2a + Static_Var_2;
}

AimWeapon3(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	turn tur3 to y-axis heading speed <50.000000>;
	turn sleeve3 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn tur3 around y-axis;
	wait-for-turn sleeve3 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon3()
{
	if( Static_Var_3 )
	{
		move barrel3b to z-axis [-3.000000] speed [500.000000];
		show flare3b;
		sleep 150;
		move barrel3b to z-axis [0.000000] speed [3.000000];
		hide flare3b;
	}
	else
	{
		move barrel3a to z-axis [-3.000000] speed [500.000000];
		show flare3a;
		sleep 150;
		move barrel3a to z-axis [0.000000] speed [3.000000];
		hide flare3a;
	}
	Static_Var_3 = !Static_Var_3;
}

AimFromWeapon3(piecenum)
{
	piecenum = tur3;
}

QueryWeapon3(piecenum)
{
	piecenum = flare3a + Static_Var_3;
}

AimWeapon4(heading, pitch)
{
	signal 16;
	set-signal-mask 16;
	turn tur4 to y-axis heading speed <90.000000>;
	turn sleeve4 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn tur4 around y-axis;
	wait-for-turn sleeve4 around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireWeapon4()
{
	if( Static_Var_4 == 0 )
	{
		move barrel4a to z-axis [-1.000000] speed [500.000000];
		show flare4a;
		sleep 150;
		move barrel4a to z-axis [0.000000] speed [3.000000];
		hide flare4a;
	}
	else if( Static_Var_4 == 1 )
	{
		move barrel4b to z-axis [-1.000000] speed [500.000000];
		show flare4b;
		sleep 150;
		move barrel4b to z-axis [0.000000] speed [3.000000];
		hide flare4b;
	}
	else
	{
		move barrel4c to z-axis [-1.000000] speed [500.000000];
		show flare4c;
		sleep 150;
		move barrel4c to z-axis [0.000000] speed [3.000000];
		hide flare4c;
	}
	++Static_Var_4;
	if( Static_Var_4 >= 3 )
	{
		Static_Var_4 = 0;
	}
}

AimFromWeapon4(piecenum)
{
	piecenum = tur4;
}

QueryWeapon4(piecenum)
{
	piecenum = flare4a + Static_Var_4;
}

AimWeapon5(heading, pitch)
{
	signal 32;
	set-signal-mask 32;
	turn tur5 to y-axis heading speed <90.000000>;
	turn sleeve5 to x-axis <0.000000> - pitch speed <25.000000>;
	wait-for-turn tur5 around y-axis;
	wait-for-turn sleeve5 around x-axis;
	start-script RestoreAfterDelay2();
	return (1);
}

FireWeapon5()
{
	if( Static_Var_5 == 0 )
	{
		move barrel5a to z-axis [-1.000000] speed [500.000000];
		show flare5a;
		sleep 150;
		move barrel5a to z-axis [0.000000] speed [3.000000];
		hide flare5a;
	}
	else if( Static_Var_5 == 1 )
	{
		move barrel5b to z-axis [-1.000000] speed [500.000000];
		show flare5b;
		sleep 150;
		move barrel5b to z-axis [0.000000] speed [3.000000];
		hide flare5b;
	}
	else
	{
		move barrel5c to z-axis [-1.000000] speed [500.000000];
		show flare5c;
		sleep 150;
		move barrel5c to z-axis [0.000000] speed [3.000000];
		hide flare5c;
	}
	++Static_Var_5;
	if( Static_Var_5 >= 3 )
	{
		Static_Var_5 = 0;
	}
}

AimFromWeapon5(piecenum)
{
	piecenum = tur5;
}

QueryWeapon5(piecenum)
{
	piecenum = flare5a + Static_Var_5;
}

AimWeapon6(heading, pitch)
{
	signal 64;
	set-signal-mask 64;
	turn flaktur1 to y-axis heading speed <250.000000>;
	turn flaksleeve1 to x-axis <0.000000> - pitch speed <200.000000>;
	wait-for-turn flaktur1 around y-axis;
	wait-for-turn flaksleeve1 around x-axis;
	start-script RestoreAfterDelay3();
	return (1);
}

FireWeapon6()
{
	if( Static_Var_6 )
	{
		move flakbarrel1b to z-axis [-1.000000] speed [500.000000];
		show flakflare1b;
		sleep 150;
		move flakbarrel1b to z-axis [0.000000] speed [3.000000];
		hide flakflare1b;
	}
	else
	{
		move flakbarrel1a to z-axis [-1.000000] speed [500.000000];
		show flakflare1a;
		sleep 150;
		move flakbarrel1a to z-axis [0.000000] speed [3.000000];
		hide flakflare1a;
	}
	Static_Var_6 = !Static_Var_6;
}

AimFromWeapon6(piecenum)
{
	piecenum = flaktur1;
}

QueryWeapon6(piecenum)
{
	piecenum = flakflare1a + Static_Var_6;
}

AimWeapon7(heading, pitch)
{
	signal 128;
	set-signal-mask 128;
	turn flaktur2 to y-axis heading speed <250.000000>;
	turn flaksleeve2 to x-axis <0.000000> - pitch speed <200.000000>;
	wait-for-turn flaktur2 around y-axis;
	wait-for-turn flaksleeve2 around x-axis;
	start-script RestoreAfterDelay3();
	return (1);
}

FireWeapon7()
{
	if( Static_Var_7 )
	{
		move flakbarrel2b to z-axis [-1.000000] speed [500.000000];
		show flakflare2b;
		sleep 150;
		move flakbarrel2b to z-axis [0.000000] speed [3.000000];
		hide flakflare2b;
	}
	else
	{
		move flakbarrel2a to z-axis [-1.000000] speed [500.000000];
		show flakflare2a;
		sleep 150;
		move flakbarrel2a to z-axis [0.000000] speed [3.000000];
		hide flakflare2a;
	}
	Static_Var_7 = !Static_Var_7;
}

AimFromWeapon7(piecenum)
{
	piecenum = flaktur2;
}

QueryWeapon7(piecenum)
{
	piecenum = flakflare2a + Static_Var_7;
}

SweetSpot(piecenum)
{
	piecenum = ground;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode ground type BITMAPONLY;
		explode base type BITMAPONLY;
		explode tur3 type BITMAPONLY;
		explode sleeve3 type BITMAPONLY;
		explode barrel3b type FIRE | SMOKE | FALL;
		explode flare3b type BITMAPONLY;
		explode barrel3a type BITMAPONLY;
		explode flare3a type BITMAPONLY;
		explode flaktur1 type BITMAPONLY;
		explode flaksleeve1 type BITMAPONLY;
		explode flakbarrel1b type BITMAPONLY;
		explode flakflare1b type BITMAPONLY;
		explode flakbarrel1a type BITMAPONLY;
		explode flakflare1a type BITMAPONLY;
		explode flaktur2 type BITMAPONLY;
		explode flaksleeve2 type BITMAPONLY;
		explode flakbarrel2b type BITMAPONLY;
		explode flakflare2b type BITMAPONLY;
		explode flakbarrel2a type BITMAPONLY;
		explode flakflare2a type BITMAPONLY;
		explode tur4 type BITMAPONLY;
		explode sleeve4 type BITMAPONLY;
		explode barrel4c type BITMAPONLY;
		explode flare4c type BITMAPONLY;
		explode barrel4b type BITMAPONLY;
		explode flare4b type BITMAPONLY;
		explode barrel4a type BITMAPONLY;
		explode flare4a type BITMAPONLY;
		explode tur2 type BITMAPONLY;
		explode sleeve2 type BITMAPONLY;
		explode barrel2c type BITMAPONLY;
		explode flare2c type BITMAPONLY;
		explode barrel2b type BITMAPONLY;
		explode flare2b type BITMAPONLY;
		explode barrel2a type BITMAPONLY;
		explode flare2a type BITMAPONLY;
		explode tur5 type BITMAPONLY;
		explode sleeve5 type BITMAPONLY;
		explode barrel5c type BITMAPONLY;
		explode flare5c type BITMAPONLY;
		explode barrel5b type BITMAPONLY;
		explode flare5b type BITMAPONLY;
		explode barrel5a type BITMAPONLY;
		explode flare5a type BITMAPONLY;
		explode tur1 type BITMAPONLY;
		explode sleeve1 type BITMAPONLY;
		explode barrel1b type BITMAPONLY;
		explode flare1b type BITMAPONLY;
		explode barrel1a type BITMAPONLY;
		explode flare1a type BITMAPONLY;
		explode dish type BITMAPONLY;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode ground type FIRE | SMOKE | FALL;
		explode tur3 type FALL;
		explode sleeve3 type FIRE | SMOKE | FALL;
		explode barrel3b type FALL;
		explode flare3b type FALL;
		explode barrel3a type FIRE | SMOKE | FALL;
		explode flare3a type FIRE | SMOKE | FALL;
		explode flaktur1 type FIRE | SMOKE | FALL;
		explode flaksleeve1 type FALL;
		explode flakbarrel1b type FALL;
		explode flakflare1b type FIRE | SMOKE | FALL;
		explode flakbarrel1a type FIRE | SMOKE | FALL;
		explode flakflare1a type FIRE | SMOKE | FALL;
		explode flaktur2 type FIRE | SMOKE | FALL;
		explode flaksleeve2 type FALL;
		explode flakbarrel2b type FIRE | SMOKE | FALL;
		explode flakflare2b type FIRE | SMOKE | FALL;
		explode flakbarrel2a type FIRE | SMOKE | FALL;
		explode flakflare2a type FIRE | SMOKE | FALL;
		explode tur4 type FIRE | SMOKE | FALL;
		explode sleeve4 type FIRE | SMOKE | FALL;
		explode barrel4c type FALL;
		explode flare4c type FIRE | SMOKE | FALL;
		explode barrel4b type FALL;
		explode flare4b type FIRE | SMOKE | FALL;
		explode barrel4a type FIRE | SMOKE | FALL;
		explode flare4a type FIRE | SMOKE | FALL;
		explode tur2 type FIRE | SMOKE | FALL;
		explode sleeve2 type FIRE | SMOKE | FALL;
		explode barrel2c type FIRE | SMOKE | FALL;
		explode flare2c type FIRE | SMOKE | FALL;
		explode barrel2b type FIRE | SMOKE | FALL;
		explode flare2b type FIRE | SMOKE | FALL;
		explode barrel2a type FIRE | SMOKE | FALL;
		explode flare2a type FIRE | SMOKE | FALL;
		explode tur5 type FIRE | SMOKE | FALL;
		explode sleeve5 type FALL;
		explode barrel5c type FIRE | SMOKE | FALL;
		explode flare5c type FIRE | SMOKE | FALL;
		explode barrel5b type FIRE | SMOKE | FALL;
		explode flare5b type FALL;
		explode barrel5a type FIRE | SMOKE | FALL;
		explode flare5a type FIRE | SMOKE | FALL;
		explode sleeve1 type FIRE | SMOKE | FALL;
		explode barrel1b type FALL;
		explode flare1b type FIRE | SMOKE | FALL;
		explode barrel1a type FIRE | SMOKE | FALL;
		explode flare1a type FALL;
		explode dish type FIRE | SMOKE | FALL;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode ground type FIRE | SMOKE | FALL;
		explode base type BITMAPONLY;
		explode tur3 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode sleeve3 type FIRE | SMOKE | FALL;
		explode barrel3b type SMOKE | FALL;
		explode flare3b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel3a type FIRE | SMOKE | FALL;
		explode flare3a type SMOKE | FALL;
		explode flaktur1 type FIRE | SMOKE | FALL;
		explode flaksleeve1 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode flakbarrel1b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flakflare1b type EXPLODE_ON_HIT | SMOKE | FALL;
		explode flakbarrel1a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flakflare1a type EXPLODE_ON_HIT | SMOKE | FALL;
		explode flaktur2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flaksleeve2 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode flakbarrel2b type SMOKE | FALL;
		explode flakflare2b type FIRE | SMOKE | FALL;
		explode flakbarrel2a type FIRE | SMOKE | FALL;
		explode flakflare2a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode tur4 type FIRE | SMOKE | FALL;
		explode sleeve4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel4c type FIRE | SMOKE | FALL;
		explode flare4c type EXPLODE_ON_HIT | SMOKE | FALL;
		explode barrel4b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare4b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel4a type EXPLODE_ON_HIT | SMOKE | FALL;
		explode flare4a type FIRE | SMOKE | FALL;
		explode tur2 type FIRE | SMOKE | FALL;
		explode sleeve2 type SMOKE | FALL;
		explode barrel2c type EXPLODE_ON_HIT | SMOKE | FALL;
		explode flare2c type FIRE | SMOKE | FALL;
		explode barrel2b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare2b type FIRE | SMOKE | FALL;
		explode barrel2a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare2a type EXPLODE_ON_HIT | SMOKE | FALL;
		explode tur5 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode sleeve5 type SMOKE | FALL;
		explode barrel5c type FIRE | SMOKE | FALL;
		explode flare5c type FIRE | SMOKE | FALL;
		explode barrel5b type FIRE | SMOKE | FALL;
		explode flare5b type EXPLODE_ON_HIT | SMOKE | FALL;
		explode barrel5a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare5a type EXPLODE_ON_HIT | SMOKE | FALL;
		explode tur1 type BITMAPONLY;
		explode sleeve1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel1b type SMOKE | FALL;
		explode flare1b type FIRE | SMOKE | FALL;
		explode barrel1a type SMOKE | FALL;
		explode flare1a type FIRE | SMOKE | FALL;
		explode dish type SMOKE | FALL;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode ground type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode tur3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode sleeve3 type EXPLODE_ON_HIT | FIRE | FALL;
		explode barrel3b type EXPLODE_ON_HIT | FIRE | FALL;
		explode flare3b type EXPLODE_ON_HIT | FIRE | FALL;
		explode barrel3a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare3a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flaktur1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flaksleeve1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode flakbarrel1b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flakflare1b type EXPLODE_ON_HIT | FIRE | FALL;
		explode flakbarrel1a type EXPLODE_ON_HIT | FIRE | FALL;
		explode flakflare1a type EXPLODE_ON_HIT | FIRE | FALL;
		explode flaktur2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode flaksleeve2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flakbarrel2b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flakflare2b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flakbarrel2a type EXPLODE_ON_HIT | FIRE | FALL;
		explode flakflare2a type EXPLODE_ON_HIT | FIRE | FALL;
		explode tur4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode sleeve4 type EXPLODE_ON_HIT | FIRE | FALL;
		explode barrel4c type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare4c type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel4b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare4b type EXPLODE_ON_HIT | FIRE | FALL;
		explode barrel4a type EXPLODE_ON_HIT | FIRE | FALL;
		explode flare4a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode tur2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode sleeve2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel2c type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare2c type EXPLODE_ON_HIT | FIRE | FALL;
		explode barrel2b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare2b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel2a type EXPLODE_ON_HIT | FIRE | FALL;
		explode flare2a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode tur5 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode sleeve5 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel5c type EXPLODE_ON_HIT | FIRE | FALL;
		explode flare5c type EXPLODE_ON_HIT | FIRE | FALL;
		explode barrel5b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare5b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel5a type EXPLODE_ON_HIT | FIRE | FALL;
		explode flare5a type EXPLODE_ON_HIT | FIRE | FALL;
		explode tur1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode sleeve1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel1b type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare1b type EXPLODE_ON_HIT | FIRE | FALL;
		explode barrel1a type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare1a type EXPLODE_ON_HIT | FIRE | FALL;
		explode dish type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
	return corpsetype;
}
