piece body,head,tail,lthigh,lknee,lshin,lfoot,rthigh,rknee,rshin,rfoot,lforearm,lupperarm,lblade,rforearm,rupperarm,rblade;

static-var aMoving, bMoving, lasthit;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			16

#include "sfxtype.h"
#include "exptype.h"
#define BODYSCALE 10
//Animation helper info: each 'stride' moves about 60 elmos, or 2 elmos per 
//GET_CURRENT SPEED returns current speed in elmos/frame


walk()
{
	while (aMoving){
		bMoving = TRUE;
	if (aMoving) { // step 1, ankle dist = 17
			turn lthigh to x-axis <40> now;
			turn lknee to x-axis <-15> now;
			turn lshin to x-axis <-1> now;
			turn lfoot to x-axis <-26> now;
			
			turn lthigh to z-axis <-3> now;
			turn lupperarm to z-axis <-1> now;
			
			turn body to z-axis <3> now;
		
			move body to y-axis [7] now;
			turn head to x-axis <-5> now;
			turn head to y-axis <-3> now;
			turn tail to y-axis <7> now;
			turn tail to x-axis <7> now;
			sleep 95;
		}
	if (aMoving) { // step 2, ankle dist = 14.5
			turn lthigh to x-axis <75> now;
			turn lknee to x-axis <-40> now;
			turn lshin to x-axis <20> now;
			turn lfoot to x-axis <-35> now;
			
			turn lthigh to z-axis <-5> now;
			turn lupperarm to z-axis <0> now;
			
			turn body to z-axis <5> now;
		
			move body to y-axis [10] now;
			turn head to x-axis <-10> now;
			turn head to y-axis <-5> now;
			turn tail to y-axis <12> now;
			turn tail to x-axis <0> now;
			sleep 95;
		}
	if (aMoving) { // step 3, ankle dist = 10
			turn lthigh to x-axis <40> now;
			turn lknee to x-axis <-11> now;
			turn lshin to x-axis <13> now;
			turn lfoot to x-axis <-61> now;
			
			turn lthigh to z-axis <-3> now;
			turn lupperarm to z-axis <-1> now;
			
			turn body to z-axis <3> now;
		
			move body to y-axis [7] now;
			turn head to x-axis <-5> now;
			turn head to y-axis <-3> now;
			turn tail to y-axis <7> now;
			turn tail to x-axis <-7> now;
			sleep 95;
		}
	if (aMoving) { // step 4, ankle dist = 0
			turn lthigh to x-axis <15> now;
			turn lknee to x-axis <17> now;
			turn lshin to x-axis <-60> now;
			turn lfoot to x-axis <30> now;
			
			turn lthigh to z-axis <0> now;
			turn lupperarm to z-axis <-3> now;
			
			turn body to z-axis <0> now;
		
			move body to y-axis [0] now;
			turn head to x-axis <0> now;
			turn head to y-axis <0> now;
			turn tail to y-axis <0> now;
			turn tail to x-axis <0> now;
			sleep 95;
		}
	if (aMoving) { // step 5, ankle dist = 8
			turn lthigh to x-axis <-10> now;
			turn lknee to x-axis <-30> now;
			turn lshin to x-axis <-26> now;
			turn lfoot to x-axis <-60> now;
			
			turn lthigh to z-axis <3> now;
			turn lupperarm to z-axis <-1> now;
			
			turn body to z-axis <-3> now;
		
			move body to y-axis [7] now;
			turn head to x-axis <-5> now;
			turn head to y-axis <3> now;
			turn tail to y-axis <-7> now;
			turn tail to x-axis <7> now;
			sleep 95;
		}
	if (aMoving) { // step 6, ankle dist = 13
			turn lthigh to x-axis <-20> now;
			turn lknee to x-axis <-68> now;
			turn lshin to x-axis <34> now;
			turn lfoot to x-axis <30> now;
			
			turn lthigh to z-axis <5> now;
			turn lupperarm to z-axis <0> now;
			
			turn body to z-axis <-5> now;
		
			move body to y-axis [10] now;
			turn head to x-axis <-10> now;
			turn head to y-axis <6> now;
			turn tail to y-axis <-12> now;
			turn tail to x-axis <0> now;
			sleep 95;
		}
	if (aMoving) { // step 7, ankle dist = 8
			turn lthigh to x-axis <-13> now;
			turn lknee to x-axis <-52> now;
			turn lshin to x-axis <7> now;
			turn lfoot to x-axis <58> now;
			
			turn lthigh to z-axis <3> now;
			turn lupperarm to z-axis <-2> now;
			
			turn body to z-axis <3> now;
		
			move body to y-axis [7] now;			
			turn head to x-axis <-10> now;
			turn head to y-axis <3> now;
			turn tail to y-axis <-12> now;
			turn tail to x-axis <0> now;
			sleep 95;
		}
	if (aMoving) { // step 8, ankle dist = 0
			turn lthigh to x-axis <0> now;
			turn lknee to x-axis <0> now;
			turn lshin to x-axis <0> now;
			turn lfoot to x-axis <0> now;
			
			turn lthigh to z-axis <0> now;
			turn lupperarm to z-axis <-5> now;
			
			turn body to z-axis <0> now;
		
			move body to y-axis [0] now;			
			turn head to x-axis <0> now;
			turn head to y-axis <0> now;
			turn tail to y-axis <0> now;
			turn tail to x-axis <0> now;
			sleep 95;
		}
	}
}



Halt()
{	
	sleep 150;
	if(!aMoving)
	{
		bMoving = FALSE;
		turn lfoot		to x-axis <0> 		speed <200>;
		turn rfoot		to x-axis <0> 		speed <200>;
		turn rthigh 	to x-axis <0> 		speed <200>;
		turn lthigh 	to x-axis <0> 		speed <200>;
		turn lshin  	to x-axis <0> 		speed <200>;
		turn rshin 		to x-axis <0> 		speed <200>;
		turn lknee  	to x-axis <0> 		speed <200>;
		turn rknee 		to x-axis <0> 		speed <200>;
	}
}

StartMoving()
{
	aMoving = TRUE;
	if (!bMoving)
	{
		start-script Walk();
	}
}

StopMoving()
{
	aMoving = FALSE;
	start-script Halt();
}

HitByWeapon(anglex, anglez)
{
	turn body to z-axis anglez speed <105.000000>;
	turn body to x-axis <0> - anglex speed <105.000000>;
	wait-for-turn body around z-axis;
	wait-for-turn body around x-axis;
	turn body to z-axis <0.000000> speed <30.000000>;
	turn body to x-axis <0.000000> speed <30.000000>;
}
Create()
{
	emit-sfx 1024+2 from body;
}

SweetSpot(piecenum)
	{	piecenum=body;	}	
	
AimFromPrimary(piecenum)
	{	piecenum=head;	}

QueryPrimary(piecenum)
	{	piecenum=head; }

RestoreAfterDelay()
	{
	sleep 1000;
	}

AimPrimary(heading,pitch)
	{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn head to y-axis heading speed <250>;
	turn head to x-axis 0 -pitch speed <200>;
		
	wait-for-turn head around y-axis;
	start-script RestoreAfterDelay();
	
	return(TRUE);
	}
	
Shot1()
	{
	turn lforearm to y-axis <-140> speed <600>;
	turn rforearm to y-axis <140> speed <600>;
	turn lblade to y-axis <140> speed <600>;
	turn rblade to y-axis <-140> speed <600>;
	wait-for-turn rblade around y-axis;
	turn lforearm to y-axis <0> speed <120>;
	turn rforearm to y-axis <0> speed <120>;
	turn lblade to y-axis <0> speed <120>;
	turn rblade to y-axis <0> speed <120>;
	}

Killed( severity, corpsetype ) 
	{
	corpsetype = 1;
	emit-sfx 1025 from body;
	explode head type FALL | NOHEATCLOUD;
	explode tail type FALL | NOHEATCLOUD;
	explode lblade type FALL | NOHEATCLOUD;
	explode rblade type FALL | NOHEATCLOUD;
	return(corpsetype);
	}