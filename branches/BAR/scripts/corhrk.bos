#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, torso, lthigh, rthigh, rleg, rfoot, lleg,
       lfoot, head, launcher;

static-var  gun_1, Static_Var_2, bMoving, bAiming, Static_Var_5,
            restore_delay, Static_Var_7, statechg_DesiredState, statechg_StateChanging;

// Signal definitions
#define SIG_AIM				2


walk()
{
	if( TRUE )
	{
		move torso to y-axis [-0.375000] now;
		move lthigh to y-axis [0.385315] now;
		move lthigh to z-axis [-0.114990] now;
		move rthigh to y-axis [-0.489670] now;
		move rthigh to z-axis [-0.114990] now;
		turn lthigh to x-axis <12.307692> now;
		turn rthigh to x-axis <-45.357143> now;
		turn rleg to x-axis <-19.340659> now;
		turn rfoot to x-axis <65.054945> now;
		turn lleg to x-axis <4.923077> now;
		turn lfoot to x-axis <-4.571429> now;
		sleep 90;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.125000] now;
		move lthigh to y-axis [0.260315] now;
		move rthigh to y-axis [0.010315] now;
		turn lthigh to x-axis <16.879121> now;
		turn rthigh to x-axis <-55.906593> now;
		turn rleg to x-axis <5.972527> now;
		turn rfoot to x-axis <49.934066> now;
		turn lleg to x-axis <-1.406593> now;
		turn lfoot to x-axis <4.571429> now;
		sleep 120;
	}
	if( TRUE )
	{
		move torso to y-axis [0.000000] now;
		move rthigh to y-axis [-0.364670] now;
		turn lthigh to x-axis <20.395604> now;
		turn rthigh to x-axis <-30.593407> now;
		turn rleg to x-axis <-9.494505> now;
		turn rfoot to x-axis <40.087912> now;
		turn lleg to x-axis <-5.978022> now;
		turn lfoot to x-axis <12.302198> now;
		sleep 117;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.750000] now;
		move lthigh to y-axis [0.635315] now;
		move rthigh to y-axis [0.885315] now;
		turn lthigh to x-axis <19.340659> now;
		turn rthigh to x-axis <-13.362637> now;
		turn rleg to x-axis <-5.626374> now;
		turn rfoot to x-axis <18.989011> now;
		turn lleg to x-axis <-21.802198> now;
		turn lfoot to x-axis <29.884615> now;
		sleep 113;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.375000] now;
		move lthigh to y-axis [-0.364670] now;
		move rthigh to y-axis [-0.364670] now;
		turn lthigh to x-axis <4.571429> now;
		turn rthigh to x-axis <-1.439560> now;
		turn rleg to x-axis <-9.016484> now;
		turn rleg to y-axis <0.351648> now;
		turn rfoot to x-axis <10.719780> now;
		turn lleg to x-axis <-41.142857> now;
		turn lfoot to x-axis <46.763736> now;
		sleep 52;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.250000] now;
		move lthigh to x-axis [0.062500] now;
		move lthigh to y-axis [0.260315] now;
		move rthigh to y-axis [-0.364670] now;
		turn lthigh to x-axis <-18.456044> now;
		turn rthigh to x-axis <-0.131868> now;
		turn rleg to x-axis <-5.769231> now;
		turn rfoot to x-axis <5.835165> now;
		turn lleg to x-axis <-30.412088> now;
		turn lfoot to x-axis <51.340659> now;
		sleep 53;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.125000] now;
		move lthigh to x-axis [0.125000] now;
		move lthigh to y-axis [-0.614670] now;
		move rthigh to y-axis [-0.239670] now;
		turn lthigh to x-axis <-38.681319> now;
		turn rthigh to x-axis <4.219780> now;
		turn rleg to x-axis <-0.703297> now;
		turn rfoot to x-axis <0.346154> now;
		turn lleg to x-axis <-19.692308> now;
		turn lfoot to x-axis <55.912088> now;
		sleep 113;
	}
	if( TRUE )
	{
		move torso to y-axis [0.000000] now;
		move lthigh to x-axis [0.000000] now;
		move lthigh to y-axis [-0.364670] now;
		move rthigh to y-axis [-0.364670] now;
		turn lthigh to x-axis <-53.802198> now;
		turn rthigh to x-axis <12.302198> now;
		turn rleg to x-axis <-0.351648> now;
		turn rfoot to x-axis <0.346154> now;
		turn lleg to x-axis <4.219780> now;
		turn lfoot to x-axis <49.582418> now;
		sleep 104;
	}
	if( TRUE )
	{
		move lthigh to x-axis [0.125000] now;
		move lthigh to y-axis [-0.114670] now;
		move rthigh to y-axis [-0.239670] now;
		turn lthigh to x-axis <-35.164835> now;
		turn rthigh to x-axis <22.148352> now;
		turn rleg to x-axis <-9.494505> now;
		turn rfoot to x-axis <19.335165> now;
		turn lleg to x-axis <-5.978022> now;
		turn lfoot to x-axis <41.494505> now;
		sleep 115;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.750000] now;
		move lthigh to x-axis [0.125000] now;
		move lthigh to y-axis [0.385315] now;
		move rthigh to y-axis [-0.114670] now;
		turn lthigh to x-axis <-8.439560> now;
		turn rthigh to x-axis <18.285714> now;
		turn rleg to x-axis <-24.263736> now;
		turn rfoot to x-axis <31.291209> now;
		turn lleg to x-axis <-10.197802> now;
		turn lfoot to x-axis <18.637363> now;
		sleep 108;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.625000] now;
		move lthigh to x-axis [0.125000] now;
		move lthigh to y-axis [0.010315] now;
		move rthigh to y-axis [-0.364670] now;
		turn lthigh to x-axis <2.109890> now;
		turn rthigh to x-axis <8.785714> now;
		turn rleg to x-axis <-36.571429> now;
		turn rfoot to x-axis <41.137363> now;
		turn lleg to x-axis <-5.274725> now;
		turn lfoot to x-axis <2.461538> now;
		sleep 110;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.500000] now;
		move lthigh to y-axis [0.260315] now;
		move rthigh to y-axis [-0.114685] now;
		turn lthigh to x-axis <5.269231> now;
		turn rthigh to x-axis <-8.087912> now;
		turn rleg to x-axis <-34.461538> now;
		turn rfoot to x-axis <53.796703> now;
		turn lleg to x-axis <2.813187> now;
		turn lfoot to x-axis <-7.736264> now;
		sleep 62;
	}
	move torso to y-axis [-0.437500] now;
	move lthigh to x-axis [0.062500] now;
	move lthigh to y-axis [0.385315] now;
	move rthigh to y-axis [0.135315] now;
	turn lthigh to x-axis <8.785714> now;
	turn rthigh to x-axis <-26.725275> now;
	turn rleg to x-axis <-26.895604> now;
	turn rleg to y-axis <0.170330> now;
	turn rfoot to x-axis <59.423077> now;
	turn lleg to x-axis <3.862637> now;
	turn lfoot to x-axis <-6.153846> now;
	sleep 61;
	return (0);
}

walklegs()
{
	if( TRUE )
	{
		move torso to y-axis [-0.375000] now;
		move lthigh to y-axis [0.760315] now;
		move lthigh to z-axis [-0.114990] now;
		move rthigh to y-axis [-0.489670] now;
		move rthigh to z-axis [-0.114990] now;
		turn lthigh to x-axis <12.307692> now;
		turn rthigh to x-axis <-45.357143> now;
		turn rleg to x-axis <-19.340659> now;
		turn rfoot to x-axis <65.054945> now;
		turn lleg to x-axis <4.923077> now;
		turn lfoot to x-axis <-4.571429> now;
		sleep 90;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.125000] now;
		move lthigh to y-axis [0.135300] now;
		move rthigh to y-axis [-0.114670] now;
		turn lthigh to x-axis <16.879121> now;
		turn rthigh to x-axis <-55.906593> now;
		turn rleg to x-axis <5.972527> now;
		turn rfoot to x-axis <49.934066> now;
		turn lleg to x-axis <-1.406593> now;
		turn lfoot to x-axis <4.571429> now;
		sleep 120;
	}
	if( TRUE )
	{
		move torso to y-axis [0.000000] now;
		move lthigh to y-axis [0.385315] now;
		move rthigh to y-axis [-0.364685] now;
		turn lthigh to x-axis <20.395604> now;
		turn rthigh to x-axis <-30.593407> now;
		turn rleg to x-axis <-9.494505> now;
		turn rfoot to x-axis <40.087912> now;
		turn lleg to x-axis <-5.978022> now;
		turn lfoot to x-axis <12.302198> now;
		sleep 117;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.750000] now;
		move lthigh to y-axis [0.760315] now;
		move rthigh to y-axis [1.135315] now;
		turn lthigh to x-axis <19.340659> now;
		turn rthigh to x-axis <-13.362637> now;
		turn rleg to x-axis <-5.626374> now;
		turn rfoot to x-axis <18.989011> now;
		turn lleg to x-axis <-21.802198> now;
		turn lfoot to x-axis <29.884615> now;
		sleep 113;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.375000] now;
		move lthigh to y-axis [-0.864685] now;
		move rthigh to y-axis [-0.364670] now;
		turn lthigh to x-axis <4.571429> now;
		turn rthigh to x-axis <-1.439560> now;
		turn rleg to x-axis <-9.016484> now;
		turn rleg to y-axis <0.351648> now;
		turn rfoot to x-axis <10.719780> now;
		turn lleg to x-axis <-41.142857> now;
		turn lfoot to x-axis <46.763736> now;
		sleep 52;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.250000] now;
		move lthigh to x-axis [0.062500] now;
		move lthigh to y-axis [-0.239670] now;
		turn lthigh to x-axis <-18.456044> now;
		turn rthigh to x-axis <-0.131868> now;
		turn rleg to x-axis <-5.769231> now;
		turn rfoot to x-axis <5.835165> now;
		turn lleg to x-axis <-30.412088> now;
		turn lfoot to x-axis <51.340659> now;
		sleep 53;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.125000] now;
		move lthigh to x-axis [0.125000] now;
		move lthigh to y-axis [0.260315] now;
		move rthigh to y-axis [0.010315] now;
		turn lthigh to x-axis <-38.681319> now;
		turn rthigh to x-axis <4.219780> now;
		turn rleg to x-axis <-0.703297> now;
		turn rfoot to x-axis <0.346154> now;
		turn lleg to x-axis <-19.692308> now;
		turn lfoot to x-axis <55.912088> now;
		sleep 113;
	}
	if( TRUE )
	{
		move torso to y-axis [0.000000] now;
		move lthigh to x-axis [0.000000] now;
		move lthigh to y-axis [0.010315] now;
		move rthigh to y-axis [-0.114670] now;
		turn lthigh to x-axis <-53.802198> now;
		turn rthigh to x-axis <12.302198> now;
		turn rleg to x-axis <-0.351648> now;
		turn rfoot to x-axis <0.346154> now;
		turn lleg to x-axis <4.219780> now;
		turn lfoot to x-axis <49.582418> now;
		sleep 104;
	}
	if( TRUE )
	{
		move lthigh to x-axis [0.125000] now;
		move lthigh to y-axis [-0.114685] now;
		move rthigh to y-axis [0.010315] now;
		turn lthigh to x-axis <-35.164835> now;
		turn rthigh to x-axis <22.148352> now;
		turn rleg to x-axis <-9.494505> now;
		turn rfoot to x-axis <19.335165> now;
		turn lleg to x-axis <-5.978022> now;
		turn lfoot to x-axis <41.494505> now;
		sleep 115;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.750000] now;
		move lthigh to x-axis [0.125000] now;
		move lthigh to y-axis [0.510315] now;
		move rthigh to y-axis [-0.114670] now;
		turn lthigh to x-axis <-8.439560> now;
		turn rthigh to x-axis <18.285714> now;
		turn rleg to x-axis <-24.263736> now;
		turn rfoot to x-axis <31.291209> now;
		turn lleg to x-axis <-10.197802> now;
		turn lfoot to x-axis <18.637363> now;
		sleep 108;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.625000] now;
		move lthigh to x-axis [0.125000] now;
		move lthigh to y-axis [0.135315] now;
		move rthigh to y-axis [-0.614670] now;
		turn lthigh to x-axis <2.109890> now;
		turn rthigh to x-axis <8.785714> now;
		turn rleg to x-axis <-36.571429> now;
		turn rfoot to x-axis <41.137363> now;
		turn lleg to x-axis <-5.274725> now;
		turn lfoot to x-axis <2.461538> now;
		sleep 110;
	}
	if( TRUE )
	{
		move torso to y-axis [-0.500000] now;
		move lthigh to y-axis [0.135300] now;
		move rthigh to y-axis [-0.239670] now;
		turn lthigh to x-axis <5.269231> now;
		turn rthigh to x-axis <-8.087912> now;
		turn rleg to x-axis <-34.461538> now;
		turn rfoot to x-axis <53.796703> now;
		turn lleg to x-axis <2.813187> now;
		turn lfoot to x-axis <-7.736264> now;
		sleep 62;
	}
	move torso to y-axis [-0.437500] now;
	move lthigh to x-axis [0.062500] now;
	move lthigh to y-axis [0.510300] now;
	move rthigh to y-axis [0.135315] now;
	turn lthigh to x-axis <8.785714> now;
	turn rthigh to x-axis <-26.725275> now;
	turn rleg to x-axis <-26.895604> now;
	turn rleg to y-axis <0.170330> now;
	turn rfoot to x-axis <59.423077> now;
	turn lleg to x-axis <3.862637> now;
	turn lfoot to x-axis <-6.153846> now;
	sleep 61;
	return (0);
}

stand()
{
	move lthigh to y-axis [0.000000] now;
	move rthigh to x-axis [0.000000] now;
	move rthigh to y-axis [0.000000] now;
	move rfoot to x-axis [0.000000] now;
	move lleg to x-axis [0.000000] now;
	sleep 200;
	return (0);
}

activatescr()
{
	if( TRUE )
	{
		move lthigh to y-axis [0.000000] now;
		move rthigh to x-axis [0.000000] now;
		move rthigh to y-axis [0.000000] now;
		move rfoot to x-axis [0.000000] now;
		move lleg to x-axis [0.000000] now;
		move flare1 to z-axis [0.000000] now;
		move flare1 to z-axis [23.125000] speed [46.906693];
		move flare2 to z-axis [0.000000] now;
		move flare2 to z-axis [23.000000] speed [46.653152];
		sleep 493;
	}
	sleep 9;
	return (0);
}

deactivatescr()
{
	if( TRUE )
	{
		move lthigh to y-axis [0.000000] now;
		move rthigh to x-axis [0.000000] now;
		move rthigh to y-axis [0.000000] now;
		move rfoot to x-axis [0.000000] now;
		move lleg to x-axis [0.000000] now;
		move flare1 to z-axis [23.125000] now;
		move flare1 to z-axis [0.000000] speed [2312.500168];
		move flare2 to z-axis [23.000000] now;
		move flare2 to z-axis [0.000000] speed [2300.001083];
		sleep 10;
	}
	sleep 10;
	return (0);
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Go()
{
	call-script activatescr();
	Static_Var_2 = 1;
	return (0);
}

Stop()
{
	Static_Var_2 = 0;
	call-script deactivatescr();
	return (0);
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	return (0);
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
	return (0);
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_5 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_5 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_5 = 1;
			if( justmoved )
			{
				call-script stand();
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
	return (0);
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_5 = 1;
	gun_1 = flare2;
	hide flare1;
	hide flare2;
	Static_Var_2 = 0;
	restore_delay = 200;
	call-script InitState();
	start-script MotionControl();
	start-script SmokeUnit();
	return (0);
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1;
	return (0);
}

StartMoving()
{
	bMoving = TRUE;
	return (0);
}

StopMoving()
{
	bMoving = FALSE;
	return (0);
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn head to y-axis <0.000000> speed <90.021978>;
	turn launcher to x-axis <0.000000> speed <45.010989>;
	bAiming = FALSE;
	return (0);
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_5 )
	{
		sleep 100;
	}
	turn head to y-axis heading speed <150.032967>;
	turn launcher to x-axis <-90.021978> speed <200.043956>;
	wait-for-turn head around y-axis;
	wait-for-turn launcher around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 1 )
	{
		gun_1 = torso;
		return (0);
	}
	if( gun_1 == 2 )
	{
		Static_Var_2 = 0;
		gun_1 = flare2;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
	return (0);
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 2 )
	{
		piecenum = flare2;
	}
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = torso;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode rfoot type BITMAPONLY | BITMAP2;
		explode head type BITMAPONLY | BITMAP5;
		explode launcher type BITMAPONLY | BITMAP1;
		explode lleg type BITMAPONLY | BITMAP2;
		explode rleg type BITMAPONLY | BITMAP2;
		explode flare1 type BITMAPONLY | BITMAP3;
		explode flare2 type BITMAPONLY | BITMAP3;
		explode lthigh type BITMAPONLY | BITMAP4;
		explode rthigh type BITMAPONLY | BITMAP4;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lfoot type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP2;
		explode head type FALL | SMOKE | BITMAP5;
		explode launcher type BITMAPONLY | BITMAP1;
		explode lleg type FALL | BITMAP2;
		explode rleg type FALL | BITMAP2;
		explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lthigh type FALL | BITMAP4;
		explode rthigh type FALL | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode head type FALL | SMOKE | FIRE | BITMAP5;
		explode launcher type BITMAPONLY | BITMAP1;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode flare1 type FALL | SMOKE | FIRE | BITMAP3;
		explode flare2 type FALL | SMOKE | FIRE | BITMAP3;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode head type FALL | SMOKE | FIRE | BITMAP5;
	explode launcher type BITMAPONLY | BITMAP1;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode flare1 type FALL | SMOKE | FIRE | BITMAP3;
	explode flare2 type FALL | SMOKE | FIRE | BITMAP3;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	return (0);
}
