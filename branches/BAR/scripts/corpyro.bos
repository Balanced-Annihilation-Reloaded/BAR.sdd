#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, ruparm, luparm, flare, pelvis, rleg, rfoot,
       lleg, lfoot, lthigh, rthigh;

static-var  bMoving, bAiming, Static_Var_3, restore_delay;

// Signal definitions
#define SIG_AIM				4

lua_FlameShot(weapon) //Distortion and lups flame effect
{
  return 0;
}

walk()
{
	//2.75*30= 82.5 elmos per sec
	//

	//step 0
	if (bMoving)
	{
		turn rthigh to x-axis <0> speed <340.000000>;
		turn rleg to x-axis <0> speed <140.000000>;
		turn rfoot to x-axis <0> speed <480.000000>;
		turn lthigh to x-axis <19> speed <150.000000>;
		turn lleg to x-axis <-17> speed <300.000000>;
		turn lfoot to x-axis <0> speed <480.000000>;

		turn torso to x-axis <0> speed <50.000000>;
		turn pelvis to z-axis <0> speed <60.000000>;

		sleep 97;
	}
	//step 1
	if (bMoving)
	{
		turn rthigh to x-axis <8> speed <80.000000>;
		turn rleg to x-axis <34> speed <340.000000>;
		turn rfoot to x-axis <-42> speed <420.000000>;
		turn lthigh to x-axis <-31> speed <500.000000>;
		turn lleg to x-axis <-32> speed <150.000000>;
		turn lfoot to x-axis <61> speed <610.000000>;

		turn torso to x-axis <5> speed <50.000000>;
		turn pelvis to z-axis <-6> speed <60.000000>;

		sleep 97;
	}

	//step 2
	if (bMoving)
	{
		turn rthigh to x-axis <14> speed <60.000000>;
		turn rleg to x-axis <53> speed <190.000000>;
		turn rfoot to x-axis <-51> speed <90.000000>;
		turn lthigh to x-axis <-75> speed <440.000000>;
		turn lleg to x-axis <-6> speed <110.000000>;
		turn lfoot to x-axis <65> speed <40.000000>;

		turn torso to x-axis <7> speed <20.000000>;
		turn pelvis to z-axis <-9> speed <30.000000>;

		sleep 97;
	}

	//step 3
	if (bMoving)
	{
		turn rthigh to x-axis <34> speed <200.000000>;
		turn rleg to x-axis <13> speed <400.000000>;
		turn rfoot to x-axis <-48> speed <30.000000>;
		turn lthigh to x-axis <-34> speed <410.000000>;
		turn lleg to x-axis <-14> speed <80.000000>;
		turn lfoot to x-axis <48> speed <170.000000>;

		turn torso to x-axis <5> speed <20.000000>;
		turn pelvis to z-axis <-6> speed <30.000000>;

		sleep 97;
	}

	//step 4
	if (bMoving)
	{
		turn rthigh to x-axis <19> speed <150.000000>;
		turn rleg to x-axis <-17> speed <300.000000>;
		turn rfoot to x-axis <0> speed <480.000000>;
		turn lthigh to x-axis <0> speed <340.000000>;
		turn lleg to x-axis <0> speed <140.000000>;
		turn lfoot to x-axis <0> speed <480.000000>;

		turn torso to x-axis <0> speed <50.000000>;
		turn pelvis to z-axis <0> speed <60.000000>;

		sleep 97;
	}

	//step 5
	if (bMoving)
	{
		turn rthigh to x-axis <-31> speed <500.000000>;
		turn rleg to x-axis <-32> speed <150.000000>;
		turn rfoot to x-axis <61> speed <610.000000>;
		turn lthigh to x-axis <8> speed <80.000000>;
		turn lleg to x-axis <34> speed <340.000000>;
		turn lfoot to x-axis <-42> speed <420.000000>;

		turn torso to x-axis <5> speed <50.000000>;
		turn pelvis to z-axis <6> speed <60.000000>;

		sleep 97;
	}

	//step 6
	if (bMoving)
	{
		turn rthigh to x-axis <-75> speed <440.000000>;
		turn rleg to x-axis <-6> speed <260.000000>;
		turn rfoot to x-axis <65> speed <40.000000>;
		turn lthigh to x-axis <14> speed <60.000000>;
		turn lleg to x-axis <53> speed <190.000000>;
		turn lfoot to x-axis <-51> speed <90.000000>;

		turn torso to x-axis <7> speed <20.000000>;
		turn pelvis to z-axis <9> speed <30.000000>;

		sleep 97;
	}

	//step 7
	if (bMoving)
	{
		turn rthigh to x-axis <-34> speed <410.000000>;
		turn rleg to x-axis <-14> speed <80.000000>;
		turn rfoot to x-axis <48> speed <170.000000>;
		turn lthigh to x-axis <34> speed <200.000000>;
		turn lleg to x-axis <13> speed <400.000000>;
		turn lfoot to x-axis <-48> speed <30.000000>;

		turn torso to x-axis <5> speed <20.000000>;
		turn pelvis to z-axis <6> speed <30.000000>;

		sleep 97;
	}

}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walk();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				turn rthigh to x-axis <0> speed <340.000000>;
				turn rleg to x-axis <0> speed <140.000000>;
				turn rfoot to x-axis <0> speed <480.000000>;
				turn lthigh to x-axis <0> speed <350.000000>;
				turn lleg to x-axis <0> speed <300.000000>;
				turn lfoot to x-axis <0> speed <480.000000>;
		
				turn torso to x-axis <0> speed <50.000000>;
				turn pelvis to z-axis <0> speed <60.000000>;
		

				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
					turn ruparm to x-axis <0.000000> speed <200.000000>;
					turn luparm to x-axis <0.000000> speed <200.000000>;
				}
				justmoved = FALSE;
			}
			sleep 97;
		}
	}
}

PilotLight(Func_Var_1)
{
	while( TRUE )
	{
		while( bAiming )
		{
			sleep 100;
		}
		emit-sfx 1024 + 0 from flare;
		sleep 150;
	}
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	restore_delay = 2000;
	start-script MotionControl();
	start-script PilotLight();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn ruparm to x-axis <0.000000> speed <45.000000>;
	turn luparm to x-axis <0.000000> speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <275.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <110.000000>;
	turn ruparm to x-axis <0.000000> - pitch speed <110.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Shot1()
{
	call-script lua_FlameShot(1);
	return (TRUE);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode flare type BITMAPONLY | BITMAP1;
		explode lfoot type BITMAPONLY | BITMAP1;
		explode lleg type BITMAPONLY | BITMAP2;
		explode lthigh type BITMAPONLY | BITMAP4;
		explode luparm type BITMAPONLY | BITMAP5;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode rfoot type BITMAPONLY | BITMAP2;
		explode rleg type BITMAPONLY | BITMAP3;
		explode rthigh type BITMAPONLY | BITMAP4;
		explode ruparm type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode flare type FALL | BITMAP1;
		explode lfoot type FALL | BITMAP1;
		explode lleg type FALL | BITMAP2;
		explode lthigh type FALL | BITMAP4;
		explode luparm type FALL | BITMAP5;
		explode pelvis type FALL | BITMAP1;
		explode rfoot type FALL | BITMAP2;
		explode rleg type FALL | BITMAP3;
		explode rthigh type FALL | BITMAP4;
		explode ruparm type SHATTER | BITMAP5;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lfoot type FALL | SMOKE | FIRE | BITMAP1;
		explode lleg type FALL | SMOKE | FIRE | BITMAP2;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode pelvis type FALL | SMOKE | FIRE | BITMAP1;
		explode rfoot type FALL | SMOKE | FIRE | BITMAP2;
		explode rleg type FALL | SMOKE | FIRE | BITMAP3;
		explode rthigh type FALL | SMOKE | FIRE | BITMAP4;
		explode ruparm type SHATTER | EXPLODE_ON_HIT | BITMAP5;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lfoot type FALL | SMOKE | FIRE | BITMAP1;
	explode lleg type FALL | SMOKE | FIRE | BITMAP2;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode pelvis type FALL | SMOKE | FIRE | BITMAP1;
	explode rfoot type FALL | SMOKE | FIRE | BITMAP2;
	explode rleg type FALL | SMOKE | FIRE | BITMAP3;
	explode rthigh type FALL | SMOKE | FIRE | BITMAP4;
	explode ruparm type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode torso type BITMAPONLY | BITMAP5;
}
