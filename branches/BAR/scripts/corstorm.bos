#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, rfirept, lfirept, pelvis, rfoot, lfoot, launcher, lthigh,
       rthigh, rleg, lleg, turret, base,rexhaust,lexhaust;

static-var  gun_1, moveSpeed, currentSpeed, animSpeed;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM				4


walk()
{
	while( TRUE )
	{
		move pelvis to y-axis [0.750000] speed [11.250000] * 100 / currentSpeed;
		move rfoot to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move launcher to y-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <-10.186813> speed <152.802195> * 100 / currentSpeed;
		turn lthigh to x-axis <11.884615> speed <178.269225> * 100 / currentSpeed;
		turn rthigh to x-axis <7.857143> speed <117.857145> * 100 / currentSpeed;
		turn rthigh to y-axis <0.000000> now;
		turn rleg to x-axis <0.000000> now;
		turn rfoot to x-axis <5.439560> speed <81.593400> * 100 / currentSpeed;
		turn lleg to x-axis <-24.923077> speed <373.846155> * 100 / currentSpeed;
		turn lfoot to x-axis <13.032967> speed <195.494505> * 100 / currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.300000] speed [6.750000] * 100 / currentSpeed;
		turn pelvis to y-axis <0.153846> speed <2.307690> * 100 / currentSpeed;
		turn torso to x-axis <-8.065934> speed <31.813185> * 100 / currentSpeed;
		turn lthigh to x-axis <21.758242> speed <148.104405> * 100 / currentSpeed;
		turn rthigh to x-axis <-14.010989> speed <328.021980> * 100 / currentSpeed;
		turn rleg to x-axis <-5.093407> speed <76.401105> * 100 / currentSpeed;
		turn rfoot to x-axis <4.670330> speed <11.538450> * 100 / currentSpeed;
		turn lleg to x-axis <-8.912088> speed <240.164835> * 100 / currentSpeed;
		turn lfoot to x-axis <-7.917582> speed <314.258235> * 100 / currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.150000] speed [2.250000] * 100 / currentSpeed;
		turn pelvis to y-axis <-0.104396> speed <3.873630> * 100 / currentSpeed;
		turn torso to x-axis <-5.939560> speed <31.895610> * 100 / currentSpeed;
		turn lthigh to x-axis <28.247253> speed <97.335165> * 100 / currentSpeed;
		turn rthigh to x-axis <-14.857143> speed <12.692310> * 100 / currentSpeed;
		turn rleg to x-axis <-51.598901> speed <697.582410> * 100 / currentSpeed;
		turn rfoot to x-axis <46.274725> speed <624.065925> * 100 / currentSpeed;
		turn lleg to x-axis <-4.241758> speed <70.054950> * 100 / currentSpeed;
		turn lfoot to x-axis <-14.203297> speed <94.285725> * 100 / currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] speed [2.250000] * 100 / currentSpeed;
		turn pelvis to y-axis <-0.016484> speed <1.318680> * 100 / currentSpeed;
		turn torso to x-axis <2.120879> speed <120.906585> * 100 / currentSpeed;
		turn lthigh to x-axis <36.923077> speed <130.137360> * 100 / currentSpeed;
		turn rthigh to x-axis <-15.708791> speed <12.774720> * 100 / currentSpeed;
		turn rleg to x-axis <-30.659341> speed <314.093400> * 100 / currentSpeed;
		turn rfoot to x-axis <44.961538> speed <19.697805> * 100 / currentSpeed;
		turn lleg to x-axis <0.000000> speed <63.626370> * 100 / currentSpeed;
		turn lfoot to x-axis <-14.010989> speed <2.884620> * 100 / currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.300000] speed [4.500000] * 100 / currentSpeed;
		turn pelvis to y-axis <-0.192308> speed <2.637360> * 100 / currentSpeed;
		turn torso to x-axis <-2.120879> speed <63.626370> * 100 / currentSpeed;
		turn lthigh to x-axis <24.521978> speed <186.016485> * 100 / currentSpeed;
		turn rthigh to x-axis <-10.741758> speed <74.505495> * 100 / currentSpeed;
		turn rleg to x-axis <-23.054945> speed <114.065940> * 100 / currentSpeed;
		turn rfoot to x-axis <34.500000> speed <156.923070> * 100 / currentSpeed;
		turn lleg to x-axis <8.439560> speed <126.593400> * 100 / currentSpeed;
		turn lfoot to x-axis <-12.840659> speed <17.554950> * 100 / currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.450000] speed [2.250000] * 100 / currentSpeed;
		turn pelvis to y-axis <-0.131868> speed <0.906600> * 100 / currentSpeed;
		turn torso to x-axis <-8.065934> speed <89.175825> * 100 / currentSpeed;
		turn lthigh to x-axis <10.038462> speed <217.252740> * 100 / currentSpeed;
		turn rthigh to x-axis <-3.956044> speed <101.785710> * 100 / currentSpeed;
		turn rleg to x-axis <-28.708791> speed <84.807690> * 100 / currentSpeed;
		turn rfoot to x-axis <32.741758> speed <26.373630> * 100 / currentSpeed;
		turn lleg to x-axis <1.054945> speed <110.769225> * 100 / currentSpeed;
		turn lfoot to x-axis <-7.214286> speed <84.395595> * 100 / currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.600000] speed [2.250000] * 100 / currentSpeed;
		turn pelvis to y-axis <0.000000> speed <1.978020> * 100 / currentSpeed;
		turn torso to x-axis <-10.186813> speed <31.813185> * 100 / currentSpeed;
		turn lthigh to x-axis <-13.587912> speed <354.395610> * 100 / currentSpeed;
		turn rthigh to x-axis <11.884615> speed <237.609885> * 100 / currentSpeed;
		turn rleg to x-axis <-16.131868> speed <188.653845> * 100 / currentSpeed;
		turn rfoot to x-axis <4.241758> speed <427.500000> * 100 / currentSpeed;
		turn lleg to x-axis <4.571429> speed <52.747260> * 100 / currentSpeed;
		turn lfoot to x-axis <-3.395604> speed <57.280230> * 100 / currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.300000] speed [4.500000] * 100 / currentSpeed;
		turn pelvis to y-axis <-0.153846> speed <2.307690> * 100 / currentSpeed;
		turn torso to x-axis <-8.065934> speed <31.813185> * 100 / currentSpeed;
		turn lthigh to x-axis <-18.653846> speed <75.989010> * 100 / currentSpeed;
		turn rthigh to x-axis <20.703297> speed <132.280230> * 100 / currentSpeed;
		turn rleg to x-axis <-8.065934> speed <120.989010> * 100 / currentSpeed;
		turn rfoot to x-axis <-9.824176> speed <210.989010> * 100 / currentSpeed;
		turn lleg to x-axis <-24.082418> speed <429.807705> * 100 / currentSpeed;
		turn lfoot to x-axis <26.335165> speed <445.961535> * 100 / currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.150000] speed [2.250000] * 100 / currentSpeed;
		turn pelvis to y-axis <0.104396> speed <3.873630> * 100 / currentSpeed;
		turn torso to x-axis <-5.939560> speed <31.895610> * 100 / currentSpeed;
		turn lthigh to x-axis <-15.285714> speed <50.521980> * 100 / currentSpeed;
		turn rthigh to x-axis <30.005495> speed <139.532970> * 100 / currentSpeed;
		turn rleg to x-axis <-3.818681> speed <63.708795> * 100 / currentSpeed;
		turn rfoot to x-axis <-13.340659> speed <52.747245> * 100 / currentSpeed;
		turn lleg to x-axis <-49.489011> speed <381.098895> * 100 / currentSpeed;
		turn lfoot to x-axis <44.285714> speed <269.258235> * 100 / currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] speed [2.250000] * 100 / currentSpeed;
		turn pelvis to y-axis <0.016484> speed <1.318680> * 100 / currentSpeed;
		turn torso to x-axis <2.120879> speed <120.906585> * 100 / currentSpeed;
		turn lthigh to x-axis <-15.708791> speed <6.346155> * 100 / currentSpeed;
		turn rthigh to x-axis <39.384615> speed <140.686800> * 100 / currentSpeed;
		turn rthigh to y-axis <0.000000> now;
		turn rleg to x-axis <0.000000> speed <57.280215> * 100 / currentSpeed;
		turn rfoot to x-axis <-14.010989> speed <10.054950> * 100 / currentSpeed;
		turn lleg to x-axis <-29.604396> speed <298.269225> * 100 / currentSpeed;
		turn lfoot to x-axis <45.313187> speed <15.412095> * 100 / currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.600000] speed [9.000000] * 100 / currentSpeed;
		turn pelvis to y-axis <-0.153846> speed <2.554950> * 100 / currentSpeed;
		turn torso to x-axis <-2.120879> speed <63.626370> * 100 / currentSpeed;
		turn lthigh to x-axis <-2.120879> speed <203.818680> * 100 / currentSpeed;
		turn rthigh to x-axis <24.434066> speed <224.258235> * 100 / currentSpeed;
		turn rleg to x-axis <13.010989> speed <195.164835> * 100 / currentSpeed;
		turn rfoot to x-axis <-2.054945> speed <179.340660> * 100 / currentSpeed;
		turn lleg to x-axis <-37.423077> speed <117.280215> * 100 / currentSpeed;
		turn lfoot to x-axis <39.549451> speed <86.456040> * 100 / currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.800000] speed [3.000000] * 100 / currentSpeed;
		turn pelvis to y-axis <0.054945> speed <3.131865> * 100 / currentSpeed;
		turn torso to x-axis <-8.065934> speed <89.175825> * 100 / currentSpeed;
		turn lthigh to x-axis <5.093407> speed <108.214290> * 100 / currentSpeed;
		turn rthigh to x-axis <16.923077> speed <112.664835> * 100 / currentSpeed;
		turn rleg to x-axis <7.736264> speed <79.120875> * 100 / currentSpeed;
		turn rfoot to x-axis <3.725275> speed <86.703300> * 100 / currentSpeed;
		turn lleg to x-axis <-32.719780> speed <70.549455> * 100 / currentSpeed;
		turn lfoot to x-axis <27.978022> speed <173.571435> * 100 / currentSpeed;
		sleep animSpeed;
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		animSpeed = 7500 / currentSpeed;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script UnitSpeed();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	call-script walk();
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	move pelvis to y-axis [0.000000] speed [1.000000];
	turn pelvis to y-axis <0.000000> speed <150.032967>;
	turn pelvis to z-axis <0.000000> speed <150.032967>;
	turn rthigh to x-axis <0.000000> speed <150.032967>;
	turn rleg to x-axis <0.000000> speed <150.032967>;
	turn rfoot to x-axis <0.000000> speed <150.032967>;
	turn lthigh to x-axis <0.000000> speed <150.032967>;
	turn lleg to x-axis <0.000000> speed <150.032967>;
	turn lfoot to x-axis <0.000000> speed <150.032967>;
}

Create()
{
	gun_1 = torso;
	currentSpeed = 100;
	moveSpeed = get MAX_SPEED;
	animSpeed = 75;
	start-script StopMoving();
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = rfirept + gun_1;
}

RestoreAfterDelay()
{
	sleep 5000;
	turn turret to y-axis <0.000000> speed <90.021978>;
	turn launcher to x-axis <0.000000> speed <45.010989>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <90.021978>;
	turn launcher to x-axis <0.000000> - pitch speed <45.010989>;
	wait-for-turn turret around y-axis;
	wait-for-turn launcher around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 )
	{
		emit-sfx UNIT_SFX0 from rexhaust;
	}
	else
	{
		emit-sfx UNIT_SFX0 from lexhaust;
	}
	gun_1 = !gun_1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode launcher type BITMAPONLY | BITMAP2;
		explode lfirept type BITMAPONLY | BITMAP3;
		explode lfoot type BITMAPONLY | BITMAP4;
		explode lleg type BITMAPONLY | BITMAP5;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP2;
		explode rfirept type BITMAPONLY | BITMAP3;
		explode rfoot type BITMAPONLY | BITMAP4;
		explode rleg type BITMAPONLY | BITMAP5;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode torso type BITMAPONLY | BITMAP2;
		explode turret type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type FALL | BITMAP1;
		explode launcher type SHATTER | BITMAP2;
		explode lfirept type FALL | BITMAP3;
		explode lfoot type FALL | BITMAP4;
		explode lleg type FALL | BITMAP5;
		explode lthigh type FALL | BITMAP1;
		explode pelvis type FALL | BITMAP2;
		explode rfirept type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode rleg type FALL | BITMAP5;
		explode rthigh type FALL | BITMAP1;
		explode torso type FALL | BITMAP2;
		explode turret type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode launcher type SHATTER | BITMAP2;
		explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode launcher type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
}
