#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, rfirept, lfirept, pelvis, rfoot, lfoot, launcher, lthigh,
       rthigh, rleg, lleg, turret, base,rexhaust,lexhaust;

static-var  gun_1, moveSpeed, currentSpeed, animSpeed;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM				4


walk()
{
	while( TRUE )
	{
		move pelvis to y-axis [0.750000] speed [0.375000] * currentSpeed;
		move rfoot to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move launcher to y-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn torso to x-axis <-10.186813> speed <5.093407> * currentSpeed;
		turn lthigh to x-axis <11.884615> speed <5.942308> * currentSpeed;
		turn rthigh to x-axis <7.857143> speed <3.928571> * currentSpeed;
		turn rthigh to y-axis <0.000000> now;
		turn rleg to x-axis <0.000000> now;
		turn rfoot to x-axis <5.439560> speed <2.719780> * currentSpeed;
		turn lleg to x-axis <-24.923077> speed <12.461538> * currentSpeed;
		turn lfoot to x-axis <13.032967> speed <6.516483> * currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.300000] speed [0.225000] * currentSpeed;
		turn pelvis to y-axis <0.153846> speed <0.076923> * currentSpeed;
		turn torso to x-axis <-8.065934> speed <1.060440> * currentSpeed;
		turn lthigh to x-axis <21.758242> speed <4.936813> * currentSpeed;
		turn rthigh to x-axis <-14.010989> speed <10.934066> * currentSpeed;
		turn rleg to x-axis <-5.093407> speed <2.546704> * currentSpeed;
		turn rfoot to x-axis <4.670330> speed <0.384615> * currentSpeed;
		turn lleg to x-axis <-8.912088> speed <8.005494> * currentSpeed;
		turn lfoot to x-axis <-7.917582> speed <10.475274> * currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.150000] speed [0.075000] * currentSpeed;
		turn pelvis to y-axis <-0.104396> speed <0.129121> * currentSpeed;
		turn torso to x-axis <-5.939560> speed <1.063187> * currentSpeed;
		turn lthigh to x-axis <28.247253> speed <3.244506> * currentSpeed;
		turn rthigh to x-axis <-14.857143> speed <0.423077> * currentSpeed;
		turn rleg to x-axis <-51.598901> speed <23.252747> * currentSpeed;
		turn rfoot to x-axis <46.274725> speed <20.802197> * currentSpeed;
		turn lleg to x-axis <-4.241758> speed <2.335165> * currentSpeed;
		turn lfoot to x-axis <-14.203297> speed <3.142857> * currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] speed [0.075000] * currentSpeed;
		turn pelvis to y-axis <-0.016484> speed <0.043956> * currentSpeed;
		turn torso to x-axis <2.120879> speed <4.030219> * currentSpeed;
		turn lthigh to x-axis <36.923077> speed <4.337912> * currentSpeed;
		turn rthigh to x-axis <-15.708791> speed <0.425824> * currentSpeed;
		turn rleg to x-axis <-30.659341> speed <10.469780> * currentSpeed;
		turn rfoot to x-axis <44.961538> speed <0.656593> * currentSpeed;
		turn lleg to x-axis <0.000000> speed <2.120879> * currentSpeed;
		turn lfoot to x-axis <-14.010989> speed <0.096154> * currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.300000] speed [0.150000] * currentSpeed;
		turn pelvis to y-axis <-0.192308> speed <0.087912> * currentSpeed;
		turn torso to x-axis <-2.120879> speed <2.120879> * currentSpeed;
		turn lthigh to x-axis <24.521978> speed <6.200549> * currentSpeed;
		turn rthigh to x-axis <-10.741758> speed <2.483516> * currentSpeed;
		turn rleg to x-axis <-23.054945> speed <3.802198> * currentSpeed;
		turn rfoot to x-axis <34.500000> speed <5.230769> * currentSpeed;
		turn lleg to x-axis <8.439560> speed <4.219780> * currentSpeed;
		turn lfoot to x-axis <-12.840659> speed <0.585165> * currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.450000] speed [0.075000] * currentSpeed;
		turn pelvis to y-axis <-0.131868> speed <0.030220> * currentSpeed;
		turn torso to x-axis <-8.065934> speed <2.972527> * currentSpeed;
		turn lthigh to x-axis <10.038462> speed <7.241758> * currentSpeed;
		turn rthigh to x-axis <-3.956044> speed <3.392857> * currentSpeed;
		turn rleg to x-axis <-28.708791> speed <2.826923> * currentSpeed;
		turn rfoot to x-axis <32.741758> speed <0.879121> * currentSpeed;
		turn lleg to x-axis <1.054945> speed <3.692307> * currentSpeed;
		turn lfoot to x-axis <-7.214286> speed <2.813186> * currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.600000] speed [0.075000] * currentSpeed;
		turn pelvis to y-axis <0.000000> speed <0.065934> * currentSpeed;
		turn torso to x-axis <-10.186813> speed <1.060440> * currentSpeed;
		turn lthigh to x-axis <-13.587912> speed <11.813187> * currentSpeed;
		turn rthigh to x-axis <11.884615> speed <7.920329> * currentSpeed;
		turn rleg to x-axis <-16.131868> speed <6.288462> * currentSpeed;
		turn rfoot to x-axis <4.241758> speed <14.250000> * currentSpeed;
		turn lleg to x-axis <4.571429> speed <1.758242> * currentSpeed;
		turn lfoot to x-axis <-3.395604> speed <1.909341> * currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.300000] speed [0.150000] * currentSpeed;
		turn pelvis to y-axis <-0.153846> speed <0.076923> * currentSpeed;
		turn torso to x-axis <-8.065934> speed <1.060440> * currentSpeed;
		turn lthigh to x-axis <-18.653846> speed <2.532967> * currentSpeed;
		turn rthigh to x-axis <20.703297> speed <4.409341> * currentSpeed;
		turn rleg to x-axis <-8.065934> speed <4.032967> * currentSpeed;
		turn rfoot to x-axis <-9.824176> speed <7.032967> * currentSpeed;
		turn lleg to x-axis <-24.082418> speed <14.326923> * currentSpeed;
		turn lfoot to x-axis <26.335165> speed <14.865384> * currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.150000] speed [0.075000] * currentSpeed;
		turn pelvis to y-axis <0.104396> speed <0.129121> * currentSpeed;
		turn torso to x-axis <-5.939560> speed <1.063187> * currentSpeed;
		turn lthigh to x-axis <-15.285714> speed <1.684066> * currentSpeed;
		turn rthigh to x-axis <30.005495> speed <4.651099> * currentSpeed;
		turn rleg to x-axis <-3.818681> speed <2.123627> * currentSpeed;
		turn rfoot to x-axis <-13.340659> speed <1.758242> * currentSpeed;
		turn lleg to x-axis <-49.489011> speed <12.703296> * currentSpeed;
		turn lfoot to x-axis <44.285714> speed <8.975274> * currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.000000] speed [0.075000] * currentSpeed;
		turn pelvis to y-axis <0.016484> speed <0.043956> * currentSpeed;
		turn torso to x-axis <2.120879> speed <4.030219> * currentSpeed;
		turn lthigh to x-axis <-15.708791> speed <0.211538> * currentSpeed;
		turn rthigh to x-axis <39.384615> speed <4.689560> * currentSpeed;
		turn rthigh to y-axis <0.000000> now;
		turn rleg to x-axis <0.000000> speed <1.909341> * currentSpeed;
		turn rfoot to x-axis <-14.010989> speed <0.335165> * currentSpeed;
		turn lleg to x-axis <-29.604396> speed <9.942307> * currentSpeed;
		turn lfoot to x-axis <45.313187> speed <0.513737> * currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.600000] speed [0.300000] * currentSpeed;
		turn pelvis to y-axis <-0.153846> speed <0.085165> * currentSpeed;
		turn torso to x-axis <-2.120879> speed <2.120879> * currentSpeed;
		turn lthigh to x-axis <-2.120879> speed <6.793956> * currentSpeed;
		turn rthigh to x-axis <24.434066> speed <7.475274> * currentSpeed;
		turn rleg to x-axis <13.010989> speed <6.505495> * currentSpeed;
		turn rfoot to x-axis <-2.054945> speed <5.978022> * currentSpeed;
		turn lleg to x-axis <-37.423077> speed <3.909340> * currentSpeed;
		turn lfoot to x-axis <39.549451> speed <2.881868> * currentSpeed;
		sleep animSpeed;

		move pelvis to y-axis [0.800000] speed [0.100000] * currentSpeed;
		turn pelvis to y-axis <0.054945> speed <0.104396> * currentSpeed;
		turn torso to x-axis <-8.065934> speed <2.972527> * currentSpeed;
		turn lthigh to x-axis <5.093407> speed <3.607143> * currentSpeed;
		turn rthigh to x-axis <16.923077> speed <3.755495> * currentSpeed;
		turn rleg to x-axis <7.736264> speed <2.637363> * currentSpeed;
		turn rfoot to x-axis <3.725275> speed <2.890110> * currentSpeed;
		turn lleg to x-axis <-32.719780> speed <2.351648> * currentSpeed;
		turn lfoot to x-axis <27.978022> speed <5.785714> * currentSpeed;
		sleep animSpeed;
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*20/moveSpeed;
		if (currentSpeed<4) currentSpeed=4;
		animSpeed = 1500 / currentSpeed;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script UnitSpeed();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	call-script walk();
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	move pelvis to y-axis [0.000000] speed [1.000000];
	turn pelvis to y-axis <0.000000> speed <150.032967>;
	turn pelvis to z-axis <0.000000> speed <150.032967>;
	turn rthigh to x-axis <0.000000> speed <150.032967>;
	turn rleg to x-axis <0.000000> speed <150.032967>;
	turn rfoot to x-axis <0.000000> speed <150.032967>;
	turn lthigh to x-axis <0.000000> speed <150.032967>;
	turn lleg to x-axis <0.000000> speed <150.032967>;
	turn lfoot to x-axis <0.000000> speed <150.032967>;
}

Create()
{
	gun_1 = torso;
	currentSpeed = 100;
	moveSpeed = get MAX_SPEED;
	animSpeed = 75;
	start-script StopMoving();
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = rfirept + gun_1;
}

RestoreAfterDelay()
{
	sleep 5000;
	turn turret to y-axis <0.000000> speed <90.021978>;
	turn launcher to x-axis <0.000000> speed <45.010989>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <90.021978>;
	turn launcher to x-axis <0.000000> - pitch speed <45.010989>;
	wait-for-turn turret around y-axis;
	wait-for-turn launcher around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 )
	{
		emit-sfx UNIT_SFX0 from rexhaust;
	}
	else
	{
		emit-sfx UNIT_SFX0 from lexhaust;
	}
	gun_1 = !gun_1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode launcher type BITMAPONLY | BITMAP2;
		explode lfirept type BITMAPONLY | BITMAP3;
		explode lfoot type BITMAPONLY | BITMAP4;
		explode lleg type BITMAPONLY | BITMAP5;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP2;
		explode rfirept type BITMAPONLY | BITMAP3;
		explode rfoot type BITMAPONLY | BITMAP4;
		explode rleg type BITMAPONLY | BITMAP5;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode torso type BITMAPONLY | BITMAP2;
		explode turret type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type FALL | BITMAP1;
		explode launcher type SHATTER | BITMAP2;
		explode lfirept type FALL | BITMAP3;
		explode lfoot type FALL | BITMAP4;
		explode lleg type FALL | BITMAP5;
		explode lthigh type FALL | BITMAP1;
		explode pelvis type FALL | BITMAP2;
		explode rfirept type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode rleg type FALL | BITMAP5;
		explode rthigh type FALL | BITMAP1;
		explode torso type FALL | BITMAP2;
		explode turret type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode launcher type SHATTER | BITMAP2;
		explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode launcher type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
}
