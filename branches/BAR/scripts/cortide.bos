//            * Header Info *
// VersionSignature                     4
// NumberOfScripts                     10
// NumberOfPieces                      2
// LengthOfScripts                     14c
// NumberOfStaticVars                  2
// UKZero                              0
// OffsetToScriptCodeIndexArray        55c
// OffsetToScriptNameOffsetArray       584
// OffsetToPieceNameOffsetArray        5ac
// OffsetToScriptCode                  2c
// OffsetToNameArray                   5b4

// OffsetToFirstName                   5b4

#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, wheel;

static-var  statechg_DesiredState, statechg_StateChanging;


SmokeUnit(healthpercent, sleeptime, smoketype)
/*     3:*/{
/*     6:*/	while( get BUILD_PERCENT_LEFT )
/*     8:*/	{
/*     a:*/		sleep 400;
/*     d:*/	}
/*     f:*/	while( TRUE )
/*    11:*/	{
/*    14:*/		healthpercent = get HEALTH;
/*    1b:*/		if( healthpercent < 66 )
/*    1d:*/		{
/*    22:*/			smoketype = 256 | 2;
/*    2c:*/			if( Rand( 1, 66 ) < healthpercent )
/*    2e:*/			{
/*    33:*/				smoketype = 256 | 1;
/*    35:*/			}
/*    37:*/			emit-sfx smoketype from base;
/*    39:*/		}
/*    3e:*/		sleeptime = healthpercent * 50;
/*    45:*/		if( sleeptime < 200 )
/*    47:*/		{
/*    49:*/			sleeptime = 200;
/*    4b:*/		}
/*    4d:*/		sleep sleeptime;
/*    50:*/	}
/*    52:*/	return (0);
/*    53:*/}

Go()
/*    53:*/{
/*    53:*/	dont-cache wheel;
/*    59:*/	spin wheel around z-axis speed <35.005495>;
/*    5e:*/	return (0);
/*    5f:*/}

Stop()
/*    5f:*/{
/*    63:*/	stop-spin wheel around z-axis;
/*    66:*/	cache wheel;
/*    6a:*/	return (0);
/*    6b:*/}

InitState()
/*    6b:*/{
/*    6d:*/	statechg_DesiredState = TRUE;
/*    71:*/	statechg_StateChanging = FALSE;
/*    75:*/	return (0);
/*    76:*/}

RequestState(requestedstate, currentstate)
/*    78:*/{
/*    7a:*/	if( statechg_StateChanging )
/*    7c:*/	{
/*    7e:*/		statechg_DesiredState = requestedstate;
/*    82:*/		return (0);
/*    83:*/	}
/*    85:*/	statechg_StateChanging = TRUE;
/*    89:*/	currentstate = statechg_DesiredState;
/*    8d:*/	statechg_DesiredState = requestedstate;
/*    94:*/	while( statechg_DesiredState != currentstate )
/*    96:*/	{
/*    9b:*/		if( statechg_DesiredState == 0 )
/*    9d:*/		{
/*    9d:*/			call-script Go();
/*    a2:*/			currentstate = 0;
/*    a4:*/		}
/*    a9:*/		if( statechg_DesiredState == 1 )
/*    ab:*/		{
/*    ab:*/			call-script Stop();
/*    b0:*/			currentstate = 1;
/*    b2:*/		}
/*    b4:*/	}
/*    b6:*/	statechg_StateChanging = FALSE;
/*    ba:*/	return (0);
/*    bb:*/}

Create()
/*    bb:*/{
/*    bb:*/	dont-shade wheel;
/*    bd:*/	call-script InitState();
/*    c0:*/	start-script SmokeUnit();
/*    c5:*/	return (0);
/*    c6:*/}

Activate()
/*    c6:*/{
/*    c8:*/	start-script RequestState(0);
/*    cd:*/	return (0);
/*    ce:*/}

Deactivate()
/*    ce:*/{
/*    d0:*/	start-script RequestState(1);
/*    d5:*/	return (0);
/*    d6:*/}

SweetSpot(piecenum)
/*    d7:*/{
/*    d9:*/	piecenum = base;
/*    dd:*/	return (0);
/*    de:*/}

Killed(severity, corpsetype)
/*    e0:*/{
/*    e5:*/	if( severity <= 25 )
/*    e7:*/	{
/*    e9:*/		corpsetype = 1;
/*    f0:*/		explode base type BITMAPONLY | BITMAP1;
/*    f7:*/		explode wheel type BITMAPONLY | BITMAP2;
/*    fb:*/		return (0);
/*    fc:*/	}
/*   101:*/	if( severity <= 50 )
/*   103:*/	{
/*   105:*/		corpsetype = 2;
/*   10c:*/		explode base type BITMAPONLY | BITMAP1;
/*   113:*/		explode wheel type BITMAPONLY | BITMAP2;
/*   117:*/		return (0);
/*   118:*/	}
/*   11d:*/	if( severity <= 99 )
/*   11f:*/	{
/*   121:*/		corpsetype = 3;
/*   128:*/		explode base type BITMAPONLY | BITMAP1;
/*   12f:*/		explode wheel type BITMAPONLY | BITMAP2;
/*   133:*/		return (0);
/*   134:*/	}
/*   136:*/	corpsetype = 3;
/*   13d:*/	explode base type BITMAPONLY | BITMAP1;
/*   147:*/	explode wheel type SHATTER | EXPLODE_ON_HIT | BITMAP2;
/*   14b:*/	return (0);
/*   14c:*/}
