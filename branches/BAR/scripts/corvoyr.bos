#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, rthigh, lthigh, lleg, lfoot, rleg, rfoot, dish1,belt,dish2,cover1,cover2,cover3,lens1,lens2,lens3, pelvis;

static-var  bMoving, Static_Var_2;

// Signal definitions
#define SIG_ACTIVATE			2


walkscr()
{
//maxvel=1.5 at 30 fps -> 45 elmos/sec movement, 48 elmos/cycle anim

//step 0
if (bMoving)
{
	turn rthigh to z-axis <0> speed <37.500000>;
	turn rthigh to x-axis <0> speed <277.500000>;
	turn rleg to x-axis <0> speed <67.500000>;
	turn rfoot to x-axis <0> speed <210.000000>;
	turn lthigh to z-axis <0> speed <37.500000>;
	turn lthigh to x-axis <-45> speed <210.000000>;
	turn lleg to x-axis <90> speed <75.000000>;
	turn lfoot to x-axis <-45> speed <135.000000>;


	move pelvis to y-axis [0] speed [9.000000];
	turn pelvis to z-axis <0> speed <37.500000>;
	turn torso to z-axis <0> speed <37.500000>;
	sleep 125;
}

//step 1
if (bMoving)
{
	turn rthigh to z-axis <5> speed <37.500000>;
	turn rthigh to x-axis <33> speed <247.500000>;
	turn rleg to x-axis <0> now;
	turn rfoot to x-axis <-33> speed <247.500000>;
	turn lthigh to z-axis <0> now;
	turn lthigh to x-axis <-60> speed <112.500000>;
	turn lleg to x-axis <50> speed <300.000000>;
	turn lfoot to x-axis <0> speed <337.500000>;


	move pelvis to y-axis [-1.2] speed [9.000000];
	turn pelvis to z-axis <-5> speed <37.500000>;
	turn torso to z-axis <-5> speed <37.500000>;
	sleep 125;
}

//step 2
if (bMoving)
{
	turn rthigh to z-axis <8> speed <22.500000>;
	turn rthigh to x-axis <29> speed <30.000000>;
	turn rleg to x-axis <36> speed <270.000000>;
	turn rfoot to x-axis <-16> speed <127.500000>;
	turn lthigh to z-axis <0> now;
	turn lthigh to x-axis <-51> speed <67.500000>;
	turn lleg to x-axis <0> speed <375.000000>;
	turn lfoot to x-axis <6> speed <45.000000>;

	move pelvis to y-axis [-1.2] now;
	turn pelvis to z-axis <-8> speed <22.500000>;
	turn torso to z-axis <-8> speed <22.500000>;
	sleep 125;
}

//step 3
if (bMoving)
{
	turn rthigh to z-axis <-5> speed <97.500000>;
	turn rthigh to x-axis <-17> speed <345.000000>;
	turn rleg to x-axis <80> speed <330.000000>;
	turn rfoot to x-axis <-63> speed <352.500000>;
	turn lthigh to z-axis <-5> speed <37.500000>;
	turn lthigh to x-axis <-37> speed <105.000000>;
	turn lleg to x-axis <9> speed <67.500000>;
	turn lfoot to x-axis <28> speed <165.000000>;

	move pelvis to y-axis [-1.2] now;
	turn pelvis to z-axis <-5> speed <22.500000>;
	turn torso to z-axis <-5> speed <22.500000>;
	sleep 125;
}

//step 4
if (bMoving)
{
	turn rthigh to z-axis <0> speed <37.500000>;
	turn rthigh to x-axis <-45> speed <210.000000>;
	turn rleg to x-axis <90> speed <75.000000>;
	turn rfoot to x-axis <-45> speed <135.000000>;
	turn lthigh to z-axis <0> speed <37.500000>;
	turn lthigh to x-axis <0> speed <277.500000>;
	turn lleg to x-axis <0> speed <67.500000>;
	turn lfoot to x-axis <0> speed <210.000000>;

	move pelvis to y-axis [0] speed [9.000000];
	turn pelvis to z-axis <0> speed <37.500000>;
	turn torso to z-axis <0> speed <37.500000>;
	sleep 125;
}

//step 5
if (bMoving)
{
	turn rthigh to z-axis <0> now;
	turn rthigh to x-axis <-60> speed <112.500000>;
	turn rleg to x-axis <50> speed <300.000000>;
	turn rfoot to x-axis <0> speed <337.500000>;
	turn lthigh to z-axis <5> speed <37.500000>;
	turn lthigh to x-axis <33> speed <247.500000>;
	turn lleg to x-axis <0> now;
	turn lfoot to x-axis <-33> speed <247.500000>;


	move pelvis to y-axis [-1.2] speed [9.000000];
	turn pelvis to z-axis <5> speed <37.500000>;
	turn torso to z-axis <5> speed <37.500000>;
	sleep 125;
}

//step 6
if (bMoving)
{
	turn rthigh to z-axis <0> now;
	turn rthigh to x-axis <-51> speed <67.500000>;
	turn rleg to x-axis <0> speed <375.000000>;
	turn rfoot to x-axis <6> speed <45.000000>;
	turn lthigh to z-axis <8> speed <22.500000>;
	turn lthigh to x-axis <29> speed <30.000000>;
	turn lleg to x-axis <36> speed <270.000000>;
	turn lfoot to x-axis <-16> speed <127.500000>;

	move pelvis to y-axis [-1.2] now;
	turn pelvis to z-axis <8> speed <22.500000>;
	turn torso to z-axis <8> speed <22.500000>;
	sleep 125;
}

//step 7
if (bMoving)
{
	turn rthigh to z-axis <-5> speed <37.500000>;
	turn rthigh to x-axis <-37> speed <105.000000>;
	turn rleg to x-axis <9> speed <67.500000>;
	turn rfoot to x-axis <28> speed <165.000000>;
	turn lthigh to z-axis <-5> speed <97.500000>;
	turn lthigh to x-axis <-17> speed <345.000000>;
	turn lleg to x-axis <80> speed <330.000000>;
	turn lfoot to x-axis <-63> speed <352.500000>;

	move pelvis to y-axis [-1.2] now;
	turn pelvis to z-axis <5> speed <22.500000>;
	turn torso to z-axis <5> speed <22.500000>;
	sleep 25;
}

}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

MotionControl(Func_Var_1, Func_Var_2)
{
	Func_Var_2 = 1;
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			Func_Var_2 = 1;
			call-script walkscr();
		}
		if( !Func_Var_1 )
		{
			turn rthigh to z-axis <0> speed <237.500000>;
			turn rthigh to x-axis <0> speed <277.500000>;
			turn rleg to x-axis <0> speed <267.500000>;
			turn rfoot to x-axis <0> speed <210.000000>;
			turn lthigh to z-axis <0> speed <237.500000>;
			turn lthigh to x-axis <0> speed <210.000000>;
			turn lleg to x-axis <0> speed <275.000000>;
			turn lfoot to x-axis <0> speed <135.000000>;
		
		
			move pelvis to y-axis [0] speed [9.000000];
			turn pelvis to z-axis <0> speed <37.500000>;
			turn torso to z-axis <0> speed <37.500000>;
			Func_Var_2 = 0;
		}
		sleep 100;
	}
	return (0);
}


HitByWeapon(anglex, anglez)
{
	turn pelvis to z-axis anglez speed <105.000000>;
	turn pelvis to x-axis <0> - anglex speed <105.000000>;
	wait-for-turn pelvis around z-axis;
	wait-for-turn pelvis around x-axis;
	turn pelvis to z-axis <0.000000> speed <30.000000>;
	turn pelvis to x-axis <0.000000> speed <30.000000>;
}

Create()
{
	bMoving = FALSE;
	Static_Var_2 = 1000;
	start-script MotionControl();
	start-script SmokeUnit();
	return (0);
}

Activate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	spin belt around y-axis speed <20.021978> accelerate <5>;
	spin dish1 around x-axis speed <100.021978> accelerate <50>;
	spin dish2 around x-axis speed <-100.021978> accelerate <50>;
	turn cover1 to x-axis <270> speed <90>;
	turn cover2 to x-axis <60> speed <60>;
	turn cover3 to x-axis <178> speed <178>;
	
	move lens1 to z-axis [2] speed [1];
	move lens3 to z-axis [-3] speed [2];
	return (0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	turn belt to y-axis <0.000000> speed <10.021978>;
	turn dish1 to x-axis <0.000000> speed <100.021978>;
	turn dish2 to x-axis <0.000000> speed <100.021978>;

	turn cover1 to x-axis <0> speed <90>;
	turn cover2 to x-axis <0> speed <60>;
	turn cover3 to x-axis <0> speed <178>;
	
	move lens1 to z-axis [0] speed [5];
	move lens3 to z-axis [0] speed [7];
	
	wait-for-turn belt around y-axis;
	return (0);
}

StartMoving()
{
	bMoving = TRUE;
	return (0);
}

StopMoving()
{
	bMoving = FALSE;
	return (0);
}

RestoreAfterDelay()
{
	sleep Static_Var_2;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = torso;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY;
		explode rthigh type BITMAPONLY;
		explode rleg type BITMAPONLY;
		explode rfoot type FIRE | SMOKE | FALL;
		explode lthigh type BITMAPONLY;
		explode lleg type BITMAPONLY;
		explode lfoot type BITMAPONLY;
		explode belt type BITMAPONLY;
		explode dish2 type BITMAPONLY;
		explode dish1 type BITMAPONLY;
		explode torso type BITMAPONLY;
		explode lens1 type BITMAPONLY;
		explode cover2 type BITMAPONLY;
		explode lens3 type BITMAPONLY;
		explode lens2 type BITMAPONLY;
		explode cover1 type BITMAPONLY;
		explode cover3 type BITMAPONLY;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type BITMAPONLY;
		explode rthigh type FIRE | SMOKE | FALL;
		explode rleg type FIRE | SMOKE | FALL;
		explode rfoot type FIRE | SMOKE | FALL;
		explode lthigh type FIRE | SMOKE | FALL;
		explode lleg type FIRE | SMOKE | FALL;
		explode lfoot type FIRE | SMOKE | FALL;
		explode belt type FIRE | SMOKE | FALL;
		explode dish2 type FALL;
		explode dish1 type FIRE | SMOKE | FALL;
		explode torso type FIRE | SMOKE | FALL;
		explode lens1 type FALL;
		explode cover2 type FIRE | SMOKE | FALL;
		explode lens3 type FIRE | SMOKE | FALL;
		explode lens2 type FALL;
		explode cover1 type FIRE | SMOKE | FALL;
		explode cover3 type FIRE | SMOKE | FALL;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL;
		explode rthigh type FIRE | SMOKE | FALL;
		explode rleg type FIRE | SMOKE | FALL;
		explode rfoot type EXPLODE_ON_HIT | SMOKE | FALL;
		explode lthigh type EXPLODE_ON_HIT | SMOKE | FALL;
		explode lleg type SMOKE | FALL;
		explode lfoot type EXPLODE_ON_HIT | SMOKE | FALL;
		explode belt type FIRE | SMOKE | FALL;
		explode dish2 type FIRE | SMOKE | FALL;
		explode dish1 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode torso type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lens1 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode cover2 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode lens3 type FIRE | SMOKE | FALL;
		explode lens2 type SMOKE | FALL;
		explode cover1 type FIRE | SMOKE | FALL;
		explode cover3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rleg type EXPLODE_ON_HIT | FIRE | FALL;
		explode rfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lthigh type EXPLODE_ON_HIT | FIRE | FALL;
		explode lleg type EXPLODE_ON_HIT | FIRE | FALL;
		explode lfoot type EXPLODE_ON_HIT | FIRE | FALL;
		explode belt type EXPLODE_ON_HIT | FIRE | FALL;
		explode dish2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode dish1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode torso type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lens1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode cover2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode lens3 type EXPLODE_ON_HIT | FIRE | FALL;
		explode lens2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode cover1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode cover3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
	return corpsetype;
}
