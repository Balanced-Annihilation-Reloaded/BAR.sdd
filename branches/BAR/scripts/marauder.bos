#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  pelvis, body, rthigh, lthigh , lleg, rleg, rfoot,lfoot, misturret, misflare, lturret, rturret, lbarrel, rbarrel, lflare, rflare;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, gun_1;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8


walk()
{
	//step 1, foot back a bit
	
	turn rthigh to z-axis <-2> speed <20.000000>;
	turn rthigh to x-axis <22> speed <220.000000>;
	turn rleg to x-axis <1> speed <10.000000>;
	turn rfoot to x-axis <-23> speed <230.000000>;
	
	turn lthigh to z-axis <2> speed <20.000000>;
	turn lthigh to x-axis <-21> speed <210.000000>;
	turn lleg to x-axis <-22> speed <220.000000>;
	turn lfoot to x-axis <14> speed <140.000000>;
	
	turn pelvis to z-axis <-2> speed <20.000000>;
	move pelvis to y-axis [1] speed [10.000000];
	
	sleep 96;
	
	
	//step 2, foot fully back, heel lifted
	
	
	//turn rthigh to z-axis <-2> now;
	turn rthigh to x-axis <34> speed <120.000000>;
	turn rleg to x-axis <23> speed <220.000000>;
	turn rfoot to x-axis <-32> speed <90.000000>;
	
	turn lthigh to x-axis <5> speed <260.000000>;
	turn lleg to x-axis <-48> speed <260.000000>;
	turn lfoot to x-axis <43> speed <290.000000>;
	
	//turn pelvis to z-axis <-2> now;
	move pelvis to y-axis [0] speed [10.000000];
	
	sleep 96;
	
	//step 3, foot lifted, knee bent
	
	turn rthigh to z-axis <0> speed <20.000000>;
	turn rthigh to x-axis <16> speed <180.000000>;
	turn rleg to x-axis <28> speed <50.000000>;
	turn rfoot to x-axis <-51> speed <190.000000>;
	
	turn lthigh to z-axis <0> speed <20.000000>;
	turn lthigh to x-axis <0> speed <50.000000>;
	turn lleg to x-axis <0> speed <480.000000>;
	turn lfoot to x-axis <0> speed <430.000000>;
	
	turn pelvis to z-axis <0> speed <20.000000>;
	move pelvis to y-axis [0] now;
	
	sleep 96;
	
	//step 4 foot lifted, knee extended
	
	turn rthigh to z-axis <2> speed <20.000000>;
	turn rthigh to x-axis <-21> speed <370.000000>;
	turn rleg to x-axis <-22> speed <500.000000>;
	turn rfoot to x-axis <14> speed <650.000000>;
	
	turn lthigh to z-axis <-2> speed <20.000000>;
	turn lthigh to x-axis <22> speed <220.000000>;
	turn lleg to x-axis <1> speed <10.000000>;
	turn lfoot to x-axis <-23> speed <230.000000>;
	
	turn pelvis to z-axis <2> speed <20.000000>;
	move pelvis to y-axis [1] speed [10.000000];
	
	sleep 96;
	
	//step 5, foot on ground, knee extended
	
	
	// turn rthigh to z-axis <5> now;
	turn rthigh to x-axis <5> speed <260.000000>;
	turn rleg to x-axis <-48> speed <260.000000>;
	turn rfoot to x-axis <43> speed <290.000000>;
	
	//turn lthigh to z-axis <-2> now;
	turn lthigh to x-axis <34> speed <120.000000>;
	turn lleg to x-axis <23> speed <220.000000>;
	turn lfoot to x-axis <-32> speed <90.000000>;
	
	// turn pelvis to z-axis <2> now;
	move pelvis to y-axis [0] speed [10.000000];
	
	sleep 96;
	
	//Step 0, all back to default
	
	turn rthigh to z-axis <0> speed <20.000000>;
	turn rthigh to x-axis <0> speed <50.000000>;
	turn rleg to x-axis <0> speed <480.000000>;
	turn rfoot to x-axis <0> speed <430.000000>;
	
	turn lthigh to z-axis <0> speed <20.000000>;
	turn lthigh to x-axis <16> speed <180.000000>;
	turn lleg to x-axis <28> speed <50.000000>;
	turn lfoot to x-axis <-51> speed <190.000000>;
	
	turn pelvis to z-axis <0> speed <20.000000>;
	move pelvis to y-axis [0] now;
	
	sleep 96;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

walklegs()
{
	//step 1, foot back a bit
	
	turn rthigh to z-axis <-2> speed <20.000000>;
	turn rthigh to x-axis <22> speed <220.000000>;
	turn rleg to x-axis <1> speed <10.000000>;
	turn rfoot to x-axis <-23> speed <230.000000>;
	
	turn lthigh to z-axis <2> speed <20.000000>;
	turn lthigh to x-axis <-21> speed <370.000000>;
	turn lleg to x-axis <-22> speed <500.000000>;
	turn lfoot to x-axis <14> speed <650.000000>;
	
	turn pelvis to z-axis <-2> speed <20.000000>;
	move pelvis to y-axis [1] speed [10.000000];
	
	sleep 96;
	
	
	//step 2, foot fully back, heel lifted
	
	
	//turn rthigh to z-axis <-2> now;
	turn rthigh to x-axis <34> speed <120.000000>;
	turn rleg to x-axis <23> speed <220.000000>;
	turn rfoot to x-axis <-32> speed <90.000000>;
	
	turn lthigh to x-axis <5> speed <260.000000>;
	turn lleg to x-axis <-48> speed <260.000000>;
	turn lfoot to x-axis <43> speed <290.000000>;
	
	//turn pelvis to z-axis <-2> now;
	move pelvis to y-axis [0] speed [10.000000];
	
	sleep 96;
	
	//step 3, foot lifted, knee bent
	
	turn rthigh to z-axis <0> speed <20.000000>;
	turn rthigh to x-axis <16> speed <180.000000>;
	turn rleg to x-axis <28> speed <50.000000>;
	turn rfoot to x-axis <-51> speed <190.000000>;
	
	turn lthigh to z-axis <0> speed <20.000000>;
	turn lthigh to x-axis <0> speed <50.000000>;
	turn lleg to x-axis <0> speed <480.000000>;
	turn lfoot to x-axis <0> speed <430.000000>;
	
	turn pelvis to z-axis <0> speed <20.000000>;
	move pelvis to y-axis [0] now;
	
	sleep 96;
	
	//step 4 foot lifted, knee extended
	
	turn rthigh to z-axis <2> speed <20.000000>;
	turn rthigh to x-axis <-21> speed <370.000000>;
	turn rleg to x-axis <-22> speed <500.000000>;
	turn rfoot to x-axis <14> speed <650.000000>;
	
	turn lthigh to z-axis <-2> speed <20.000000>;
	turn lthigh to x-axis <22> speed <220.000000>;
	turn lleg to x-axis <1> speed <10.000000>;
	turn lfoot to x-axis <-23> speed <230.000000>;
	
	turn pelvis to z-axis <2> speed <20.000000>;
	move pelvis to y-axis [1] speed [10.000000];
	
	sleep 96;
	
	//step 5, foot on ground, knee extended
	
	
	// turn rthigh to z-axis <5> now;
	turn rthigh to x-axis <5> speed <260.000000>;
	turn rleg to x-axis <-48> speed <260.000000>;
	turn rfoot to x-axis <43> speed <290.000000>;
	
	//turn lthigh to z-axis <-2> now;
	turn lthigh to x-axis <34> speed <120.000000>;
	turn lleg to x-axis <23> speed <220.000000>;
	turn lfoot to x-axis <-32> speed <90.000000>;
	
	// turn pelvis to z-axis <2> now;
	move pelvis to y-axis [0] speed [10.000000];
	
	sleep 96;
	
	//Step 0, all back to default
	
	turn rthigh to z-axis <0> speed <20.000000>;
	turn rthigh to x-axis <0> speed <50.000000>;
	turn rleg to x-axis <0> speed <480.000000>;
	turn rfoot to x-axis <0> speed <430.000000>;
	
	turn lthigh to z-axis <0> speed <20.000000>;
	turn lthigh to x-axis <16> speed <180.000000>;
	turn lleg to x-axis <28> speed <50.000000>;
	turn lfoot to x-axis <-51> speed <190.000000>;
	
	turn pelvis to z-axis <0> speed <20.000000>;
	move pelvis to y-axis [0] now;
	
	sleep 96;

}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
						
				turn rthigh to z-axis <0> speed <20.000000>;
				turn rthigh to x-axis <0> speed <50.000000>;
				turn rleg to x-axis <0> speed <480.000000>;
				turn rfoot to x-axis <0> speed <430.000000>;
						
				turn lthigh to z-axis <0> speed <20.000000>;
				turn lthigh to x-axis <0> speed <50.000000>;
				turn lleg to x-axis <0> speed <480.000000>;
				turn lfoot to x-axis <0> speed <430.000000>;
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}


HitByWeapon(anglex, anglez)
{
	turn pelvis to z-axis <0> - anglez speed <105.000000>;
	turn pelvis to x-axis <0> - anglex speed <105.000000>;
	wait-for-turn pelvis around z-axis;
	wait-for-turn pelvis around x-axis;
	turn pelvis to z-axis <0.000000> speed <30.000000>;
	turn pelvis to x-axis <0.000000> speed <30.000000>;
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	gun_1 = 1;

	restore_delay = 3000;
	start-script MotionControl();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn body to y-axis <0.000000> speed <120.000000>;
	turn lturret to x-axis <0.000000> speed <120.000000>;
	turn rturret to x-axis <0.000000> speed <120.000000>;
	turn misturret to y-axis <0.000000> speed <120.000000>;
	bAiming = FALSE;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 250;
	}
	turn body to y-axis heading speed <140.000000>;
	turn lturret to x-axis 0 - pitch speed <360>;
	turn rturret to x-axis 0 - pitch speed <360>;
	wait-for-turn body around y-axis;
	wait-for-turn lturret around x-axis;
	
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn misturret to y-axis heading speed <180.000000>;
	wait-for-turn misturret around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}
FirePrimary()
{
	if( gun_1 == 1 )
	{
		move lbarrel to z-axis [-2.000000] speed [30.000000];
		show lflare;
		sleep 150;
		hide lflare;
		move lbarrel to z-axis [0.000000] speed [10.000000];
		gun_1 = 2;
		return (0);
	}
	if( gun_1 == 2 )
	{
		move rbarrel to z-axis [-2.000000] speed [30.000000];
		show rflare;
		sleep 150;
		hide rflare;
		move rbarrel to z-axis [0.000000] speed [10.000000];
		gun_1 = 1;
		return (0);
	}
}

FireSecondary()
{
	show misflare;
	sleep 150;
	hide misflare;
}


AimFromPrimary(piecenum)
{
	piecenum = body;
}

AimFromSecondary(piecenum)
{
	piecenum = misturret;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = lflare;
	}
	if( gun_1 == 2 )
	{
		piecenum = rflare;
	}
}

QuerySecondary(piecenum)
{
	piecenum = misflare;
}


SweetSpot(piecenum)
{
	piecenum = body;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY;
		explode rthigh type BITMAPONLY;
		explode rleg type BITMAPONLY;
		explode rfoot type FIRE | SMOKE | FALL;
		explode lthigh type BITMAPONLY;
		explode lleg type BITMAPONLY;
		explode lfoot type BITMAPONLY;
		explode body type BITMAPONLY;
		explode misturret type BITMAPONLY;
		explode misflare type BITMAPONLY;
		explode lturret type BITMAPONLY;
		explode lbarrel type BITMAPONLY;
		explode lflare type BITMAPONLY;
		explode rturret type BITMAPONLY;
		explode rbarrel type BITMAPONLY;
		explode rflare type BITMAPONLY;
		return(0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type BITMAPONLY;
		explode rthigh type FALL;
		explode rleg type FALL;
		explode rfoot type FIRE | SMOKE | FALL;
		explode lthigh type FALL;
		explode lleg type FALL;
		explode lfoot type FIRE | SMOKE | FALL;
		explode misturret type FIRE | SMOKE | FALL;
		explode misflare type FALL;
		explode lturret type FIRE | SMOKE | FALL;
		explode lbarrel type FIRE | SMOKE | FALL;
		explode lflare type FALL;
		explode rturret type FIRE | SMOKE | FALL;
		explode rbarrel type FIRE | SMOKE | FALL;
		explode rflare type FIRE | SMOKE | FALL;
		return(0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL;
		explode rthigh type SMOKE | FALL;
		explode rleg type FIRE | SMOKE | FALL;
		explode rfoot type FIRE | SMOKE | FALL;
		explode lthigh type SMOKE | FALL;
		explode lleg type SMOKE | FALL;
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode body type BITMAPONLY;
		explode misturret type SMOKE | FALL;
		explode misflare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lturret type SHATTER;
		explode lbarrel type FIRE | SMOKE | FALL;
		explode lflare type EXPLODE_ON_HIT | SMOKE | FALL;
		explode rturret type SHATTER;
		explode rbarrel type SMOKE | FALL;
		explode rflare type EXPLODE_ON_HIT | SMOKE | FALL;
		return(0);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rthigh type EXPLODE_ON_HIT | FIRE | FALL;
		explode rleg type EXPLODE_ON_HIT | FIRE | FALL;
		explode rfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lthigh type EXPLODE_ON_HIT | FIRE | FALL;
		explode lleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode body type EXPLODE_ON_HIT | FIRE | FALL;
		explode misturret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode misflare type EXPLODE_ON_HIT | FIRE | FALL;
		explode lturret type SHATTER;
		explode lbarrel type EXPLODE_ON_HIT | FIRE | FALL;
		explode lflare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rturret type SHATTER;
		explode rbarrel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rflare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
}
