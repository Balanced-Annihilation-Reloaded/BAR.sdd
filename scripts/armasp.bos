#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pad1, pad2, pad3, pad0, tower, nano1,nano2,nano3,nano4;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from tower;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Create()
{
	start-script SmokeUnit();
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = tower;
	return (0);
}

QueryLandingPad(Func_Var_1, Func_Var_2, Func_Var_3, Func_Var_4)
{
	Func_Var_1 = pad1;
	Func_Var_2 = pad2;
	Func_Var_3 = pad3;
	Func_Var_4 = pad0;
	return (0);
}

QueryNanoPiece(piecenum)
{
	piecenum = tower;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY;
		explode tower type FIRE | SMOKE | FALL;
		explode nano1 type BITMAPONLY;
		explode nano2 type BITMAPONLY;
		explode nano3 type BITMAPONLY;
		explode nano4 type BITMAPONLY;
		explode pad1 type BITMAPONLY;
		explode pad2 type BITMAPONLY;
		explode pad3 type BITMAPONLY;
		explode pad0 type BITMAPONLY;
		return(0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY;
		explode tower type FIRE | SMOKE | FALL;
		explode nano1 type FIRE | SMOKE | FALL;
		explode nano2 type FIRE | SMOKE | FALL;
		explode nano3 type FIRE | SMOKE | FALL;
		explode nano4 type FIRE | SMOKE | FALL;
		explode pad1 type FALL;
		explode pad2 type FALL;
		explode pad3 type FALL;
		explode pad0 type FALL;
		return(0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode tower type FIRE | SMOKE | FALL;
		explode nano1 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode nano2 type FIRE | SMOKE | FALL;
		explode nano3 type SMOKE | FALL;
		explode nano4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode pad1 type FIRE | SMOKE | FALL;
		explode pad2 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode pad3 type SMOKE | FALL;
		explode pad0 type EXPLODE_ON_HIT | SMOKE | FALL;
		return(0);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode tower type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode nano2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode nano3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode nano4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode pad1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode pad2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode pad3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode pad0 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
}
