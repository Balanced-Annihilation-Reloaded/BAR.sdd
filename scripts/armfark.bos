#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SIG_BUILD		4	

piece  pelvis, lthigh, rthigh, torso, rleg, rfoot, lleg, lfoot,
       luparm, ruparm, rnano, lnano;

static-var  bMoving, notBuilding, nanoNozzle, moveSpeed, currentSpeed,
			statechg_DesiredState, statechg_StateChanging, animSpeed;

walk()
{
	//maxvelocity = 2.6400001049042= 75 elmos/sec
	//animspeed 36 elmos/cycle
	// default rleg y=-3.5 z=-2.0
	//step 0
	if (bMoving)
	{
	turn rthigh to x-axis <0> speed <330.000000>;
	move rleg to y-axis [0] speed [20.000000];
	move rleg to z-axis [0] speed [20.000000];
	turn rfoot to x-axis <0> speed <300.000000>;
	turn lthigh to x-axis <0> speed <620.000000>;
	move lleg to y-axis [2] speed [20.000000];
	move lleg to z-axis [-2] speed [20.000000];
	turn lfoot to x-axis <-16> speed <160.000000>;

	turn luparm to x-axis <60> speed <300.000000>;
	turn ruparm to x-axis <60> speed <300.000000>;
	turn torso to y-axis <0> speed <50.000000>;

	move pelvis to y-axis [0] now;
	turn pelvis to z-axis <0> speed <30.000000>;
	turn pelvis to x-axis <0> speed <30.000000>;

	sleep 90;

	}
	if (bMoving)
	{
	//step 1
	turn rthigh to x-axis <54> speed <540.000000>;
	move rleg to y-axis [-2] speed [20.000000];
	move rleg to z-axis [2] speed [20.000000];
	turn rfoot to x-axis <-55> speed <550.000000>;
	turn lthigh to x-axis <-47> speed <470.000000>;
	move lleg to y-axis [-0.5] speed [25.000000];
	move lleg to z-axis [0.5] speed [25.000000];
	turn lfoot to x-axis <-5> speed <110.000000>;

	turn luparm to x-axis <80> speed <200.000000>;
	turn ruparm to x-axis <40> speed <200.000000>;
	turn torso to y-axis <3> speed <30.000000>;

	move pelvis to y-axis [0.5] speed [5.000000];
	turn pelvis to z-axis <2> speed <20.000000>;
	turn pelvis to x-axis <1.5> speed <15.000000>;

	sleep 90;
	}
	if (bMoving)
	{

	//step 2
	turn rthigh to x-axis <62> speed <80.000000>;
	move rleg to y-axis [0] speed [20.000000];
	move rleg to z-axis [0] speed [20.000000];
	turn rfoot to x-axis <0> speed <550.000000>;
	turn lthigh to x-axis <-33> speed <140.000000>;
	move lleg to y-axis [-2] speed [15.000000];
	move lleg to z-axis [2] speed [15.000000];
	turn lfoot to x-axis <30> speed <350.000000>;

	turn luparm to x-axis <90> speed <100.000000>;
	turn ruparm to x-axis <30> speed <100.000000>;
	turn torso to y-axis <5> speed <20.000000>;

	move pelvis to y-axis [0] speed [5.000000];
	turn pelvis to z-axis <3> speed <10.000000>;
	turn pelvis to x-axis <3> speed <15.000000>;

	sleep 90;
	}
	if (bMoving)
	{

	//step 3
	turn rthigh to x-axis <0> speed <620.000000>;
	move rleg to y-axis [2] speed [20.000000];
	move rleg to z-axis [-2] speed [20.000000];
	turn rfoot to x-axis <-16> speed <160.000000>;
	turn lthigh to x-axis <0> speed <330.000000>;
	move lleg to y-axis [0] speed [20.000000];
	move lleg to z-axis [0] speed [20.000000];
	turn lfoot to x-axis <0> speed <300.000000>;

	turn luparm to x-axis <60> speed <300.000000>;
	turn ruparm to x-axis <60> speed <300.000000>;
	turn torso to y-axis <0> speed <50.000000>;

	move pelvis to y-axis [0] now;
	turn pelvis to z-axis <0> speed <30.000000>;
	turn pelvis to x-axis <0> speed <30.000000>;

	sleep 90;
	}
	if (bMoving)
	{

	//step 4
	turn rthigh to x-axis <-47> speed <470.000000>;
	move rleg to y-axis [-0.5] speed [25.000000];
	move rleg to z-axis [0.5] speed [25.000000];
	turn rfoot to x-axis <-5> speed <110.000000>;
	turn lthigh to x-axis <54> speed <540.000000>;
	move lleg to y-axis [-2] speed [20.000000];
	move lleg to z-axis [2] speed [20.000000];
	turn lfoot to x-axis <-55> speed <550.000000>;

	turn luparm to x-axis <40> speed <200.000000>;
	turn ruparm to x-axis <80> speed <200.000000>;
	turn torso to y-axis <-3> speed <30.000000>;

	move pelvis to y-axis [0.5] speed [5.000000];
	turn pelvis to z-axis <-2> speed <20.000000>;
	turn pelvis to x-axis <1.5> speed <15.000000>;

	sleep 90;
	}
	if (bMoving)
	{

	//step 5
	turn rthigh to x-axis <-33> speed <140.000000>;
	move rleg to y-axis [-2] speed [15.000000];
	move rleg to z-axis [2] speed [15.000000];
	turn rfoot to x-axis <30> speed <350.000000>;
	turn lthigh to x-axis <62> speed <80.000000>;
	move lleg to y-axis [0] speed [20.000000];
	move lleg to z-axis [0] speed [20.000000];
	turn lfoot to x-axis <0> speed <550.000000>;

	turn luparm to x-axis <30> speed <100.000000>;
	turn ruparm to x-axis <90> speed <100.000000>;
	turn torso to y-axis <-5> speed <20.000000>;

	move pelvis to y-axis [0] speed [5.000000];
	turn pelvis to z-axis <-3> speed <10.000000>;
	turn pelvis to x-axis <3> speed <15.000000>;

	sleep 90;
	}

}

walklegs()
{
	if (bMoving)
	{
	turn rthigh to x-axis <0> speed <330.000000>;
	move rleg to y-axis [0] speed [20.000000];
	move rleg to z-axis [0] speed [20.000000];
	turn rfoot to x-axis <0> speed <300.000000>;
	turn lthigh to x-axis <0> speed <620.000000>;
	move lleg to y-axis [2] speed [20.000000];
	move lleg to z-axis [-2] speed [20.000000];
	turn lfoot to x-axis <-16> speed <160.000000>;


	move pelvis to y-axis [0] now;
	turn pelvis to z-axis <0> speed <30.000000>;
	turn pelvis to x-axis <0> speed <30.000000>;

	sleep 90;

	}
	if (bMoving)
	{
	//step 1
	turn rthigh to x-axis <54> speed <540.000000>;
	move rleg to y-axis [-2] speed [20.000000];
	move rleg to z-axis [2] speed [20.000000];
	turn rfoot to x-axis <-55> speed <550.000000>;
	turn lthigh to x-axis <-47> speed <470.000000>;
	move lleg to y-axis [-0.5] speed [25.000000];
	move lleg to z-axis [0.5] speed [25.000000];
	turn lfoot to x-axis <-5> speed <110.000000>;

	move pelvis to y-axis [0.5] speed [5.000000];
	turn pelvis to z-axis <2> speed <20.000000>;
	turn pelvis to x-axis <1.5> speed <15.000000>;

	sleep 90;
	}
	if (bMoving)
	{

	//step 2
	turn rthigh to x-axis <62> speed <80.000000>;
	move rleg to y-axis [0] speed [20.000000];
	move rleg to z-axis [0] speed [20.000000];
	turn rfoot to x-axis <0> speed <550.000000>;
	turn lthigh to x-axis <-33> speed <140.000000>;
	move lleg to y-axis [-2] speed [15.000000];
	move lleg to z-axis [2] speed [15.000000];
	turn lfoot to x-axis <30> speed <350.000000>;

	move pelvis to y-axis [0] speed [5.000000];
	turn pelvis to z-axis <3> speed <10.000000>;
	turn pelvis to x-axis <3> speed <15.000000>;

	sleep 90;
	}
	if (bMoving)
	{

	//step 3
	turn rthigh to x-axis <0> speed <620.000000>;
	move rleg to y-axis [2] speed [20.000000];
	move rleg to z-axis [-2] speed [20.000000];
	turn rfoot to x-axis <-16> speed <160.000000>;
	turn lthigh to x-axis <0> speed <330.000000>;
	move lleg to y-axis [0] speed [20.000000];
	move lleg to z-axis [0] speed [20.000000];
	turn lfoot to x-axis <0> speed <300.000000>;


	move pelvis to y-axis [0] now;
	turn pelvis to z-axis <0> speed <30.000000>;
	turn pelvis to x-axis <0> speed <30.000000>;

	sleep 90;
	}
	if (bMoving)
	{

	//step 4
	turn rthigh to x-axis <-47> speed <470.000000>;
	move rleg to y-axis [-0.5] speed [25.000000];
	move rleg to z-axis [0.5] speed [25.000000];
	turn rfoot to x-axis <-5> speed <110.000000>;
	turn lthigh to x-axis <54> speed <540.000000>;
	move lleg to y-axis [-2] speed [20.000000];
	move lleg to z-axis [2] speed [20.000000];
	turn lfoot to x-axis <-55> speed <550.000000>;
	move pelvis to y-axis [0.5] speed [5.000000];
	turn pelvis to z-axis <-2> speed <20.000000>;
	turn pelvis to x-axis <1.5> speed <15.000000>;

	sleep 90;
	}
	if (bMoving)
	{

	//step 5
	turn rthigh to x-axis <-33> speed <140.000000>;
	move rleg to y-axis [-2] speed [15.000000];
	move rleg to z-axis [2] speed [15.000000];
	turn rfoot to x-axis <30> speed <350.000000>;
	turn lthigh to x-axis <62> speed <80.000000>;
	move lleg to y-axis [0] speed [20.000000];
	move lleg to z-axis [0] speed [20.000000];
	turn lfoot to x-axis <0> speed <550.000000>;


	move pelvis to y-axis [0] speed [5.000000];
	turn pelvis to z-axis <-3> speed <10.000000>;
	turn pelvis to x-axis <3> speed <15.000000>;

	sleep 90;
	}

}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = notBuilding;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				call-script walk();
			}
			else
			{
				call-script walklegs();
			}
		}
		else
		{
			turn rthigh to x-axis <0> speed <330.000000>;
			move rleg to y-axis [0] speed [20.000000];
			move rleg to z-axis [0] speed [20.000000];
			turn rfoot to x-axis <0> speed <300.000000>;
			turn lthigh to x-axis <0> speed <620.000000>;
			move lleg to y-axis [0] speed [20.000000];
			move lleg to z-axis [0] speed [20.000000];
			turn lfoot to x-axis <0> speed <160.000000>;
		
			turn luparm to x-axis <60> speed <300.000000>;
			turn ruparm to x-axis <60> speed <300.000000>;
			turn torso to y-axis <0> speed <50.000000>;
		
			move pelvis to y-axis [0] speed [10];
			turn pelvis to z-axis <0> speed <30.000000>;
			turn pelvis to x-axis <0> speed <30.000000>;
		
			sleep 200;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		animSpeed = 6000 / currentSpeed;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{

	turn luparm to x-axis <0.010989> speed <160.000000>;
	turn ruparm to x-axis <0.010989> speed <160.000000>;
}

Stop()
{
	set INBUILDSTANCE to 0;
	turn torso to y-axis <0.000000> speed <160.000000>;
	turn luparm to x-axis <45.000000> speed <160.000000>;
	turn ruparm to x-axis <45.000000> speed <160.000000>;
	wait-for-turn torso around y-axis;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			notBuilding = 1;
			currentstate = 1;
		}
		else
		{
			call-script Go();
			notBuilding = 0;
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	bMoving = FALSE;
	notBuilding = 1;
	nanoNozzle = 0;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	moveSpeed = get MAX_SPEED;
	animSpeed = 60;
	start-script SmokeUnit();
	turn luparm to x-axis <45.010989> speed <45>;
	turn ruparm to x-axis <45.010989> speed <45>;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(heading, pitch)
{
	start-script RequestState(0);
	while( notBuilding ) sleep 100;
	signal SIG_BUILD;
	turn torso to y-axis heading speed <160.000000>;
	wait-for-turn torso around y-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	signal SIG_BUILD;	
	set-signal-mask SIG_BUILD;
	sleep 6000;
	set-signal-mask 0;
	signal SIG_BUILD;	
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = pelvis;
}

QueryNanoPiece(piecenum)
{
	piecenum = rnano + nanoNozzle;
	nanoNozzle = !nanoNozzle;
}

/*
TargetHeading(Func_Var_1)
{
	Static_Var_5 = 0 - Func_Var_1;
}
*/

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lfoot type BITMAPONLY | BITMAP5;
		explode lleg type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rfoot type BITMAPONLY | BITMAP3;
		explode rleg type BITMAPONLY | BITMAP4;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode torso type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lfoot type FALL | BITMAP5;
		explode lleg type FALL | BITMAP1;
		explode lthigh type FALL | BITMAP3;
		explode pelvis type FALL | BITMAP4;
		explode rfoot type FALL | BITMAP2;
		explode rleg type FALL | BITMAP3;
		explode rthigh type FALL | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type BITMAPONLY | BITMAP1;
}
