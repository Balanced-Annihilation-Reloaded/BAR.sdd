#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece body, lthigh, rthigh, lleg, rleg, rfoot,lfoot, turret, flare, barrel;

static-var  bMoving, Static_Var_2, Static_Var_3, restore_delay;

// Signal definitions
#define SIG_AIM				2


walk()
{
	//speed = 30 elmos/sec, anim= 30 elmos/cycle
	
	//speed = 30 elmos/sec, anim= 30 elmos/cycle

//step 0

//step 0
turn rthigh to x-axis <0> speed <70.000000>;
turn rleg to x-axis <0> speed <5.000000>;
turn rfoot to x-axis <0> speed <55.000000>;
turn lthigh to x-axis <-53> speed <355.000000>;
turn lleg to x-axis <89> speed <380.000000>;
turn lfoot to x-axis <-35> speed <65.000000>;

turn body to z-axis <0> speed <15.000000>;
turn body to x-axis <0> speed <25.000000>;

sleep 195;


//step 1
turn rthigh to x-axis <19> speed <95.000000>;
turn rleg to x-axis <-8> speed <40.000000>;
turn rfoot to x-axis <-8> speed <40.000000>;
turn lthigh to x-axis <-70> speed <85.000000>;
turn lleg to x-axis <65> speed <120.000000>;
turn lfoot to x-axis <-6> speed <145.000000>;

turn body to z-axis <-2> speed <10.000000>;
turn body to x-axis <-3> speed <15.000000>;

sleep 195;


//step 2
turn rthigh to x-axis <18> speed <5.000000>;
turn rleg to x-axis <13> speed <105.000000>;
turn rfoot to x-axis <-22> speed <70.000000>;
turn lthigh to x-axis <-14> speed <280.000000>;
turn lleg to x-axis <-1> speed <330.000000>;
turn lfoot to x-axis <11> speed <85.000000>;

turn body to z-axis <-3> speed <5.000000>;
turn body to x-axis <5> speed <10.000000>;

sleep 195;


//step 3 back to normal :)
turn rthigh to x-axis <-53> speed <355.000000>;
turn rleg to x-axis <89> speed <380.000000>;
turn rfoot to x-axis <-35> speed <65.000000>;
turn lthigh to x-axis <0> speed <70.000000>;
turn lleg to x-axis <0> speed <5.000000>;
turn lfoot to x-axis <0> speed <55.000000>;

turn body to z-axis <0> speed <15.000000>;
turn body to x-axis <0> speed <25.000000>;

sleep 195;


//step 4
turn rthigh to x-axis <-70> speed <85.000000>;
turn rleg to x-axis <65> speed <120.000000>;
turn rfoot to x-axis <-6> speed <145.000000>;
turn lthigh to x-axis <19> speed <95.000000>;
turn lleg to x-axis <-8> speed <40.000000>;
turn lfoot to x-axis <-8> speed <40.000000>;

turn body to z-axis <2> speed <10.000000>;
turn body to x-axis <3> speed <15.000000>;

sleep 195;


//step 5
turn rthigh to x-axis <-14> speed <280.000000>;
turn rleg to x-axis <-1> speed <330.000000>;
turn rfoot to x-axis <11> speed <85.000000>;
turn lthigh to x-axis <18> speed <5.000000>;
turn lleg to x-axis <13> speed <105.000000>;
turn lfoot to x-axis <-22> speed <70.000000>;

turn body to z-axis <3> speed <5.000000>;
turn body to x-axis <-5> speed <10.000000>;

sleep 95;


	

}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_2;
		if( moving )
		{
			call-script walk();

			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
			
				turn rthigh to x-axis <0> speed <84.000000>;
				turn rleg to x-axis <0> speed <60.000000>;
				turn rfoot to x-axis <0> speed <66.000000>;
				turn lthigh to x-axis <0> speed <60.000000>;
				turn lleg to x-axis <0> speed <45.000000>;
				turn lfoot to x-axis <0> speed <78.000000>;
				
				turn body to z-axis <0> speed <18.000000>;
				turn body to x-axis <0> speed <30.000000>;
				
				sleep 195;
			
			}
			sleep 166;
			justmoved = FALSE;
		}
		sleep 98;
	}
	return (0);
}

Create()
{
	bMoving = FALSE;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	hide flare;
	dont-cache flare;
	restore_delay = 3000;
	start-script MotionControl();
	start-script SmokeUnit();
	return (0);
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
	return (0);
}

StartMoving()
{
	bMoving = TRUE;
	return (0);
}

StopMoving()
{
	bMoving = FALSE;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = body;
	return (0);
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn turret to y-axis <0.000000> speed <50.000000>;
	turn turret to x-axis <0.000000> speed <100.000000>;
	Static_Var_2 = 0;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = barrel;
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = flare;
	return (0);
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <100.000000>;
	turn turret to x-axis <0.000000> - pitch speed <75.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	move barrel to z-axis [-7.500000] speed [56.250000];
	show flare;
	sleep 120;
	hide flare;
	move barrel to z-axis [0.000000] speed [2.500000];
	return (0);
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode body type BITMAPONLY | BITMAP1;
	return (0);
}

