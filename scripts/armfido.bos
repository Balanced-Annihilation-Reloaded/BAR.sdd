#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece torso, romp, lbthigh, lbleg, lbfoot, rbthigh, rbleg, rbfoot, lfthigh, lfleg, lffoot, rfthigh, rfleg, rffoot, neck, head, barrel, flare;

static-var restore_delay, Static_Var_2, gun_2, statechg_DesiredState,
			statechg_StateChanging, moveSpeed, currentSpeed, animSpeed;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM				4
#define SIG_AIM_2			8


walk()
{
	while( TRUE )
	{


		//maxvelocity = 2.2999999523163, speed = 70 elmos/sec
		//animspeed 40 elmos per cycle
		
				//step 0 
		turn rfthigh to x-axis <0> speed <370.000000>;
		turn rfleg to x-axis <0> speed <520.000000>;
		turn rffoot to x-axis <0> speed <120.000000>;
		
		turn lfthigh to x-axis <35> speed <40.000000>;
		turn lfleg to x-axis <-33> speed <460.000000>;
		turn lffoot to x-axis <-29> speed <190.000000>;
		//foot back lifted
		
		turn rbthigh to x-axis <43> speed <250.000000>;
		turn rbleg to x-axis <4> speed <470.000000>;
		turn rbfoot to x-axis <-59> speed <220.000000>;
		turn lbthigh to x-axis <0> speed <350.000000>;
		turn lbleg to x-axis <0> speed <170.000000>;
		turn lbfoot to x-axis <0> speed <60.000000>;
		
		move torso to y-axis [1] now;
		turn torso to z-axis <4> now;
		turn romp to z-axis <-6> now;
		
		
		sleep 95;
		
		//step 1
		turn rfthigh to x-axis <20> speed <200.000000>;
		turn rfleg to x-axis <-2> speed <20.000000>;
		turn rffoot to x-axis <-14> speed <140.000000>;
		
		turn lfthigh to x-axis <17> speed <180.000000>;
		turn lfleg to x-axis <-39> speed <60.000000>;
		turn lffoot to x-axis <20> speed <490.000000>;
		//foot fw lifted
		
		turn rbthigh to x-axis <7> speed <360.000000>;
		turn rbleg to x-axis <-13> speed <170.000000>;
		turn rbfoot to x-axis <-43> speed <160.000000>;
		turn lbthigh to x-axis <21> speed <210.000000>;
		turn lbleg to x-axis <14> speed <140.000000>;
		turn lbfoot to x-axis <-13> speed <130.000000>;
		
		move torso to y-axis [1] now;
		turn torso to z-axis <0> speed <40.000000>;
		turn romp to z-axis <0> speed <60.000000>;
		
		sleep 95;
		//step 2 
		turn rfthigh to x-axis <31> speed <110.000000>;
		turn rfleg to x-axis <13> speed <150.000000>;
		turn rffoot to x-axis <-10> speed <40.000000>;
		
		turn lfthigh to x-axis <-37> speed <540.000000>;
		turn lfleg to x-axis <52> speed <910.000000>;
		turn lffoot to x-axis <-12> speed <320.000000>;
		// foot fw down
		
		turn rbthigh to x-axis <-35> speed <420.000000>;
		turn rbleg to x-axis <17> speed <300.000000>;
		turn rbfoot to x-axis <6> speed <490.000000>;
		turn lbthigh to x-axis <18> speed <30.000000>;
		turn lbleg to x-axis <51> speed <370.000000>;
		turn lbfoot to x-axis <-37> speed <240.000000>;
		
		move torso to y-axis [1] now;
		turn torso to z-axis <-4> speed <40.000000>;
		turn romp to z-axis <6> speed <60.000000>;
		
		sleep 95;
		//step 3 
		turn rfthigh to x-axis <35> speed <40.000000>;
		turn rfleg to x-axis <-33> speed <460.000000>;
		turn rffoot to x-axis <-29> speed <190.000000>;
		
		turn lfthigh to x-axis <0> speed <370.000000>;
		turn lfleg to x-axis <0> speed <520.000000>;
		turn lffoot to x-axis <0> speed <120.000000>;
		
		//0
		turn rbthigh to x-axis <0> speed <350.000000>;
		turn rbleg to x-axis <0> speed <170.000000>;
		turn rbfoot to x-axis <0> speed <60.000000>;
		turn lbthigh to x-axis <43> speed <250.000000>;
		turn lbleg to x-axis <4> speed <470.000000>;
		turn lbfoot to x-axis <-59> speed <220.000000>;
		
		move torso to y-axis [1] now;
		turn torso to z-axis <-4> now;
		turn romp to z-axis <6> now;
		
		sleep 95;
		//step 4 
		turn rfthigh to x-axis <17> speed <180.000000>;
		turn rfleg to x-axis <-39> speed <60.000000>;
		turn rffoot to x-axis <20> speed <490.000000>;
		
		turn lfthigh to x-axis <20> speed <200.000000>;
		turn lfleg to x-axis <-2> speed <20.000000>;
		turn lffoot to x-axis <-14> speed <140.000000>;
		//foot back
		
		turn rbthigh to x-axis <21> speed <210.000000>;
		turn rbleg to x-axis <14> speed <140.000000>;
		turn rbfoot to x-axis <-13> speed <130.000000>;
		
		turn lbthigh to x-axis <7> speed <360.000000>;
		turn lbleg to x-axis <-13> speed <170.000000>;
		turn lbfoot to x-axis <-43> speed <160.000000>;
		
		move torso to y-axis [1] now;
		turn torso to z-axis <0> speed <40.000000>;
		turn romp to z-axis <0> speed <60.000000>;
		
		sleep 95;
		//step 5 
		turn rfthigh to x-axis <-37> speed <540.000000>;
		turn rfleg to x-axis <52> speed <910.000000>;
		turn rffoot to x-axis <-12> speed <320.000000>;
		
		turn lfthigh to x-axis <31> speed <110.000000>;
		turn lfleg to x-axis <13> speed <150.000000>;
		turn lffoot to x-axis <-10> speed <40.000000>;
		
		//foot back heel up
		
		turn rbthigh to x-axis <18> speed <30.000000>;
		turn rbleg to x-axis <51> speed <370.000000>;
		turn rbfoot to x-axis <-37> speed <240.000000>;
		
		turn lbthigh to x-axis <-35> speed <420.000000>;
		turn lbleg to x-axis <17> speed <300.000000>;
		turn lbfoot to x-axis <6> speed <490.000000>;
		
		move torso to y-axis [1] now;
		turn torso to z-axis <4> speed <40.000000>;
		turn romp to z-axis <-6> speed <60.000000>;
		
		sleep 95;


}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		animSpeed = 11000 / currentSpeed;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			Static_Var_2 = 0;
			currentstate = 1;
		}
		else
		{
			Static_Var_2 = 1;
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	hide flare;
	dont-cache flare;
	restore_delay = 3000;
	Static_Var_2 = 0;
	gun_2 = 0;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	moveSpeed = get MAX_SPEED;
	animSpeed = 110;
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

Reload()
{
	sleep 2450;
	gun_2 = 0;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	start-script walk();
}

StopMoving()
{
	signal SIG_MOVE;
	turn rfthigh to x-axis <0> speed <370.000000>;
	turn rfleg to x-axis <0> speed <520.000000>;
	turn rffoot to x-axis <0> speed <120.000000>;
	
	turn lfthigh to x-axis <0> speed <40.000000>;
	turn lfleg to x-axis <0> speed <460.000000>;
	turn lffoot to x-axis <0> speed <190.000000>;
	//foot back lifted
	
	turn rbthigh to x-axis <0> speed <250.000000>;
	turn rbleg to x-axis <0> speed <470.000000>;
	turn rbfoot to x-axis <0> speed <220.000000>;
	turn lbthigh to x-axis <0> speed <350.000000>;
	turn lbleg to x-axis <0> speed <170.000000>;
	turn lbfoot to x-axis <0> speed <60.000000>;
	
	move torso to y-axis [0] speed [10];
	turn torso to z-axis <0> speed <100>;
	turn romp to z-axis <0> speed <100>;
	
	
	sleep 95;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask 0;
	turn neck to y-axis <0.000000> speed <90.000000>;
	turn head to x-axis <0.000000> speed <50.000000>;
	wait-for-turn neck around y-axis;
	wait-for-turn head around x-axis;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( Static_Var_2 == 1 OR gun_2 == 1 )
	{
		sleep 100;
	}
	turn neck to y-axis heading speed <150.000000>;
	turn head to x-axis <0.000000> - pitch speed <50.000000>;
	wait-for-turn neck around y-axis;
	wait-for-turn head around x-axis;
	while( Static_Var_2 == 1 OR gun_2 == 1 )
	{
		sleep 100;
	}
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	while( Static_Var_2 == 0 OR gun_2 == 1 )
	{
		sleep 100;
	}
	turn neck to y-axis heading speed <150.000000>;
	turn head to x-axis <0.000000> - pitch speed <50.000000>;
	wait-for-turn neck around y-axis;
	wait-for-turn head around x-axis;
	while( Static_Var_2 == 0 OR gun_2 == 1 )
	{
		sleep 100;
	}
	start-script RestoreAfterDelay();
	return (1);
}

AimFromPrimary(piecenum)
{
	piecenum = head;
}

AimFromSecondary(piecenum)
{
	piecenum = head;
}

FirePrimary()
{
	gun_2 = 1;
	show flare;
	sleep 150;
	hide flare;
	start-script Reload();
}

FireSecondary()
{
	gun_2 = 1;
	show flare;
	sleep 150;
	hide flare;
	start-script Reload();
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

QuerySecondary(piecenum)
{
	piecenum = flare;
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode flare type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode flare type FALL | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode flare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
