#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, flare3, flare4, base, xturret, barrel1, barrel2, barrel3, barrel4, yturret1, yturret2;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Create()
{

	gun_1 = flare1;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn xturret to y-axis heading speed <1200.000000>;
	turn yturret1 to x-axis <0.000000> - pitch speed <950.000000>;
	turn yturret2 to x-axis <0.000000> - pitch speed <950.000000>;
	wait-for-turn xturret around y-axis;
	wait-for-turn yturret1 around x-axis;
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move barrel1 to z-axis [-10.000000] now;
		sleep 150;
		move barrel1 to z-axis [0.000000] speed [37.500000];
		gun_1 = flare2;
		return (0);
	}
	if( gun_1 == 1 )
	{
		move barrel2 to z-axis [-10.000000] now;
		sleep 150;
		move barrel2 to z-axis [0.000000] speed [37.500000];
		gun_1 = flare3;
	}
	if( gun_1 == 2 )
	{
		move barrel3 to z-axis [-10.000000] now;
		sleep 150;
		move barrel3 to z-axis [0.000000] speed [37.500000];
		gun_1 = flare4;
	}
	if( gun_1 == 3 )
	{
		move barrel4 to z-axis [-10.000000] now;
		sleep 150;
		move barrel4 to z-axis [0.000000] speed [37.500000];
		gun_1 = flare1;
	}
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = Xturret;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY;
		explode xturret type BITMAPONLY;
		explode yturret1 type BITMAPONLY;
		explode barrel2 type FIRE | SMOKE | FALL;
		explode flare2 type BITMAPONLY;
		explode barrel1 type BITMAPONLY;
		explode flare1 type BITMAPONLY;
		explode yturret2 type BITMAPONLY;
		explode barrel3 type BITMAPONLY;
		explode flare3 type BITMAPONLY;
		explode barrel4 type BITMAPONLY;
		explode flare4 type BITMAPONLY;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY;
		explode xturret type FALL;
		explode yturret1 type FIRE | SMOKE | FALL;
		explode barrel2 type FIRE | SMOKE | FALL;
		explode flare2 type FIRE | SMOKE | FALL;
		explode barrel1 type FIRE | SMOKE | FALL;
		explode flare1 type FALL;
		explode yturret2 type FIRE | SMOKE | FALL;
		explode barrel3 type FIRE | SMOKE | FALL;
		explode flare3 type FIRE | SMOKE | FALL;
		explode barrel4 type FALL;
		explode flare4 type FALL;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode xturret type SMOKE | FALL;
		explode yturret1 type SMOKE | FALL;
		explode barrel2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel1 type SMOKE | FALL;
		explode flare1 type SMOKE | FALL;
		explode yturret2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel3 type SMOKE | FALL;
		explode flare3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel4 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode flare4 type EXPLODE_ON_HIT | SMOKE | FALL;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode xturret type EXPLODE_ON_HIT | FIRE | FALL;
		explode yturret1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode barrel2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode flare2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode barrel1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode yturret2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode barrel4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode flare4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
	return corpsetype;
}
