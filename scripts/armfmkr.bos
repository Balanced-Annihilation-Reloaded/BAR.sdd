#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, cover1, cover2;

static-var  Static_Var_1, Static_Var_2;


activatescr()
{
	if( TRUE )
	{
		turn cover1 to x-axis <75.000000> speed <60.000000>;
		turn cover2 to x-axis <-75.000000> speed <60.000000>;
		sleep 1603;
	}
	sleep 73;
}

deactivatescr()
{
	if( TRUE )
	{
		turn cover1 to x-axis <0.000000> speed <60.000000>;
		turn cover2 to x-axis <0.000000> speed <60.000000>;
		sleep 1603;
	}
	sleep 73;
}

HitByWeapon(anglex, anglez)
{
	turn base to z-axis <0> - anglez speed <65.000000>;
	turn base to x-axis <0> - anglex speed <65.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <20.000000>;
	turn base to x-axis <0.000000> speed <20.000000>;
}

RockOnWaves()
{
	var rockDir, rockAng, rockSpeed;
	rockDir = <-0.1>;
	rockAng = <-0.1>;
	while( TRUE )
	{
		while( get ABS(rockAng) < <1.31> )
		{
			rockSpeed = <1.45> - get ABS(rockAng);
			turn base to x-axis rockAng speed rockSpeed*5;
			turn base to z-axis rockAng speed rockSpeed*5;
			wait-for-turn base around x-axis;
			wait-for-turn base around z-axis;
			rockAng = rockAng + rockDir;
		}
		rockDir = 0 - rockDir;
		rockAng = rockAng + rockDir + rockDir;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script RockOnWaves();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	start-script activatescr();
	dont-cache cover1;
}

Stop()
{
	call-script deactivatescr();
	cache cover1;
}

ImAMetalMaker()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 150;
	}
	Static_Var_1 = -1;
	while( TRUE )
	{
		if( get UNKNOWN_UNIT_VALUE(1024) == 1 )
		{
			if( Static_Var_1 != 1 )
			{
				call-script Go();
				Static_Var_1 = 1;
			}
		}
		else if( Static_Var_1 != 0 )
		{
			call-script Stop();
			Static_Var_1 = 0;
		}
		sleep 1000;
	}
}

Create()
{
	dont-cache cover1;
	dont-shade cover1;
	start-script SmokeUnit();
	start-script ImAMetalMaker();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY;
		explode cover2 type FIRE | SMOKE | FALL;
		explode cover1 type BITMAPONLY;
		return(0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY;
		explode cover2 type FIRE | SMOKE | FALL;
		explode cover1 type FIRE | SMOKE | FALL;
		return(0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode cover2 type FIRE | SMOKE | FALL;
		explode cover1 type SMOKE | FALL;
		return(0);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode cover2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode cover1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
}
