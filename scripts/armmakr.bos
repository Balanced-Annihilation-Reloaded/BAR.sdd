#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, cover1, cover2;

#define WHAT_DO 1024

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

static-var  mmState;
ImAMetalMaker()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 150;
	}
	mmState = -1;
	while( TRUE )
	{
		if ((get WHAT_DO) == 1)
		{
			if (mmState != 1) {
				turn cover1 to z-axis <-60> speed <60>;
				turn cover2 to z-axis <60> speed <60>;
				sleep 1000;
				mmState = 1;
			}
		}
		else
		{
			if (mmState != 0) {	
				turn cover1 to z-axis <0> speed <60>;
				turn cover2 to z-axis <0> speed <60>;
				sleep 1000;
				mmState = 0;
			}
		}
		sleep 1000;
	}
}

Create()
{
	start-script SmokeUnit();
	start-script ImAMetalMaker();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY;
		explode cover1 type FIRE | SMOKE | FALL;
		explode cover2 type BITMAPONLY;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY;
		explode cover1 type FIRE | SMOKE | FALL;
		explode cover2 type FIRE | SMOKE | FALL;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL;
		explode cover1 type FIRE | SMOKE | FALL;
		explode cover2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode cover1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode cover2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
	return corpsetype;
}
