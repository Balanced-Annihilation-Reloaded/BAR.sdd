#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, cover1, cover2;

static-var  Static_Var_1, mmState, Active;

activatescr()
{
	if( TRUE )
	{
		turn cover1 to z-axis <60> speed <60>;
		turn cover2 to z-axis <-60> speed <60>;
		sleep 1000;
	}
	sleep 774;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

deactivatescr()
{
	if( TRUE )
	{
		turn cover1 to z-axis <0> speed <60>;
		turn cover2 to z-axis <0> speed <60>;
		sleep 1000;
	}
	sleep 774;
	return (0);
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Go()
{
	call-script activatescr();
	set ARMORED to 0;
}

Stop()
{
	set ARMORED to 1;
	call-script deactivatescr();
}

MMStatus(State)
{
	Active = State;
	//get PRINT(Active);
}

ImAMetalMaker()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 150;
	}
	mmState = -1;
	while( TRUE )
	{
		if (Active == 1)
		{
			if (mmState != 1) {
				call-script Go();
				mmState = 1;
			}
		}
		else
		{
			if (mmState != 0) {
				call-script Stop();
				mmState = 0;
			}
		}
		sleep 1000;
	}
}

Create()
{
	start-script SmokeUnit();
	Static_Var_1 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	set ARMORED to 1;
	start-script ImAMetalMaker();
}

HitByWeapon(anglex, anglez)  //Can be removed does nothing at all only visualy they will look closed (MM are controled by gadget and still producing metal)
{
	if( get ACTIVATION )
	{
		Static_Var_1 = 1;
	}
	if( Static_Var_1 )
	{
		signal 2;
		set-signal-mask 2;
		set ACTIVATION to 0;
		sleep 8000;
		Static_Var_1 = 0;
		set ACTIVATION to 100;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY;
		explode cover1 type FIRE | SMOKE | FALL;
		explode cover2 type BITMAPONLY;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY;
		explode cover1 type FIRE | SMOKE | FALL;
		explode cover2 type FIRE | SMOKE | FALL;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode cover1 type FIRE | SMOKE | FALL;
		explode cover2 type EXPLODE_ON_HIT | SMOKE | FALL;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode cover1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode cover2 type EXPLODE_ON_HIT | FIRE | FALL;
	return corpsetype;
}
