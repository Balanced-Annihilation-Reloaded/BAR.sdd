#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  leg1, leg2, leg3, leg4, base, body;

static-var  bMoving;


walkscr()
{
	while( bMoving )
	{
		if( bMoving )
		{
			turn leg1 to z-axis <0.000000> now;
			sleep 33;
		}

	}
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walkscr();
		}
		else
		{
			sleep 100;
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{

	bMoving = FALSE;
	start-script SmokeUnit();
}

StartMoving()
{
	move leg1 to y-axis [0] speed [28];
	move leg2 to y-axis [0] speed [28];
	move base to y-axis [0] speed [28];
	spin base around x-axis speed <270> accelerate <270>;
	sleep 150;
	move leg3 to y-axis [0] speed [28];
	move leg4 to y-axis [0] speed [28];
	bMoving = TRUE;
}

StopMoving()
{

	stop-spin base around x-axis;
	turn base to x-axis <0> speed <270>;
	move leg1 to y-axis [-6] speed [18];
	move leg2 to y-axis [-6] speed [18];
	move leg4 to y-axis [-6] speed [18];
	move leg3 to y-axis [-6] speed [18];
	move base to y-axis [6] speed [18];
	wait-for-turn base around x-axis;
	
	bMoving = FALSE;
}

FireWeapon1()
{
	emit-sfx 4097 from leg1; //Weapon2 detonates the crawling bomb once weapon1 fires
}

SweetSpot(piecenum)
{
	piecenum = leg1;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode leg1 type BITMAPONLY | BITMAP2;
		explode leg2 type BITMAPONLY | BITMAP3;
		explode leg3 type BITMAPONLY | BITMAP4;
		explode leg4 type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode leg1 type SHATTER | BITMAP2;
		explode leg2 type FALL | BITMAP3;
		explode leg3 type FALL | BITMAP4;
		explode leg4 type FALL | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode leg1 type SHATTER | BITMAP2;
		explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode leg1 type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
}
