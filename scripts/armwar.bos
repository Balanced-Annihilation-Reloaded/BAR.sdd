#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso,rflare, lflare , pelvis, lthigh, rthigh, luparm,
       ruparm, rarm, larm, rleg, rfoot, lleg, lfoot;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, gun_1;

// Signal definitions
#define SIG_AIM				4

HitByWeapon(anglex, anglez)
{
	turn pelvis to z-axis anglez speed <105.000000>;
	turn pelvis to x-axis <0> - anglex speed <105.000000>;
	wait-for-turn pelvis around z-axis;
	wait-for-turn pelvis around x-axis;
	turn pelvis to z-axis <0.000000> speed <30.000000>;
	turn pelvis to x-axis <0.000000> speed <30.000000>;
}


walk()
{

		//maxvelocity = 1.4, speed = 45 elmos/sec
		//animspeed 36 elmos per cycle


		if( bMoving )
		{	
		//step 0 
	
		turn rthigh to x-axis <0> speed <277.500000>;
		turn rleg to x-axis <0> speed <142.500000>;
		turn rfoot to x-axis <0> speed <202.500000>;
		turn lthigh to x-axis <9> speed <427.500000>;
		turn lleg to x-axis <34> speed <450.000000>;
		turn lfoot to x-axis <-40> speed <427.500000>;

		turn luparm to x-axis <-10> speed <75.000000>;
		turn larm to x-axis <5> speed <75.000000>;
		turn ruparm to x-axis <10> speed <75.000000>;
		turn rarm to x-axis <25> speed <75.000000>;

		move pelvis to y-axis [0] speed [11.250000];
		turn torso to y-axis <-5> speed <37.500000>;

		sleep 130;
		}
		if( bMoving )
		{	
		//step 1
	
		turn rthigh to x-axis <51> speed <382.500000>;
		turn rleg to x-axis <-36> speed <270.000000>;
		turn rfoot to x-axis <14> speed <105.000000>;
		turn lthigh to x-axis <-44> speed <397.500000>;
		turn lleg to x-axis <34> now;
		turn lfoot to x-axis <0> speed <300.000000>;

		turn luparm to x-axis <10> speed <150.000000>;
		turn larm to x-axis <25> speed <150.000000>;
		turn ruparm to x-axis <-10> speed <150.000000>;
		turn rarm to x-axis <5> speed <150.000000>;

		move pelvis to y-axis [-1] speed [7.500000];
		turn torso to y-axis <5> speed <75.000000>;

		sleep 130;
		}

		if( bMoving )
		{	
		//step 2
	
		turn rthigh to x-axis <66> speed <112.500000>;
		turn rleg to x-axis <-26> speed <75.000000>;
		turn rfoot to x-axis <17> speed <22.500000>;
		turn lthigh to x-axis <-37> speed <52.500000>;
		turn lleg to x-axis <-19> speed <397.500000>;
		turn lfoot to x-axis <27> speed <202.500000>;

		turn luparm to x-axis <20> speed <75.000000>;
		turn larm to x-axis <35> speed <75.000000>;
		turn ruparm to x-axis <-20> speed <75.000000>;
		turn rarm to x-axis <-5> speed <75.000000>;

		move pelvis to y-axis [-1.5] speed [3.750000];
		turn torso to y-axis <10> speed <37.500000>;

		sleep 130;
		}

		if( bMoving )
		{	
		//step 3
	
		turn rthigh to x-axis <9> speed <427.500000>;
		turn rleg to x-axis <34> speed <450.000000>;
		turn rfoot to x-axis <-40> speed <427.500000>;
		turn lthigh to x-axis <0> speed <277.500000>;
		turn lleg to x-axis <0> speed <142.500000>;
		turn lfoot to x-axis <0> speed <202.500000>;
		
		turn luparm to x-axis <10> speed <75.000000>;
		turn larm to x-axis <25> speed <75.000000>;
		turn ruparm to x-axis <-10> speed <75.000000>;
		turn rarm to x-axis <5> speed <75.000000>;

		move pelvis to y-axis [0] speed [11.250000];
		turn torso to y-axis <5> speed <37.500000>;

		sleep 130;
		}

		if( bMoving )
		{	
		//step 4
	
		turn rthigh to x-axis <-44> speed <397.500000>;
		turn rleg to x-axis <34> now;
		turn rfoot to x-axis <0> speed <300.000000>;
		turn lthigh to x-axis <51> speed <382.500000>;
		turn lleg to x-axis <-36> speed <270.000000>;
		turn lfoot to x-axis <14> speed <105.000000>;

		turn luparm to x-axis <-10> speed <150.000000>;
		turn larm to x-axis <5> speed <150.000000>;
		turn ruparm to x-axis <10> speed <150.000000>;
		turn rarm to x-axis <25> speed <150.000000>;

		move pelvis to y-axis [-1] speed [7.500000];
		turn torso to y-axis <-5> speed <75.000000>;

		sleep 130;
		}

		if( bMoving )
		{	
		//step 5
	
		turn rthigh to x-axis <-37> speed <52.500000>;
		turn rleg to x-axis <-19> speed <397.500000>;
		turn rfoot to x-axis <27> speed <202.500000>;
		turn lthigh to x-axis <66> speed <112.500000>;
		turn lleg to x-axis <-26> speed <75.000000>;
		turn lfoot to x-axis <17> speed <22.500000>;

		turn luparm to x-axis <-20> speed <75.000000>;
		turn larm to x-axis <-5> speed <75.000000>;
		turn ruparm to x-axis <20> speed <75.000000>;
		turn rarm to x-axis <35> speed <75.000000>;

		move pelvis to y-axis [-1.5] speed [3.750000];
		turn torso to y-axis <-10> speed <37.500000>;

		sleep 130;
		}

}

walklegs()
{


		if( bMoving )
		{	
		//step 0 
	
		turn rthigh to x-axis <0> speed <277.500000>;
		turn rleg to x-axis <0> speed <142.500000>;
		turn rfoot to x-axis <0> speed <202.500000>;
		turn lthigh to x-axis <9> speed <427.500000>;
		turn lleg to x-axis <34> speed <450.000000>;
		turn lfoot to x-axis <-40> speed <427.500000>;
		move pelvis to y-axis [0] speed [11.250000];

		sleep 130;
		}
		if( bMoving )
		{	
		//step 1
	
		turn rthigh to x-axis <51> speed <382.500000>;
		turn rleg to x-axis <-36> speed <270.000000>;
		turn rfoot to x-axis <14> speed <105.000000>;
		turn lthigh to x-axis <-44> speed <397.500000>;
		turn lleg to x-axis <34> now;
		turn lfoot to x-axis <0> speed <300.000000>;

		move pelvis to y-axis [-1] speed [7.500000];

		sleep 130;
		}

		if( bMoving )
		{	
		//step 2
	
		turn rthigh to x-axis <66> speed <112.500000>;
		turn rleg to x-axis <-26> speed <75.000000>;
		turn rfoot to x-axis <17> speed <22.500000>;
		turn lthigh to x-axis <-37> speed <52.500000>;
		turn lleg to x-axis <-19> speed <397.500000>;
		turn lfoot to x-axis <27> speed <202.500000>;

		move pelvis to y-axis [-1.5] speed [3.750000];

		sleep 130;
		}

		if( bMoving )
		{	
		//step 3
	
		turn rthigh to x-axis <9> speed <427.500000>;
		turn rleg to x-axis <34> speed <450.000000>;
		turn rfoot to x-axis <-40> speed <427.500000>;
		turn lthigh to x-axis <0> speed <277.500000>;
		turn lleg to x-axis <0> speed <142.500000>;
		turn lfoot to x-axis <0> speed <202.500000>;
		
		move pelvis to y-axis [0] speed [11.250000];

		sleep 130;
		}

		if( bMoving )
		{	
		//step 4
	
		turn rthigh to x-axis <-44> speed <397.500000>;
		turn rleg to x-axis <34> now;
		turn rfoot to x-axis <0> speed <300.000000>;
		turn lthigh to x-axis <51> speed <382.500000>;
		turn lleg to x-axis <-36> speed <270.000000>;
		turn lfoot to x-axis <14> speed <105.000000>;
		move pelvis to y-axis [-1] speed [7.500000];

		sleep 130;
		}

		if( bMoving )
		{	
		//step 5
	
		turn rthigh to x-axis <-37> speed <52.500000>;
		turn rleg to x-axis <-19> speed <397.500000>;
		turn rfoot to x-axis <27> speed <202.500000>;
		turn lthigh to x-axis <66> speed <112.500000>;
		turn lleg to x-axis <-26> speed <75.000000>;
		turn lfoot to x-axis <17> speed <22.500000>;

		move pelvis to y-axis [-1.5] speed [3.750000];

		sleep 130;
		}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				turn rthigh to x-axis <0> speed <277.500000>;
				turn rleg to x-axis <0> speed <142.500000>;
				turn rfoot to x-axis <0> speed <202.500000>;
				turn lthigh to x-axis <0> speed <277.500000>;
				turn lleg to x-axis <0> speed <142.500000>;
				turn lfoot to x-axis <0> speed <202.500000>;
		
		
				move pelvis to y-axis [0] speed [11.250000];
				if( !aiming )
				{
					turn luparm to x-axis <0> speed <75.000000>;
					turn larm to x-axis <0> speed <75.000000>;
					turn ruparm to x-axis <0> speed <75.000000>;
					turn rarm to x-axis <0> speed <75.000000>;
					turn torso to y-axis <0> speed <37.500000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide rflare;
	hide lflare;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	restore_delay = 3000;
	gun_1 = rflare;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn ruparm to x-axis <0.000000> speed <45.000000>;
	turn rarm to y-axis <0.000000> speed <45.000000>;
	turn luparm to x-axis <0.000000> speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn rarm around y-axis;
	wait-for-turn luparm around x-axis;
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = rflare + gun_1;
}

FirePrimary()
{
	if( gun_1 )
	{
		show lflare;
		sleep 100;
		hide lflare;
	}
	else
	{
		show rflare;
		sleep 100;
		hide rflare;
	}
	gun_1 = !gun_1;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <200.000000>;
	turn ruparm to x-axis <0.000000> - pitch speed <200.000000>;
	turn rarm to x-axis <0.000000> speed <200.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <200.000000>;
	turn larm to x-axis <0.000000> speed <200.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY;
		explode rthigh type BITMAPONLY;
		explode rleg type BITMAPONLY;
		explode rfoot type FIRE | SMOKE | FALL;
		explode lthigh type BITMAPONLY;
		explode lleg type BITMAPONLY;
		explode lfoot type BITMAPONLY;
		explode torso type BITMAPONLY;
		explode luparm type BITMAPONLY;
		explode larm type BITMAPONLY;
		explode lflare type BITMAPONLY;
		explode ruparm type BITMAPONLY;
		explode rarm type BITMAPONLY;
		explode rflare type BITMAPONLY;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type BITMAPONLY;
		explode rthigh type FIRE | SMOKE | FALL;
		explode rleg type FALL;
		explode rfoot type FIRE | SMOKE | FALL;
		explode lthigh type FIRE | SMOKE | FALL;
		explode lleg type FIRE | SMOKE | FALL;
		explode lfoot type FALL;
		explode torso type FALL;
		explode luparm type FIRE | SMOKE | FALL;
		explode larm type FIRE | SMOKE | FALL;
		explode lflare type FIRE | SMOKE | FALL;
		explode ruparm type FALL;
		explode rarm type FALL;
		explode rflare type FALL;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL;
		explode rthigh type FIRE | SMOKE | FALL;
		explode rleg type FIRE | SMOKE | FALL;
		explode rfoot type EXPLODE_ON_HIT | SMOKE | FALL;
		explode lthigh type EXPLODE_ON_HIT | SMOKE | FALL;
		explode lleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lfoot type EXPLODE_ON_HIT | SMOKE | FALL;
		explode torso type EXPLODE_ON_HIT | SMOKE | FALL;
		explode luparm type FIRE | SMOKE | FALL;
		explode larm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lflare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode ruparm type EXPLODE_ON_HIT | SMOKE | FALL;
		explode rarm type FIRE | SMOKE | FALL;
		explode rflare type EXPLODE_ON_HIT | SMOKE | FALL;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lleg type EXPLODE_ON_HIT | FIRE | FALL;
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode torso type EXPLODE_ON_HIT | FIRE | FALL;
		explode luparm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode larm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lflare type EXPLODE_ON_HIT | FIRE | FALL;
		explode ruparm type EXPLODE_ON_HIT | FIRE | FALL;
		explode rarm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rflare type EXPLODE_ON_HIT | FIRE | FALL;
	return corpsetype;
}
