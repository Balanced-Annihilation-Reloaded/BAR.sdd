#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, pelvis, flare, rthigh, lthigh, lleg, rleg, ruparm, luparm,
	   lloarm, rloarm, gripstatic, gunstatic, griphand, gunhand, emit_spark,lfoot,rfoot;

static-var  bMoving, bAiming, Static_Var_2, Static_Var_3, Static_Var_4, restore_delay,
            statechg_DesiredState, statechg_StateChanging, moveSpeed,
            currentSpeed, animSpeed;

// Signal definitions
#define SIG_AIM				4


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [-1.300000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <13.000000> speed <155.060241> *  currentSpeed / 100;
		turn rthigh to x-axis <-3.214286> speed <205.327026> *  currentSpeed / 100;
		turn lthigh to x-axis <-68.868132> speed <582.884948> *  currentSpeed / 100;
		turn lleg to x-axis <32.346154> speed <385.815572> *  currentSpeed / 100;
		turn rleg to x-axis <17.214286> speed <205.327026> *  currentSpeed / 100;
		turn ruparm to x-axis <-17.923077> speed <213.781280> *  currentSpeed / 100;
		turn luparm to x-axis <28.126374> speed <335.483256> *  currentSpeed / 100;
		turn lloarm to x-axis <-15.769231> speed <712.910105> *  currentSpeed / 100;
		turn rloarm to x-axis <-0.703297> speed <545.135711> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.200000] speed [1.192771] *  currentSpeed / 100;
		turn pelvis to x-axis <9.137363> speed <46.072417> *  currentSpeed / 100;
		turn rthigh to x-axis <10.236264> speed <155.322388> *  currentSpeed / 100;
		turn lthigh to x-axis <-52.346154> speed <197.069376> *  currentSpeed / 100;
		turn lleg to x-axis <22.137363> speed <121.767507> *  currentSpeed / 100;
		turn rleg to x-axis <17.571429> speed <4.259898> *  currentSpeed / 100;
		turn ruparm to x-axis <-20.725275> speed <33.423807> *  currentSpeed / 100;
		turn luparm to x-axis <15.813187> speed <146.868134> *  currentSpeed / 100;
		turn lloarm to x-axis <-15.769231> now;
		turn rloarm to x-axis <-0.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <6.313187> speed <33.685955> *  currentSpeed / 100;
		turn rthigh to x-axis <-20.335165> speed <364.647165> *  currentSpeed / 100;
		turn lthigh to x-axis <-42.846154> speed <113.313253> *  currentSpeed / 100;
		turn rleg to x-axis <63.626374> speed <549.330067> *  currentSpeed / 100;
		turn ruparm to x-axis <-11.593407> speed <108.922281> *  currentSpeed / 100;
		turn luparm to x-axis <9.137363> speed <79.627298> *  currentSpeed / 100;
		turn lloarm to x-axis <-15.769231> now;
		turn rloarm to x-axis <-0.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-.800000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <2.802198> speed <41.878062> *  currentSpeed / 100;
		turn rthigh to x-axis <-48.467033> speed <335.548787> *  currentSpeed / 100;
		turn lthigh to x-axis <-30.890110> speed <142.608236> *  currentSpeed / 100;
		turn rleg to x-axis <84.390110> speed <247.663839> *  currentSpeed / 100;
		turn ruparm to x-axis <-3.148352> speed <100.730174> *  currentSpeed / 100;
		turn luparm to x-axis <45.038462> speed <96.601349> *  currentSpeed / 100;
		turn lloarm to x-axis <-15.769231> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <-1> speed <33.423807> *  currentSpeed / 100;
		turn rthigh to x-axis <-62.346154> speed <46.269034> *  currentSpeed / 100;
		turn lthigh to x-axis <-20.390110> speed <146.474913> *  currentSpeed / 100;
		turn ruparm to x-axis <4.912088> speed <96.142598> *  currentSpeed / 100;
		turn luparm to x-axis <1.747253> speed <8.454254> *  currentSpeed / 100;
		turn lloarm to x-axis <-15.769231> now;
		turn rloarm to x-axis <-0.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <4.203297> speed <50.135711> *  currentSpeed / 100;
		turn rthigh to x-axis <-62.890110> speed <125.765258> *  currentSpeed / 100;
		turn lthigh to x-axis <-11.247253> speed <117.573151> *  currentSpeed / 100;
		turn lleg to x-axis <29.527473> speed <88.147095> *  currentSpeed / 100;
		turn rleg to x-axis <79.467033> speed <58.721039> *  currentSpeed / 100;
		turn ruparm to x-axis <8.071429> speed <37.683706> *  currentSpeed / 100;
		turn luparm to x-axis <-8.423077> speed <121.308755> *  currentSpeed / 100;
		turn lloarm to x-axis <-15.769231> now;
		turn rloarm to x-axis <-0.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.450000] speed [0.596386] *  currentSpeed / 100;
		turn pelvis to x-axis <13.000000> speed <104.924530> *  currentSpeed / 100;
		turn rthigh to x-axis <-68.868132> speed <71.304118> *  currentSpeed / 100;
		turn lthigh to x-axis <-8.291209> speed <12.452005> *  currentSpeed / 100;
		turn lleg to x-axis <28.824176> speed <8.388723> *  currentSpeed / 100;
		turn rleg to x-axis <32.692308> speed <557.915395> *  currentSpeed / 100;
		turn ruparm to x-axis <15.456044> speed <88.081552> *  currentSpeed / 100;
		turn luparm to x-axis <-18.280220> speed <117.573151> *  currentSpeed / 100;
		turn lloarm to x-axis <-15.769231> now;
		turn rloarm to x-axis <-0.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.200000] speed [2.981928] *  currentSpeed / 100;
		turn pelvis to x-axis <9.137363> speed <46.072417> *  currentSpeed / 100;
		turn rthigh to x-axis <-53.758242> speed <180.226399> *  currentSpeed / 100;
		turn lthigh to x-axis <-17.148352> speed <109.053355> *  currentSpeed / 100;
		turn lleg to x-axis <47.813187> speed <226.495432> *  currentSpeed / 100;
		turn ruparm to x-axis <20.736264> speed <62.980937> *  currentSpeed / 100;
		turn luparm to x-axis <-7.027473> speed <134.219512> *  currentSpeed / 100;
		turn lloarm to x-axis <-15.769231> now;
		turn rloarm to x-axis <-0.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <6.313187> speed <33.685955> *  currentSpeed / 100;
		turn rthigh to x-axis <-45.659341> speed <96.601349> *  currentSpeed / 100;
		turn lthigh to x-axis <-31.593407> speed <175.835439> *  currentSpeed / 100;
		turn lleg to x-axis <66.456044> speed <222.366608> *  currentSpeed / 100;
		turn ruparm to x-axis <11.247253> speed <113.182179> *  currentSpeed / 100;
		turn luparm to x-axis <4.912088> speed <142.411631> *  currentSpeed / 100;
		turn lloarm to x-axis <-15.769231> now;
		turn rloarm to x-axis <-0.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.800000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <2.802198> speed <41.878062> *  currentSpeed / 100;
		turn rthigh to x-axis <-35.104396> speed <125.896332> *  currentSpeed / 100;
		turn lthigh to x-axis <-47.071429> speed <184.617371> *  currentSpeed / 100;
		turn ruparm to x-axis <2.456044> speed <104.858999> *  currentSpeed / 100;
		turn luparm to x-axis <14.758242> speed <117.442078> *  currentSpeed / 100;
		turn lloarm to x-axis <-15.769231> now;
		turn rloarm to x-axis <-0.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <-1.000000> speed <33.423807> *  currentSpeed / 100;
		turn rthigh to x-axis <-18.093407> speed <205.130421> *  currentSpeed / 100;
		turn lthigh to x-axis <-54.104396> speed <83.887197> *  currentSpeed / 100;
		turn lleg to x-axis <68.560440> speed <25.100627> *  currentSpeed / 100;
		turn ruparm to x-axis <-0.346154> speed <33.423807> *  currentSpeed / 100;
		turn luparm to x-axis <23.549451> speed <104.858999> *  currentSpeed / 100;
		turn lloarm to x-axis <-15.769231> now;
		turn rloarm to x-axis <-0.703297> now;
		sleep animSpeed;
	}
	move pelvis to y-axis [-1.400000] speed [7.156627] *  currentSpeed / 100;
	turn pelvis to x-axis <4.203297> speed <50.135711> *  currentSpeed / 100;
	turn rthigh to x-axis <-11.247253> speed <109.184428> *  currentSpeed / 100;
	turn lthigh to x-axis <-64.291209> speed <121.505360> *  currentSpeed / 100;
	turn lleg to x-axis <75.593407> speed <83.887197> *  currentSpeed / 100;
	turn ruparm to x-axis <-8.071429> speed <92.144846> *  currentSpeed / 100;
	turn luparm to x-axis <27.357143> speed <33.489338> *  currentSpeed / 100;
	turn rloarm to x-axis <-0.703297> now;
	sleep animSpeed;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [-1.300000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <13.000000> speed <155.060241> *  currentSpeed / 100;
		turn rthigh to x-axis <-3.214286> speed <205.327026> *  currentSpeed / 100;
		turn lthigh to x-axis <-68.868132> speed <582.884948> *  currentSpeed / 100;
		turn lleg to x-axis <32.346154> speed <385.815572> *  currentSpeed / 100;
		turn rleg to x-axis <17.214286> speed <205.327026> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.200000] speed [1.192771] *  currentSpeed / 100;
		turn pelvis to x-axis <9.137363> speed <46.072417> *  currentSpeed / 100;
		turn rthigh to x-axis <10.236264> speed <155.322388> *  currentSpeed / 100;
		turn lthigh to x-axis <-52.346154> speed <197.069376> *  currentSpeed / 100;
		turn lleg to x-axis <22.137363> speed <121.767507> *  currentSpeed / 100;
		turn rleg to x-axis <17.571429> speed <4.259898> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <6.313187> speed <33.685955> *  currentSpeed / 100;
		turn rthigh to x-axis <-20.335165> speed <364.647165> *  currentSpeed / 100;
		turn lthigh to x-axis <-42.846154> speed <113.313253> *  currentSpeed / 100;
		turn rleg to x-axis <63.626374> speed <549.330067> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-.800000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <2.802198> speed <41.878062> *  currentSpeed / 100;
		turn rthigh to x-axis <-48.467033> speed <335.548787> *  currentSpeed / 100;
		turn lthigh to x-axis <-30.890110> speed <142.608236> *  currentSpeed / 100;
		turn rleg to x-axis <84.390110> speed <247.663839> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <-1> speed <33.423807> *  currentSpeed / 100;
		turn rthigh to x-axis <-62.346154> speed <46.269034> *  currentSpeed / 100;
		turn lthigh to x-axis <-20.390110> speed <146.474913> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <4.203297> speed <50.135711> *  currentSpeed / 100;
		turn rthigh to x-axis <-62.890110> speed <125.765258> *  currentSpeed / 100;
		turn lthigh to x-axis <-11.247253> speed <117.573151> *  currentSpeed / 100;
		turn lleg to x-axis <29.527473> speed <88.147095> *  currentSpeed / 100;
		turn rleg to x-axis <79.467033> speed <58.721039> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.450000] speed [0.596386] *  currentSpeed / 100;
		turn pelvis to x-axis <13.000000> speed <104.924530> *  currentSpeed / 100;
		turn rthigh to x-axis <-68.868132> speed <71.304118> *  currentSpeed / 100;
		turn lthigh to x-axis <-8.291209> speed <12.452005> *  currentSpeed / 100;
		turn lleg to x-axis <28.824176> speed <8.388723> *  currentSpeed / 100;
		turn rleg to x-axis <32.692308> speed <557.915395> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.200000] speed [2.981928] *  currentSpeed / 100;
		turn pelvis to x-axis <9.137363> speed <46.072417> *  currentSpeed / 100;
		turn rthigh to x-axis <-53.758242> speed <180.226399> *  currentSpeed / 100;
		turn lthigh to x-axis <-17.148352> speed <109.053355> *  currentSpeed / 100;
		turn lleg to x-axis <47.813187> speed <226.495432> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-1.500000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <6.313187> speed <33.685955> *  currentSpeed / 100;
		turn rthigh to x-axis <-45.659341> speed <96.601349> *  currentSpeed / 100;
		turn lthigh to x-axis <-31.593407> speed <175.835439> *  currentSpeed / 100;
		turn lleg to x-axis <66.456044> speed <222.366608> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.800000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <2.802198> speed <41.878062> *  currentSpeed / 100;
		turn rthigh to x-axis <-35.104396> speed <125.896332> *  currentSpeed / 100;
		turn lthigh to x-axis <-47.071429> speed <184.617371> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <-1.000000> speed <33.423807> *  currentSpeed / 100;
		turn rthigh to x-axis <-18.093407> speed <205.130421> *  currentSpeed / 100;
		turn lthigh to x-axis <-54.104396> speed <83.887197> *  currentSpeed / 100;
		turn lleg to x-axis <68.560440> speed <25.100627> *  currentSpeed / 100;
		sleep animSpeed;
	}
	move pelvis to y-axis [-1.400000] speed [7.156627] *  currentSpeed / 100;
	turn pelvis to x-axis <4.203297> speed <50.135711> *  currentSpeed / 100;
	turn rthigh to x-axis <-11.247253> speed <109.184428> *  currentSpeed / 100;
	turn lthigh to x-axis <-64.291209> speed <121.505360> *  currentSpeed / 100;
	turn lleg to x-axis <75.593407> speed <83.887197> *  currentSpeed / 100;
	sleep animSpeed;
}

drawgun()
{

	turn rloarm to x-axis <0> speed <720>;
	turn lloarm to x-axis <0> speed <720>;
	turn ruparm to x-axis <-179> speed <720>;
	sleep 250;
	
	turn ruparm to x-axis <90> speed <720>;
	turn luparm to x-axis <-179> speed <720>;
	sleep 125;
	
	hide gripstatic;
	hide gunstatic;
	show griphand;
	show gunhand;
	turn luparm to x-axis <90> speed <720>;
	turn gunhand to y-axis <-90> speed <720>;
	turn ruparm to x-axis <-179> speed <720>;
	sleep 125;
	turn ruparm to x-axis <0> speed <720>;
	sleep 125;
}

holstgun()
{
	turn rloarm to x-axis <0> speed <720>;
	turn lloarm to x-axis <0> speed <720>;
	turn ruparm to x-axis <-179> speed <720>;
	sleep 250;

	turn ruparm to x-axis <90> speed <720>;
	turn luparm to x-axis <-179> speed <720>;
	turn gunhand to y-axis <0> speed <720>;
	sleep 125;
	
	turn luparm to x-axis <0> speed <720>;
	sleep 125;

	show gripstatic;
	show gunstatic;
	hide griphand;
	hide gunhand;

	turn ruparm to x-axis <-179> speed <720>;
	sleep 125;
	turn ruparm to x-axis <0> speed <720>;
	sleep 125;

}

Go()
{
	Static_Var_2 = 1;
	if( !Static_Var_4 )
	{
		while( !Static_Var_3 )
		{
			sleep 150;
		}
		call-script drawgun();
		Static_Var_4 = 1;
	}
}

Stop()
{
	if( Static_Var_4 )
	{
		Static_Var_4 = 0;
		call-script holstgun();
	}
	Static_Var_2 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			currentstate = 1;
		}
		else
		{
			call-script Go();
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_2;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [3.000000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		animSpeed = 9500 / currentSpeed;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Sparks()
{
	while( TRUE )
	{
		while( !bAiming )
		{
			sleep 100;
		}
		emit-sfx 1025 + 0 from emit_spark;
		sleep 200;
	}
}

Create()
{
	hide flare;
	show gripstatic;
	show gunstatic;
	hide griphand;
	hide gunhand;
	hide emit_spark;
	bMoving = FALSE;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	restore_delay = 3000;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	moveSpeed = get MAX_SPEED;
	animSpeed = 100;
	bAiming = FALSE;
	start-script Sparks();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 5;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask 0;
	turn torso to y-axis <0.000000> speed <90.000000>;
	
	turn rloarm to x-axis <0.000000> speed <90.000000>;
	bAiming = FALSE;
	start-script RequestState(1);
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( !Static_Var_4 )
	{
		sleep 100;
	}
	bAiming = TRUE;
	turn torso to y-axis heading speed <250.000000>;
	turn rloarm to x-axis <0.000000> - pitch speed <90.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn rloarm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromPrimary(piecenum)
{
	piecenum = griphand;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flare;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY;
		explode torso type BITMAPONLY;
		explode gripstatic type BITMAPONLY;
		explode gunstatic type BITMAPONLY;
		explode ruparm type BITMAPONLY;
		explode rloarm type BITMAPONLY;
		explode griphand type BITMAPONLY;
		explode gunhand type FIRE | SMOKE | FALL;
		explode flare type BITMAPONLY;
		explode emit_spark type BITMAPONLY;
		explode luparm type BITMAPONLY;
		explode lloarm type BITMAPONLY;
		explode lthigh type BITMAPONLY;
		explode lleg type BITMAPONLY;
		explode lfoot type BITMAPONLY;
		explode rthigh type BITMAPONLY;
		explode rleg type BITMAPONLY;
		explode rfoot type BITMAPONLY;
		return(0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type BITMAPONLY;
		explode torso type FIRE | SMOKE | FALL;
		explode gripstatic type FIRE | SMOKE | FALL;
		explode gunstatic type FIRE | SMOKE | FALL;
		explode ruparm type FIRE | SMOKE | FALL;
		explode rloarm type FIRE | SMOKE | FALL;
		explode griphand type FIRE | SMOKE | FALL;
		explode gunhand type FIRE | SMOKE | FALL;
		explode flare type FIRE | SMOKE | FALL;
		explode emit_spark type FIRE | SMOKE | FALL;
		explode luparm type FALL;
		explode lloarm type FIRE | SMOKE | FALL;
		explode lthigh type FIRE | SMOKE | FALL;
		explode lleg type FIRE | SMOKE | FALL;
		explode lfoot type FIRE | SMOKE | FALL;
		explode rthigh type FIRE | SMOKE | FALL;
		explode rleg type FIRE | SMOKE | FALL;
		explode rfoot type FALL;
		return(0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL;
		explode torso type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode gripstatic type SHATTER;
		explode gunstatic type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode ruparm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rloarm type SMOKE | FALL;
		explode griphand type SHATTER;
		explode gunhand type FIRE | SMOKE | FALL;
		explode flare type SMOKE | FALL;
		explode emit_spark type SMOKE | FALL;
		explode luparm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lloarm type FIRE | SMOKE | FALL;
		explode lthigh type SMOKE | FALL;
		explode lleg type SMOKE | FALL;
		explode lfoot type SMOKE | FALL;
		explode rthigh type FIRE | SMOKE | FALL;
		explode rleg type SMOKE | FALL;
		explode rfoot type FIRE | SMOKE | FALL;
		return(0);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode torso type EXPLODE_ON_HIT | FIRE | FALL;
		explode gripstatic type SHATTER;
		explode gunstatic type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode ruparm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rloarm type EXPLODE_ON_HIT | FIRE | FALL;
		explode griphand type SHATTER;
		explode gunhand type EXPLODE_ON_HIT | FIRE | FALL;
		explode flare type EXPLODE_ON_HIT | FIRE | FALL;
		explode emit_spark type EXPLODE_ON_HIT | FIRE | FALL;
		explode luparm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lloarm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode lfoot type EXPLODE_ON_HIT | FIRE | FALL;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode rfoot type EXPLODE_ON_HIT | FIRE | FALL;
}
