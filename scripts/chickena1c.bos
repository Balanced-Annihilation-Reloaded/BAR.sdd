piece body,head,tail,lthigh,lknee,lshin,lfoot,rthigh,rknee,rshin,rfoot,lforearml,lbladel,rforearml,rbladel,lforearmu,lbladeu,rforearmu,rbladeu;

static-var gun_1, aMoving, bMoving, aaheading, aapitch, currentSpeed, moveSpeed;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			16

#include "sfxtype.h"
#include "exptype.h"
#define BODYSCALE 10
#define MIN_SPEED 10
#define SPEED_MULT 30
//decrease SPEED_MULT for slower movement
//Animation helper info: each 'stride' moves about 60 elmos, or 2 elmos per 
//GET_CURRENT SPEED returns current speed in elmos/frame


walk()
{
	while (aMoving){
		bMoving = TRUE;
	if (aMoving) { // step 1, ankle dist = 17
			turn lthigh to x-axis <40> speed <404.081633> *  currentSpeed / 100;
			turn lknee to x-axis <-15> speed <151.530612> *  currentSpeed / 100;
			turn lshin to x-axis <-1> speed <10.102041> *  currentSpeed / 100;
			turn lfoot to x-axis <-26> speed <262.653061> *  currentSpeed / 100;
			
			turn lthigh to z-axis <-3> speed <30.306122> *  currentSpeed / 100;
			
			turn rthigh to x-axis <-10> speed <252.551020> *  currentSpeed / 100;
			turn rknee to x-axis <-30> speed <474.795918> *  currentSpeed / 100;
			turn rshin to x-axis <-26> speed <343.469388> *  currentSpeed / 100;
			turn rfoot to x-axis <60> speed <303.061224> *  currentSpeed / 100;
			
			turn rthigh to z-axis <3> speed <30.306122> *  currentSpeed / 100;
			
			turn body to z-axis <3> speed <30.306122> *  currentSpeed / 100;
		
			move body to y-axis [0.7] speed [7.071429] *  currentSpeed / 100;
			turn head to x-axis <-5> speed <50.510204> *  currentSpeed / 100;
			turn head to y-axis <-3> speed <30.306122> *  currentSpeed / 100;
			turn tail to y-axis <7> speed <70.714286> *  currentSpeed / 100;
			turn tail to x-axis <7> speed <70.714286> *  currentSpeed / 100;
			sleep 9800 / currentSpeed;
		}
	if (aMoving) { // step 2, ankle dist = 14.5
			turn lthigh to x-axis <75> speed <353.571429> *  currentSpeed / 100;
			turn lknee to x-axis <-40> speed <252.551020> *  currentSpeed / 100;
			turn lshin to x-axis <20> speed <212.142857> *  currentSpeed / 100;
			turn lfoot to x-axis <-35> speed <90.918367> *  currentSpeed / 100;
			
			turn lthigh to z-axis <-5> speed <20.204082> *  currentSpeed / 100;
			
			turn rthigh to x-axis <-20> speed <101.020408> *  currentSpeed / 100;
			turn rknee to x-axis <-68> speed <383.877551> *  currentSpeed / 100;
			turn rshin to x-axis <34> speed <606.122449> *  currentSpeed / 100;
			turn rfoot to x-axis <30> speed <303.061224> *  currentSpeed / 100;
			
			turn rthigh to z-axis <5> speed <20.204082> *  currentSpeed / 100;
			
			
			turn body to z-axis <5> speed <20.204082> *  currentSpeed / 100;
		
			move body to y-axis [1.0] speed [3.030612] *  currentSpeed / 100;
			turn head to x-axis <-10> speed <50.510204> *  currentSpeed / 100;
			turn head to y-axis <-5> speed <20.204082> *  currentSpeed / 100;
			turn tail to y-axis <12> speed <50.510204> *  currentSpeed / 100;
			turn tail to x-axis <0> speed <70.714286> *  currentSpeed / 100;
			sleep 9800 / currentSpeed;
		}
	if (aMoving) { // step 3, ankle dist = 10
			turn lthigh to x-axis <40> speed <353.571429> *  currentSpeed / 100;
			turn lknee to x-axis <11> speed <515.204082> *  currentSpeed / 100;
			turn lshin to x-axis <13> speed <70.714286> *  currentSpeed / 100;
			turn lfoot to x-axis <-61> speed <262.653061> *  currentSpeed / 100;
			
			turn lthigh to z-axis <-3> speed <20.204082> *  currentSpeed / 100;
			
			turn rthigh to x-axis <-13> speed <70.714286> *  currentSpeed / 100;
			turn rknee to x-axis <-52> speed <161.632653> *  currentSpeed / 100;
			turn rshin to x-axis <7> speed <272.755102> *  currentSpeed / 100;
			turn rfoot to x-axis <58> speed <282.857143> *  currentSpeed / 100;
			
			turn rthigh to z-axis <3> speed <20.204082> *  currentSpeed / 100;
			
			
			turn body to z-axis <3> speed <20.204082> *  currentSpeed / 100;
		
			move body to y-axis [0.7] speed [3.030612] *  currentSpeed / 100;
			turn head to x-axis <-5> speed <50.510204> *  currentSpeed / 100;
			turn head to y-axis <-3> speed <20.204082> *  currentSpeed / 100;
			turn tail to y-axis <7> speed <50.510204> *  currentSpeed / 100;
			turn tail to x-axis <-7> speed <70.714286> *  currentSpeed / 100;
			sleep 9800 / currentSpeed;
		}
	if (aMoving) { // step 4, ankle dist = 0
			turn lthigh to x-axis <15> speed <252.551020> *  currentSpeed / 100;
			turn lknee to x-axis <17> speed <60.612245> *  currentSpeed / 100;
			turn lshin to x-axis <-60> speed <737.448980> *  currentSpeed / 100;
			turn lfoot to x-axis <30> speed <919.285714> *  currentSpeed / 100;
			
			turn lthigh to z-axis <0> speed <30.306122> *  currentSpeed / 100;
			turn rthigh to x-axis <0> speed <131.326531> *  currentSpeed / 100;
			turn rknee to x-axis <0> speed <525.306122> *  currentSpeed / 100;
			turn rshin to x-axis <0> speed <70.714286> *  currentSpeed / 100;
			turn rfoot to x-axis <0> speed <585.918367> *  currentSpeed / 100;
			
			turn rthigh to z-axis <0> speed <30.306122> *  currentSpeed / 100;
			
			
			turn body to z-axis <0> speed <30.306122> *  currentSpeed / 100;
		
			move body to y-axis [0] speed [7.071429] *  currentSpeed / 100;
			turn head to x-axis <0> speed <50.510204> *  currentSpeed / 100;
			turn head to y-axis <0> speed <30.306122> *  currentSpeed / 100;
			turn tail to y-axis <0> speed <70.714286> *  currentSpeed / 100;
			turn tail to x-axis <0> speed <70.714286> *  currentSpeed / 100;
			sleep 9800 / currentSpeed;
		}
	if (aMoving) { // step 5, ankle dist = 8
			turn lthigh to x-axis <-10> speed <252.551020> *  currentSpeed / 100;
			turn lknee to x-axis <-30> speed <474.795918> *  currentSpeed / 100;
			turn lshin to x-axis <-26> speed <343.469388> *  currentSpeed / 100;
			turn lfoot to x-axis <60> speed <303.061224> *  currentSpeed / 100;
			
			turn lthigh to z-axis <3> speed <30.306122> *  currentSpeed / 100;
			
			turn rthigh to x-axis <40> speed <404.081633> *  currentSpeed / 100;
			turn rknee to x-axis <-15> speed <151.530612> *  currentSpeed / 100;
			turn rshin to x-axis <-1> speed <10.102041> *  currentSpeed / 100;
			turn rfoot to x-axis <-26> speed <262.653061> *  currentSpeed / 100;
			
			turn rthigh to z-axis <-3> speed <30.306122> *  currentSpeed / 100;
			
			
			turn body to z-axis <-3> speed <30.306122> *  currentSpeed / 100;
		
			move body to y-axis [0.7] speed [7.071429] *  currentSpeed / 100;
			turn head to x-axis <-5> speed <50.510204> *  currentSpeed / 100;
			turn head to y-axis <3> speed <30.306122> *  currentSpeed / 100;
			turn tail to y-axis <-7> speed <70.714286> *  currentSpeed / 100;
			turn tail to x-axis <7> speed <70.714286> *  currentSpeed / 100;
			sleep 9800 / currentSpeed;
		}
	if (aMoving) { // step 6, ankle dist = 13
			turn lthigh to x-axis <-20> speed <101.020408> *  currentSpeed / 100;
			turn lknee to x-axis <-68> speed <383.877551> *  currentSpeed / 100;
			turn lshin to x-axis <34> speed <606.122449> *  currentSpeed / 100;
			turn lfoot to x-axis <30> speed <303.061224> *  currentSpeed / 100;
			
			turn lthigh to z-axis <5> speed <20.204082> *  currentSpeed / 100;
			
			turn rthigh to x-axis <75> speed <353.571429> *  currentSpeed / 100;
			turn rknee to x-axis <-40> speed <252.551020> *  currentSpeed / 100;
			turn rshin to x-axis <20> speed <212.142857> *  currentSpeed / 100;
			turn rfoot to x-axis <-35> speed <90.918367> *  currentSpeed / 100;
			
			turn rthigh to z-axis <-5> speed <20.204082> *  currentSpeed / 100;
			
			turn body to z-axis <-5> speed <20.204082> *  currentSpeed / 100;
		
			move body to y-axis [1.0] speed [3.030612] *  currentSpeed / 100;
			turn head to x-axis <-10> speed <50.510204> *  currentSpeed / 100;
			turn head to y-axis <6> speed <30.306122> *  currentSpeed / 100;
			turn tail to y-axis <-12> speed <50.510204> *  currentSpeed / 100;
			turn tail to x-axis <0> speed <70.714286> *  currentSpeed / 100;
			sleep 9800 / currentSpeed;
		}
	if (aMoving) { // step 7, ankle dist = 8
			turn lthigh to x-axis <-13> speed <70.714286> *  currentSpeed / 100;
			turn lknee to x-axis <-52> speed <161.632653> *  currentSpeed / 100;
			turn lshin to x-axis <7> speed <272.755102> *  currentSpeed / 100;
			turn lfoot to x-axis <58> speed <282.857143> *  currentSpeed / 100;
			
			turn lthigh to z-axis <3> speed <20.204082> *  currentSpeed / 100;
			
			turn rthigh to x-axis <40> speed <353.571429> *  currentSpeed / 100;
			turn rknee to x-axis <11> speed <515.204082> *  currentSpeed / 100;
			turn rshin to x-axis <13> speed <70.714286> *  currentSpeed / 100;
			turn rfoot to x-axis <-61> speed <262.653061> *  currentSpeed / 100;
			
			turn rthigh to z-axis <-3> speed <20.204082> *  currentSpeed / 100;
			
			turn body to z-axis <3> speed <80.816327> *  currentSpeed / 100;
		
			move body to y-axis [0.7] speed [3.030612] *  currentSpeed / 100;			
			turn head to x-axis <-10> now;
			turn head to y-axis <3> speed <30.306122> *  currentSpeed / 100;
			turn tail to y-axis <-12> now;
			turn tail to x-axis <0> now;
			sleep 9800 / currentSpeed;
		}
	if (aMoving) { // step 8, ankle dist = 0
			turn lthigh to x-axis <0> speed <131.326531> *  currentSpeed / 100;
			turn lknee to x-axis <0> speed <525.306122> *  currentSpeed / 100;
			turn lshin to x-axis <0> speed <70.714286> *  currentSpeed / 100;
			turn lfoot to x-axis <0> speed <585.918367> *  currentSpeed / 100;
			
			turn lthigh to z-axis <0> speed <30.306122> *  currentSpeed / 100;
			
			turn rthigh to x-axis <15> speed <252.551020> *  currentSpeed / 100;
			turn rknee to x-axis <17> speed <60.612245> *  currentSpeed / 100;
			turn rshin to x-axis <-60> speed <737.448980> *  currentSpeed / 100;
			turn rfoot to x-axis <30> speed <919.285714> *  currentSpeed / 100;
			
			turn rthigh to z-axis <0> speed <30.306122> *  currentSpeed / 100;
			
			
			turn body to z-axis <0> speed <30.306122> *  currentSpeed / 100;
		
			move body to y-axis [0] speed [7.071429] *  currentSpeed / 100;			
			turn head to x-axis <0> speed <101.020408> *  currentSpeed / 100;
			turn head to y-axis <0> speed <30.306122> *  currentSpeed / 100;
			turn tail to y-axis <0> speed <121.224490> *  currentSpeed / 100;
			turn tail to x-axis <0> now;
			sleep 9800 / currentSpeed;
		}
	}
}


Halt()
{	
	//sleep 150;
	if(!aMoving)
	{
		bMoving = FALSE;
		turn lfoot		to x-axis <0> 		speed <200>;
		turn rfoot		to x-axis <0> 		speed <200>;
		turn rthigh 	to x-axis <0> 		speed <200>;
		turn lthigh 	to x-axis <0> 		speed <200>;
		turn lshin  	to x-axis <0> 		speed <200>;
		turn rshin 		to x-axis <0> 		speed <200>;
		turn lknee  	to x-axis <0> 		speed <200>;
		turn rknee 		to x-axis <0> 		speed <200>;
	}
}

StartMoving()
{
	aMoving = TRUE;
	if (!bMoving)
	{
		start-script Walk();
	}
}

StopMoving()
{
	aMoving = FALSE;
	start-script Halt();
}
UnitSpeed()
{
	while(TRUE)
	{
		//currentSpeed = ((get (CURRENT_SPEED))*100)/moveSpeed;
		currentSpeed = (get CURRENT_SPEED)*SPEED_MULT / moveSpeed;
		if (currentSpeed<MIN_SPEED) currentSpeed=MIN_SPEED;
		sleep 142;
	}
}


Create()
{
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	gun_1 = 1;
	emit-sfx 1024+2 from body;
}

SweetSpot(piecenum)
	{	piecenum=body;	}	
	
AimFromPrimary(piecenum)
	{	piecenum=head;	}

AimFromSecondary(piecenum)
	{	piecenum=head;	}

QueryPrimary(piecenum)
	{	piecenum=head; }
	
QuerySecondary(piecenum)
	{	piecenum=head; }


AimPrimary(heading,pitch)
	{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn head to y-axis heading speed <250>;
	turn head to x-axis 0 -pitch speed <200>;
	return(TRUE);
	}

AimSecondary(heading,pitch)
	{
	aapitch = pitch;
	aaheading = heading;
	return(TRUE);
	}
		
Shot1()
	{
	++gun_1;
	if (gun_1 > 4)
		{
		gun_1 = 1;
		}
	if (gun_1 == 1)
		{
		turn lforearmu to y-axis <-140> speed <600>;
		turn lbladeu to y-axis <140> speed <600>;
		wait-for-turn lbladeu around y-axis;
		turn lforearmu to y-axis <0> speed <120>;
		turn lbladeu to y-axis <0> speed <120>;
		}
	if (gun_1 == 2)
		{
		turn lforearml to y-axis <-140> speed <600>;
		turn lbladel to y-axis <140> speed <600>;
		wait-for-turn lbladel around y-axis;
		turn lforearml to y-axis <0> speed <120>;
		turn lbladel to y-axis <0> speed <120>;
		}
	if (gun_1 == 3)
		{
		turn rforearmu to y-axis <140> speed <600>;
		turn rbladeu to y-axis <-140> speed <600>;
		wait-for-turn rbladeu around y-axis;
		turn rforearmu to y-axis <0> speed <120>;
		turn rbladeu to y-axis <0> speed <120>;
		}
	if (gun_1 == 4)
		{
		turn rforearml to y-axis <140> speed <600>;
		turn rbladel to y-axis <-140> speed <600>;
		wait-for-turn rbladel around y-axis;
		turn rforearml to y-axis <0> speed <120>;
		turn rbladel to y-axis <0> speed <120>;
		}
	}

Shot2()
	{   
	    turn head to x-axis 0 -aapitch speed <400>;
        turn head to y-axis aaheading speed <300>;
	    wait-for-turn head around x-axis;
		turn lforearmu to y-axis <-140> speed <600>;
		turn lbladeu to y-axis <140> speed <600>;
		turn lforearml to y-axis <-140> speed <600>;
		turn lbladel to y-axis <140> speed <600>;	
		turn rforearmu to y-axis <140> speed <600>;
		turn rbladeu to y-axis <-140> speed <600>;
		turn rforearml to y-axis <140> speed <600>;
		turn rbladel to y-axis <-140> speed <600>;
		emit-sfx 1024+3 from lforearmu;
		emit-sfx 1024+3 from lforearml;
		emit-sfx 1024+3 from rforearmu;
		emit-sfx 1024+3 from rforearml;
		wait-for-turn lbladeu around y-axis;
		wait-for-turn lbladel around y-axis;
		wait-for-turn rbladeu around y-axis;
		wait-for-turn rbladel around y-axis;				
		turn lforearmu to y-axis <0> speed <120>;
		turn lbladeu to y-axis <0> speed <120>;
		turn lforearml to y-axis <0> speed <120>;
		turn lbladel to y-axis <0> speed <120>;
		turn rforearmu to y-axis <0> speed <120>;
		turn rbladeu to y-axis <0> speed <120>;
		turn rforearml to y-axis <0> speed <120>;
		turn rbladel to y-axis <0> speed <120>;
		turn head to y-axis 0 speed <120>;
  	    turn head to x-axis 0 speed <120>; 
    }
    
HitByWeapon(anglex, anglez)
{
	emit-sfx 1024 from body;
	turn body to z-axis anglez speed <105.000000>;
	turn body to x-axis <0> - anglex speed <105.000000>;
	wait-for-turn body around z-axis;
	wait-for-turn body around x-axis;
	turn body to z-axis <0.000000> speed <30.000000>;
	turn body to x-axis <0.000000> speed <30.000000>;
}

Killed( severity, corpsetype )
	{
	corpsetype = 1;
	emit-sfx 1025 from body;
	return(corpsetype);
	}