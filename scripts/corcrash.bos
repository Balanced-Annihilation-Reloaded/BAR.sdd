#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  rflare, lflare, torso, pelvis, lleg, rleg, lbarrel,
       rbarrel;

static-var  gun_3, restore_delay, currentSpeed, moveSpeed;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM_3			4


walk()
{
	while( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		move lleg to y-axis [0.000000] now;
		move lleg to z-axis [4.375000] speed [3.281250] *currentSpeed;
		move rleg to y-axis [0.000000] now;
		move rleg to z-axis [-4.000000] speed [3.000000] *currentSpeed;
		turn pelvis to x-axis <6.000000> speed <4.500000> *currentSpeed;
		turn lleg to x-axis <-6.000000> speed <4.500000> *currentSpeed;
		turn rleg to x-axis <0.000000> now;
		sleep 1200 / currentSpeed;

		move pelvis to y-axis [-1.250000] speed [1.875000] *currentSpeed;
		move lleg to y-axis [1.250000] speed [1.875000] *currentSpeed;
		move rleg to y-axis [1.250000] speed [1.875000] *currentSpeed;
		turn pelvis to x-axis <4.912088> speed <1.631868> *currentSpeed;
		turn lleg to x-axis <-4.912088> speed <1.631868> *currentSpeed;
		turn rleg to x-axis <1.049451> speed <1.574176> *currentSpeed;
		sleep 600 / currentSpeed;

		move pelvis to y-axis [-0.750000] speed [0.750000] *currentSpeed;
		move lleg to y-axis [0.750000] speed [0.750000] *currentSpeed;
		move rleg to y-axis [0.750000] speed [0.750000] *currentSpeed;
		turn pelvis to x-axis <2.093407> speed <4.228021> *currentSpeed;
		turn lleg to x-axis <-2.093407> speed <4.228021> *currentSpeed;
		turn rleg to x-axis <2.802198> speed <2.629121> *currentSpeed;
		sleep 400 / currentSpeed;

		move pelvis to y-axis [-0.250000] speed [0.750000] *currentSpeed;
		move lleg to y-axis [0.250000] speed [0.750000] *currentSpeed;
		move rleg to y-axis [0.250000] speed [0.750000] *currentSpeed;
		turn pelvis to x-axis <1.049451> speed <1.565934> *currentSpeed;
		turn lleg to x-axis <-1.038462> speed <1.582418> *currentSpeed;
		turn rleg to x-axis <3.159341> speed <0.535714> *currentSpeed;
		sleep 200 / currentSpeed;

		move pelvis to y-axis [0.000000] speed [0.187500] *currentSpeed;
		move lleg to y-axis [0.000000] speed [0.187500] *currentSpeed;
		move rleg to y-axis [2.750000] speed [1.875000] *currentSpeed;
		move rleg to z-axis [-4.625000] speed [0.468750] *currentSpeed;
		turn pelvis to x-axis <0.000000> speed <0.787088> *currentSpeed;
		turn lleg to x-axis <0.000000> speed <0.778846> *currentSpeed;
		turn rleg to x-axis <0.000000> speed <2.369506> *currentSpeed;
		sleep 1200 / currentSpeed;

		move lleg to z-axis [2.500000] speed [1.406250] *currentSpeed;
		move rleg to z-axis [-0.875000] speed [2.812500] *currentSpeed;
		sleep 1200 / currentSpeed;

		move lleg to y-axis [0.000000] now;
		move lleg to z-axis [0.000000] speed [1.875000] *currentSpeed;
		move rleg to z-axis [0.000000] speed [0.656250] *currentSpeed;
		turn pelvis to x-axis <0.000000> now;
		turn lleg to x-axis <0.000000> now;
		turn rleg to x-axis <0.000000> now;
		sleep 1200 / currentSpeed;

		move lleg to z-axis [-1.500000] speed [0.562500] *currentSpeed;
		move rleg to z-axis [2.125000] speed [0.796875] *currentSpeed;
		turn rleg to x-axis <-9.137363> speed <3.426511> *currentSpeed;
		sleep 2000 / currentSpeed;

		move lleg to z-axis [-3.000000] speed [1.125000] *currentSpeed;
		move rleg to y-axis [0.000000] speed [2.062500] *currentSpeed;
		turn pelvis to x-axis <6.000000> speed <4.500000> *currentSpeed;
		turn rleg to x-axis <-6.000000> speed <2.353022> *currentSpeed;
		sleep 1200 / currentSpeed;

		move pelvis to y-axis [-1.224991] speed [1.837487] *currentSpeed;
		move lleg to y-axis [1.250000] speed [1.875000] *currentSpeed;
		move rleg to y-axis [1.250000] speed [1.875000] *currentSpeed;
		turn pelvis to x-axis <4.560440> speed <2.159340> *currentSpeed;
		turn lleg to x-axis <0.692308> speed <1.038462> *currentSpeed;
		turn rleg to x-axis <-4.912088> speed <1.631868> *currentSpeed;
		sleep 600 / currentSpeed;

		move pelvis to y-axis [-0.699997] speed [0.787491] *currentSpeed;
		move lleg to y-axis [0.750000] speed [0.750000] *currentSpeed;
		move rleg to y-axis [0.750000] speed [0.750000] *currentSpeed;
		turn pelvis to x-axis <2.093407> speed <3.700549> *currentSpeed;
		turn lleg to x-axis <2.802198> speed <3.164835> *currentSpeed;
		turn rleg to x-axis <-2.093407> speed <4.228021> *currentSpeed;
		sleep 400 / currentSpeed;

		move pelvis to y-axis [-0.250000] speed [0.674995] *currentSpeed;
		move lleg to y-axis [0.250000] speed [0.750000] *currentSpeed;
		move rleg to y-axis [0.250000] speed [0.750000] *currentSpeed;
		turn pelvis to x-axis <1.049451> speed <1.565934> *currentSpeed;
		turn lleg to x-axis <2.456044> speed <0.519231> *currentSpeed;
		turn rleg to x-axis <-1.038462> speed <1.582418> *currentSpeed;
		sleep 200 / currentSpeed;

		move lleg to y-axis [2.750000] speed [1.875000] *currentSpeed;
		move lleg to z-axis [-3.875000] speed [0.656250] *currentSpeed;
		move rleg to y-axis [1.250000] speed [0.750000] *currentSpeed;
		turn pelvis to x-axis <0.000000> speed <0.787088> *currentSpeed;
		turn lleg to x-axis <0.000000> speed <1.842033> *currentSpeed;
		turn rleg to x-axis <0.000000> speed <0.778846> *currentSpeed;
		sleep 1200 / currentSpeed;

		move lleg to z-axis [-1.750000] speed [1.593750] *currentSpeed;
		move rleg to z-axis [0.500000] speed [1.218750] *currentSpeed;
		sleep 1200 / currentSpeed;

		move lleg to z-axis [1.125000] speed [2.156250] *currentSpeed;
		move rleg to y-axis [0.000000] speed [0.937500] *currentSpeed;
		move rleg to z-axis [-0.750000] speed [0.937500] *currentSpeed;
		turn rleg to x-axis <0.000000> now;
		sleep 1200 / currentSpeed;

		move lleg to z-axis [2.500000] speed [0.515625] *currentSpeed;
		move rleg to y-axis [0.000000] now;
		move rleg to z-axis [-3.250000] speed [0.937500] *currentSpeed;
		turn lleg to x-axis <-10.192308> speed <3.822116> *currentSpeed;
		turn rleg to x-axis <0.000000> now;
		sleep 2000 / currentSpeed;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*20/moveSpeed;
		if (currentSpeed<4) currentSpeed=4;
		sleep 142;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	start-script UnitSpeed();
	call-script walk();
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
}

Create()
{
	gun_3 = lflare;
	restore_delay = 3000;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	start-script StopMoving();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 5;
}

SweetSpot(piecenum)
{
	piecenum = pelvis;
}

AimFromTertiary(piecenum)
{
	piecenum = torso;
}

QueryTertiary(piecenum)
{
	piecenum = rflare + gun_3;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask 0;
	turn torso to y-axis <0.000000> speed <90.000000>;
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn torso to y-axis heading speed <225.000000>;
	wait-for-turn torso around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireTertiary()
{
	if( gun_3 )
	{
		move lbarrel to z-axis [-3.750000] speed [62.500000];
		wait-for-move rbarrel along z-axis;
		move lbarrel to z-axis [0.000000] speed [7.500000];
	}
	else
	{
		move rbarrel to z-axis [-3.750000] speed [62.500000];
		wait-for-move lbarrel along z-axis;
		move rbarrel to z-axis [0.000000] speed [7.500000];
	}
	gun_3 = !gun_3;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode lflare type BITMAPONLY | BITMAP1;
		explode rflare type BITMAPONLY | BITMAP2;
		explode lbarrel type BITMAPONLY | BITMAP4;
		explode rbarrel type BITMAPONLY | BITMAP5;
		explode lleg type BITMAPONLY | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rleg type BITMAPONLY | BITMAP4;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode lflare type FALL | BITMAP1;
		explode rflare type FALL | BITMAP2;
		explode lbarrel type FALL | BITMAP4;
		explode rbarrel type FALL | BITMAP5;
		explode lleg type FALL | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rleg type FALL | BITMAP4;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode lflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode lflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode pelvis type BITMAPONLY | BITMAP3;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode torso type BITMAPONLY | BITMAP5;
	return (0);
}
