#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, jam1, jam2, turret;

static-var  Static_Var_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Create()
{
	start-script SmokeUnit();
	Static_Var_1 = 0;
	return (0);
}

Activate()
{
	if( Static_Var_1 )
	{
		set ACTIVATION to 0;
		return (0);
	}
	spin turret around y-axis speed <25.021978>;
	spin jam2 around x-axis speed <90.021978>;
	spin jam1 around x-axis speed <-90.021978>;
	
	return (0);
}

Deactivate()
{
	spin turret around y-axis speed <0.000000>;
	spin jam2 around x-axis speed <0>;
	spin jam1 around x-axis speed <0>;
	
	return (0);
}

HitByWeapon(anglex, anglez)
{
	turn base to z-axis anglez speed <105.000000>;
	turn base to x-axis <0> - anglex speed <105.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <30.000000>;
	turn base to x-axis <0.000000> speed <30.000000>;

	if( get ACTIVATION )
	{
		Static_Var_1 = 1;
	}
	if( Static_Var_1 )
	{
		signal 2;
		set-signal-mask 2;
		set ACTIVATION to 0;
		sleep 8000;
		Static_Var_1 = 0;
		set ACTIVATION to 100;
	}
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY;
		explode turret type BITMAPONLY;
		explode jam1 type FIRE | SMOKE | FALL;
		explode jam2 type BITMAPONLY;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY;
		explode turret type FIRE | SMOKE | FALL;
		explode jam1 type FIRE | SMOKE | FALL;
		explode jam2 type FIRE | SMOKE | FALL;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL;
		explode turret type FIRE | SMOKE | FALL;
		explode jam1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode jam2 type FIRE | SMOKE | FALL;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode turret type EXPLODE_ON_HIT | FIRE | FALL;
		explode jam1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode jam2 type EXPLODE_ON_HIT | FIRE | FALL;
	return corpsetype;
}
