#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, gun, turret, barrel;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from gun;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Create()
{
	hide flare1;
	hide flare2;
	gun_1 = flare1;
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <1200.000000>;
	turn barrel to x-axis <0.000000> - pitch speed <950.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn barrel around x-axis;
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move barrel to z-axis [-2.00000] now;
		show flare1;
		sleep 150;
		hide flare1;
		move barrel to z-axis [0.000000] speed [37.500000];
		gun_1 = flare2;
		return (0);
	}
	if( gun_1 == 1 )
	{
		move barrel to z-axis [-2.00000] now;
		show flare2;
		sleep 150;
		hide flare2;
		move barrel to z-axis [0.000000] speed [37.500000];
		gun_1 = flare1;
	}
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flare1;
	}
	if( gun_1 == 1 )
	{
		piecenum = flare2;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = gun;
}

SweetSpot(piecenum)
{
	piecenum = turret;
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode gun type BITMAPONLY | BITMAP1;
		explode barrel type BITMAPONLY | BITMAP3;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode gun type FALL | BITMAP1;
		explode barrel type BITMAPONLY | BITMAP3;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel type BITMAPONLY | BITMAP3;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel type BITMAPONLY | BITMAP3;
	explode turret type FALL | SMOKE | BITMAP2;
}
