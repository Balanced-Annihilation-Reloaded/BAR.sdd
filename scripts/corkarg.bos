#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  pelvis, torso, rthigh, rleg, rfoot, lthigh, lleg, lfoot,lbturret, lbbarrel1, lbbarrel2, rbturret,
rbbarrel1, rbbarrel2,luparm, llarm, lfbarrel1, lfbarrel2,ruparm, rlarm, rfbarrel1, rfbarrel2,
lfflare1, lfflare2, rfflare1, rfflare2,lbflare, rbflare,head;

static-var  gun_1, bMoving, bAiming, Static_Var_4, Static_Var_5,
            Static_Var_6, gun_3, Static_Var_8, Static_Var_9, Static_Var_10,
            unitviewer, Static_Var_12, Static_Var_13;

// Signal definitions
#define SIG_AIM				2



SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
	
			emit-sfx smoketype from torso;

		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

StartMoving()
{
	set-signal-mask 16;
	bMoving = TRUE;
	while( bMoving )
	{

	//anim at 96 elmos/cycle, speed is 45 elmos/sec
		if (bMoving)
		{
		//step 0 //start with l foot forward, r foot back


		turn rthigh to x-axis <0> speed <37.500000>;
		turn rleg to x-axis <0> speed <105.000000>;
		turn rfoot to x-axis <0> speed <138.750000>;
		turn lthigh to x-axis <-24> speed <90.000000>;
		turn lleg to x-axis <41> speed <153.750000>;
		turn lfoot to x-axis <-16> speed <60.000000>;
		if (!bAiming)
		{
		turn ruparm to x-axis <40> speed <75.000000>;
		turn luparm to x-axis <40> speed <75.000000>;
		turn torso to y-axis <0> speed <18.750000>;
		}
		turn pelvis to z-axis <0> speed <3.750000>;
		move pelvis to y-axis [0] speed [1.875000];
		turn head to y-axis <0> speed <18.750000>;

		sleep 260;
		}
		if (bMoving)
		{

		//step 1

		turn rthigh to x-axis <36> speed <135.000000>;
		turn rleg to x-axis <-18> speed <67.500000>;
		turn rfoot to x-axis <-17> speed <63.750000>;
		turn lthigh to x-axis <-47> speed <86.250000>;
		turn lleg to x-axis <24> speed <63.750000>;
		turn lfoot to x-axis <12> speed <105.000000>;
		if (!bAiming)
		{
		turn ruparm to x-axis <20> speed <75.000000>;
		turn luparm to x-axis <60> speed <75.000000>;
		move pelvis to y-axis [-0.5] speed [1.875000];
		}
		turn pelvis to z-axis <-1> speed <3.750000>;
		turn torso to y-axis <5> speed <18.750000>;

		turn head to y-axis <5> speed <18.750000>;

		sleep 260;
		}
		if (bMoving)
		{
		//step 2 r foot fully back, l foot fully forward
		turn rthigh to x-axis <55> speed <71.250000>;
		turn rleg to x-axis <-25> speed <26.250000>;
		turn rfoot to x-axis <13> speed <112.500000>;
		turn lthigh to x-axis <-14> speed <123.750000>;
		turn lleg to x-axis <-47> speed <266.250000>;
		turn lfoot to x-axis <15> speed <11.250000>;
		if (!bAiming)
		{
		turn ruparm to x-axis <10> speed <37.500000>;
		turn luparm to x-axis <75> speed <56.250000>;
		turn torso to y-axis <8> speed <11.250000>;
		}
		turn pelvis to z-axis <-1.5> speed <1.875000>;
		move pelvis to y-axis [-1] speed [1.875000];
		turn head to y-axis <8> speed <11.250000>;

		sleep 260;
		//step 3

		turn rthigh to x-axis <0> speed <206.250000>;
		turn rleg to x-axis <39> speed <240.000000>;
		turn rfoot to x-axis <-39> speed <195.000000>;
		turn lthigh to x-axis <-10> speed <15.000000>;
		turn lleg to x-axis <-28> speed <71.250000>;
		turn lfoot to x-axis <37> speed <82.500000>;
		if (!bAiming)
		{
		turn ruparm to x-axis <20> speed <37.500000>;
		turn luparm to x-axis <60> speed <56.250000>;
		turn torso to y-axis <5> speed <11.250000>;
		}
		turn pelvis to z-axis <-1> speed <1.875000>;
		move pelvis to y-axis [-0.5] speed [1.875000];
		turn head to y-axis <5> speed <11.250000>;

		sleep 260;
		}
		if (bMoving)
		{
		//step 4
		turn rthigh to x-axis <-24> speed <90.000000>;
		turn rleg to x-axis <41> speed <7.500000>;
		turn rfoot to x-axis <-16> speed <86.250000>;
		turn lthigh to x-axis <0> speed <37.500000>;
		turn lleg to x-axis <0> speed <105.000000>;
		turn lfoot to x-axis <0> speed <138.750000>;
		if (!bAiming)
		{
		turn ruparm to x-axis <40> speed <75.000000>;
		turn luparm to x-axis <40> speed <75.000000>;
		turn torso to y-axis <0> speed <18.750000>;
		}
		turn pelvis to z-axis <0> speed <3.750000>;
		move pelvis to y-axis [0] speed [1.875000];
		turn head to y-axis <0> speed <18.750000>;

		sleep 260;
		}
		if (bMoving)
		{
		//step 5

		turn rthigh to x-axis <-47> speed <86.250000>;
		turn rleg to x-axis <24> speed <63.750000>;
		turn rfoot to x-axis <12> speed <105.000000>;
		turn lthigh to x-axis <36> speed <135.000000>;
		turn lleg to x-axis <-18> speed <67.500000>;
		turn lfoot to x-axis <-17> speed <63.750000>;
		if (!bAiming)
		{
		turn ruparm to x-axis <60> speed <75.000000>;
		turn luparm to x-axis <20> speed <75.000000>;
		turn torso to y-axis <-5> speed <18.750000>;
		}
		turn pelvis to z-axis <1> speed <3.750000>;
		move pelvis to y-axis [-0.5] speed [1.875000];
		turn head to y-axis <-5> speed <18.750000>;

		sleep 260;
		}
		if (bMoving)
		{
		//step 6

		turn rthigh to x-axis <-14> speed <123.750000>;
		turn rleg to x-axis <-47> speed <266.250000>;
		turn rfoot to x-axis <15> speed <11.250000>;
		turn lthigh to x-axis <55> speed <71.250000>;
		turn lleg to x-axis <-25> speed <26.250000>;
		turn lfoot to x-axis <13> speed <112.500000>;
		if (!bAiming)
		{
		turn ruparm to x-axis <75> speed <56.250000>;
		turn luparm to x-axis <10> speed <37.500000>;
		turn torso to y-axis <-8> speed <11.250000>;
		}
		turn pelvis to z-axis <1.5> speed <1.875000>;
		move pelvis to y-axis [-1] speed [1.875000];
		turn head to y-axis <-8> speed <11.250000>;

		sleep 260;
		}
		if (bMoving)
		{
		//step 7

		turn rthigh to x-axis <-10> speed <15.000000>;
		turn rleg to x-axis <-28> speed <71.250000>;
		turn rfoot to x-axis <37> speed <82.500000>;
		turn lthigh to x-axis <0> speed <206.250000>;
		turn lleg to x-axis <39> speed <240.000000>;
		turn lfoot to x-axis <-39> speed <195.000000>;
		if (!bAiming)
		{
		turn ruparm to x-axis <60> speed <56.250000>;
		turn luparm to x-axis <20> speed <37.500000>;
		turn torso to y-axis <-5> speed <11.250000>;
		}
		turn pelvis to z-axis <1> speed <1.875000>;
		move pelvis to y-axis [-0.5] speed [1.875000];
		turn head to y-axis <-5> speed <11.250000>;

		sleep 160;
		}
	sleep 100;
	}
}

StopMoving()
{
	signal 16;
	bMoving = FALSE;
	Static_Var_13 = 1;
	
	turn rthigh to x-axis <0> speed <37.500000>;
	turn rleg to x-axis <0> speed <105.000000>;
	turn rfoot to x-axis <0> speed <138.750000>;
	turn lthigh to x-axis <0> speed <90.000000>;
	turn lleg to x-axis <0> speed <153.750000>;
	turn lfoot to x-axis <0> speed <60.000000>;
	if (!bAiming)
	{
	turn luparm to x-axis <0> speed <75.000000>;
	turn ruparm to x-axis <0> speed <75.000000>;
	turn torso to y-axis <0> speed <18.750000>;
	}
	turn pelvis to z-axis <0> speed <3.750000>;
	move pelvis to y-axis [0] speed [1.875000];
	turn head to y-axis <0> speed <18.750000>;


	sleep 360;
	return (0);
}

RestorePrimary()
{
	set-signal-mask SIG_AIM;
	sleep 6000;
	Static_Var_9 = 0;
	Static_Var_10 = 0;

	turn luparm to x-axis <35> speed <75>;
	turn ruparm to x-axis <35> speed <75>;
	turn torso to y-axis <0> speed <75>;
	
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	Static_Var_4 = 0;
	if( bAiming == 1 )
	{
		if( Static_Var_5 == 0 AND Static_Var_6 == 0 )
		{
			bAiming = FALSE;
			return (0);
		}
	}
}



Demo()
{
	unitviewer = TRUE;
	return (0);
}

Create()
{
	gun_1 = 1;
	Static_Var_8 = 0;
	Static_Var_4 = 0;
	Static_Var_5 = 0;
	Static_Var_6 = 0;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_9 = 0;
	Static_Var_10 = 0;
	Static_Var_9 = 0;
	unitviewer = FALSE;
	Static_Var_12 = 0;
	Static_Var_13 = 1;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	start-script SmokeUnit();
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = torso;
	return (0);
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = lfflare1;
		return (0);
	}
	if( gun_1 == 2 )
	{
		piecenum = lfflare2;
		return (0);
	}
	if( gun_1 == 3 )
	{
		piecenum = rfflare1;
		return (0);
	}
	if( gun_1 == 4 )
	{
		piecenum = rfflare2;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
	return (0);
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;


	turn torso to y-axis heading speed <150.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <120.000000>;
	turn ruparm to x-axis <0.000000> - pitch speed <120.000000>;

	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	start-script RestorePrimary();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 1 )
	{
		gun_1 = 2;
		move lfbarrel1 to z-axis [-1] speed [750.000000];
		sleep 150;
		move lfbarrel1 to z-axis [0.000000] speed [8.750000];
		return (0);
	}
	if( gun_1 == 2 )
	{
		gun_1 = 3;
		move lfbarrel2 to z-axis [-1] speed [750.000000];
		sleep 150;
		move lfbarrel2 to z-axis [0.000000] speed [8.750000];
		return (0);
	}
	if( gun_1 == 3 )
	{
		gun_1 = 4;
		move rfbarrel1 to z-axis [-1] speed [750.000000];
		sleep 150;
		move rfbarrel1 to z-axis [0.000000] speed [8.750000];
		return (0);
	}
	if( gun_1 == 4 )
	{
		gun_1 = 1;
		move rfbarrel2 to z-axis [-1] speed [750.000000];
		sleep 150;
		move rfbarrel2 to z-axis [0.000000] speed [8.750000];
		return (0);
	}
}

QuerySecondary(piecenum)
{
	piecenum = lbflare;
	return (0);
}

AimFromSecondary(piecenum)
{
	piecenum = lbflare;
	return (0);
}

AimSecondary(heading, pitch)
{
	turn lbflare to x-axis <-90> now;
	sleep 30;
	return (1);
}

FireSecondary()
{
	return (0);
}

QueryTertiary(piecenum)
{
	piecenum = rbflare;
	return (0);
}

AimFromTertiary(piecenum)
{
	piecenum = rbflare;
	return (0);
}

AimTertiary(heading, pitch)
{
	turn rbflare to x-axis <-90> now;
	sleep 30;
	return (1);
}

FireTertiary()
{
	return (0);
}



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode pelvis type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode torso type SHATTER | BITMAP4;

		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
	
		explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;

		return (0);
	}
	corpsetype = 3;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;

	return (0);
}
