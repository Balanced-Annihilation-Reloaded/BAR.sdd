#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  support, flare, Thigh1, Thigh2, Torso, Shoulder, Barrel, Foot2,
       Foot1, Forearm, Leg2, Leg1, pelvis;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, Static_Var_5,
            Static_Var_6;

// Signal definitions
#define SIG_AIM				2


walk()
{
	if( TRUE )
	{
		move Thigh1 to z-axis [0.000000] now;
		move Thigh2 to z-axis [0.000000] now;
		move Torso to x-axis [0.000000] now;
		move Torso to y-axis [-0.125000] now;
		move Shoulder to x-axis [0.000000] now;
		move support to y-axis [0.000000] now;
		move support to z-axis [0.000000] now;
		move Barrel to x-axis [0.000000] now;
		move Foot2 to z-axis [0.000000] now;
		move Foot1 to x-axis [0.000000] now;
		move Foot1 to z-axis [0.000000] now;
		turn Thigh1 to x-axis <16.879121> now;
		turn Thigh2 to x-axis <-45.714286> now;
		turn Torso to x-axis <1.758242> now;
		turn Torso to z-axis <-0.703297> now;
		turn Shoulder to x-axis <-6.329670> now;
		turn Forearm to x-axis <-15.824176> now;
		turn Leg2 to x-axis <50.983516> now;
		turn Foot1 to x-axis <-16.527473> now;
		sleep 100;
	}
	if( TRUE )
	{
		move Torso to y-axis [0.000000] now;
		turn Thigh1 to x-axis <24.263736> now;
		turn Thigh2 to x-axis <-41.137363> now;
		turn Torso to x-axis <0.351648> now;
		turn Torso to z-axis <-0.351648> now;
		turn Shoulder to x-axis <-13.010989> now;
		turn Forearm to x-axis <-22.857143> now;
		turn Leg2 to x-axis <43.247253> now;
		turn Foot1 to x-axis <-11.956044> now;
		sleep 102;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <37.620879> now;
		turn Thigh2 to x-axis <-26.368132> now;
		turn Torso to x-axis <0.000000> now;
		turn Torso to z-axis <0.000000> now;
		turn Shoulder to x-axis <-19.340659> now;
		turn Forearm to x-axis <-21.450549> now;
		turn Leg2 to x-axis <26.368132> now;
		turn Leg1 to x-axis <8.439560> now;
		sleep 104;
	}
	if( TRUE )
	{
		move Torso to y-axis [-0.750000] now;
		turn Thigh1 to x-axis <22.148352> now;
		turn Thigh2 to x-axis <-11.956044> now;
		turn Torso to x-axis <0.000000> now;
		turn Shoulder to x-axis <-17.934066> now;
		turn Forearm to x-axis <-5.274725> now;
		turn Leg2 to x-axis <11.598901> now;
		turn Leg1 to x-axis <27.428571> now;
		sleep 102;
	}
	if( TRUE )
	{
		move Torso to y-axis [-0.625000] now;
		turn Thigh1 to x-axis <3.159341> now;
		turn Thigh2 to x-axis <7.032967> now;
		turn Torso to x-axis <1.758242> now;
		turn Torso to z-axis <1.406593> now;
		turn Shoulder to x-axis <-5.274725> now;
		turn Forearm to x-axis <0.000000> now;
		turn Leg2 to x-axis <-1.054945> now;
		turn Foot2 to x-axis <-6.329670> now;
		turn Leg1 to x-axis <53.450549> now;
		sleep 102;
	}
	if( TRUE )
	{
		move Torso to y-axis [-0.250000] now;
		turn Thigh1 to x-axis <-20.747253> now;
		turn Thigh2 to x-axis <20.747253> now;
		turn Torso to x-axis <2.461538> now;
		turn Torso to z-axis <0.703297> now;
		turn Shoulder to x-axis <2.461538> now;
		turn Foot2 to x-axis <-19.692308> now;
		turn Leg1 to x-axis <60.829670> now;
		sleep 103;
	}
	if( TRUE )
	{
		move Torso to y-axis [-0.125000] now;
		turn Thigh1 to x-axis <-39.384615> now;
		turn Thigh2 to x-axis <28.483516> now;
		turn Torso to x-axis <0.703297> now;
		turn Shoulder to x-axis <1.406593> now;
		turn Foot2 to x-axis <-27.076923> now;
		sleep 103;
	}
	if( TRUE )
	{
		move Torso to y-axis [0.000000] now;
		turn Thigh1 to x-axis <-43.956044> now;
		turn Thigh2 to x-axis <34.813187> now;
		turn Torso to x-axis <0.351648> now;
		turn Torso to z-axis <0.351648> now;
		turn Shoulder to x-axis <1.054945> now;
		turn Foot2 to x-axis <-20.395604> now;
		turn Leg1 to x-axis <43.956044> now;
		turn Foot1 to x-axis <0.000000> now;
		sleep 103;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <-31.994505> now;
		turn Thigh2 to x-axis <35.868132> now;
		turn Torso to x-axis <0.000000> now;
		turn Torso to z-axis <0.000000> now;
		turn Shoulder to x-axis <0.000000> now;
		turn Leg2 to x-axis <16.175824> now;
		turn Foot2 to x-axis <-13.714286> now;
		turn Leg1 to x-axis <32.351648> now;
		sleep 103;
	}
	if( TRUE )
	{
		move Torso to y-axis [-0.625000] now;
		turn Thigh1 to x-axis <-23.554945> now;
		turn Thigh2 to x-axis <23.560440> now;
		turn Leg2 to x-axis <40.434066> now;
		turn Leg1 to x-axis <24.263736> now;
		sleep 103;
	}
	if( TRUE )
	{
		move Torso to y-axis [-0.500000] now;
		turn Thigh1 to x-axis <-1.406593> now;
		turn Thigh2 to x-axis <-14.412088> now;
		turn Torso to x-axis <2.109890> now;
		turn Torso to z-axis <-2.109890> now;
		turn Shoulder to x-axis <-0.703297> now;
		turn Leg2 to x-axis <69.269231> now;
		turn Leg1 to x-axis <2.461538> now;
		sleep 103;
	}
	move Torso to y-axis [-0.375000] now;
	turn Thigh1 to x-axis <11.604396> now;
	turn Thigh2 to x-axis <-35.164835> now;
	turn Torso to z-axis <-1.054945> now;
	turn Shoulder to x-axis <-2.461538> now;
	turn Forearm to x-axis <-4.219780> now;
	turn Leg2 to x-axis <76.659341> now;
	turn Foot1 to x-axis <-14.065934> now;
	sleep 103;
	return (0);
}

walklegs()
{
	if( TRUE )
	{
		turn Thigh1 to x-axis <16.879121> now;
		turn Thigh2 to x-axis <-45.714286> now;
		turn Leg2 to x-axis <50.983516> now;
		turn Foot1 to x-axis <-16.527473> now;
		sleep 100;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <24.263736> now;
		turn Thigh2 to x-axis <-41.137363> now;
		turn Leg2 to x-axis <43.247253> now;
		turn Foot1 to x-axis <-11.956044> now;
		sleep 100;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <37.620879> now;
		turn Thigh2 to x-axis <-26.368132> now;
		turn Leg2 to x-axis <26.368132> now;
		turn Leg1 to x-axis <8.439560> now;
		sleep 100;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <22.148352> now;
		turn Thigh2 to x-axis <-11.956044> now;
		turn Leg2 to x-axis <11.598901> now;
		turn Leg1 to x-axis <27.428571> now;
		sleep 100;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <3.159341> now;
		turn Thigh2 to x-axis <7.032967> now;
		turn Leg2 to x-axis <-1.054945> now;
		turn Foot2 to x-axis <-6.329670> now;
		turn Leg1 to x-axis <53.450549> now;
		sleep 100;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <-20.747253> now;
		turn Thigh2 to x-axis <20.747253> now;
		turn Foot2 to x-axis <-19.692308> now;
		turn Leg1 to x-axis <60.829670> now;
		sleep 100;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <-39.384615> now;
		turn Thigh2 to x-axis <28.483516> now;
		turn Foot2 to x-axis <-27.076923> now;
		sleep 100;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <-43.956044> now;
		turn Thigh2 to x-axis <34.813187> now;
		turn Foot2 to x-axis <-20.395604> now;
		turn Leg1 to x-axis <43.956044> now;
		turn Foot1 to x-axis <0.000000> now;
		sleep 100;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <-31.994505> now;
		turn Thigh2 to x-axis <35.868132> now;
		turn Leg2 to x-axis <16.175824> now;
		turn Foot2 to x-axis <-13.714286> now;
		turn Leg1 to x-axis <32.351648> now;
		sleep 100;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <-23.554945> now;
		turn Thigh2 to x-axis <23.560440> now;
		turn Leg2 to x-axis <40.434066> now;
		turn Leg1 to x-axis <24.263736> now;
		sleep 100;
	}
	if( TRUE )
	{
		turn Thigh1 to x-axis <-1.406593> now;
		turn Thigh2 to x-axis <-14.412088> now;
		turn Leg2 to x-axis <69.269231> now;
		turn Leg1 to x-axis <2.461538> now;
		sleep 100;
	}
	turn Thigh1 to x-axis <11.604396> now;
	turn Thigh2 to x-axis <-35.164835> now;
	turn Leg2 to x-axis <76.659341> now;
	turn Foot1 to x-axis <-14.065934> now;
	sleep 100;
	return (0);
}

stand()
{
	move Thigh1 to z-axis [0.000000] now;
	move Thigh2 to z-axis [0.000000] now;
	move Torso to x-axis [0.000000] now;
	move Shoulder to x-axis [0.000000] now;
	move support to y-axis [0.000000] now;
	move support to z-axis [0.000000] now;
	move Barrel to x-axis [0.000000] now;
	move Foot2 to z-axis [0.000000] now;
	move Foot1 to x-axis [0.000000] now;
	move Foot1 to z-axis [0.000000] now;
	sleep 200;
	return (0);
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from Torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				call-script stand();
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
	return (0);
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	hide flare;
	dont-cache flare;
	restore_delay = 2000;
	start-script SmokeUnit();
	start-script MotionControl();
	return (0);
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
	return (0);
}

StartMoving()
{
	bMoving = TRUE;
	return (0);
}

StopMoving()
{
	bMoving = FALSE;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = Torso;
	return (0);
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn Torso to y-axis <0.000000> speed <90.021978>;
	turn support to x-axis <0.000000> speed <45.010989>;
	bAiming = FALSE;
	return (0);
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn Torso to y-axis heading speed <190.043956>;
	turn support to x-axis <0.000000> - pitch speed <150.032967>;
	wait-for-turn Torso around y-axis;
	wait-for-turn support around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	move Barrel to z-axis [-12.500000] speed [1250.000000];
	show flare;
	sleep 150;
	turn Torso to x-axis <-10.000000> speed <500.120879>;
	sleep 150;
	hide flare;
	turn Torso to x-axis <0.000000> speed <20.000000>;
	move Barrel to z-axis [0.000000] speed [7.500000];
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = flare;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = support;
	return (0);
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode Barrel type BITMAPONLY | BITMAP2;
		explode Foot1 type BITMAPONLY | BITMAP4;
		explode Foot2 type BITMAPONLY | BITMAP5;
		explode Forearm type BITMAPONLY | BITMAP1;
		explode Leg1 type BITMAPONLY | BITMAP2;
		explode Leg2 type BITMAPONLY | BITMAP3;
		explode Shoulder type BITMAPONLY | BITMAP4;
		explode support type BITMAPONLY | BITMAP5;
		explode Thigh1 type BITMAPONLY | BITMAP1;
		explode Thigh2 type BITMAPONLY | BITMAP2;
		explode Torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode pelvis type FALL | BITMAP1;
		explode Barrel type BITMAPONLY | BITMAP2;
		explode Foot1 type FALL | BITMAP3;
		explode Foot2 type FALL | BITMAP4;
		explode Forearm type FALL | BITMAP5;
		explode Leg1 type FALL | BITMAP1;
		explode Leg2 type FALL | BITMAP2;
		explode Shoulder type FALL | BITMAP3;
		explode support type FALL | BITMAP4;
		explode Thigh1 type FALL | BITMAP5;
		explode Thigh2 type FALL | BITMAP1;
		explode Torso type SHATTER | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode Barrel type BITMAPONLY | BITMAP2;
		explode Foot1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode Foot2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode Forearm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode Leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode Leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode Shoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode support type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode Thigh1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode Thigh2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode Torso type SHATTER | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode Barrel type BITMAPONLY | BITMAP2;
	explode Foot1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode Foot2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode Forearm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode Leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode Leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode Shoulder type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode support type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode Thigh1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode Thigh2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode Torso type SHATTER | BITMAP5;
	return (0);
}
