#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, torp1, torp2, bubbles1, bubbles2, bubbles3 ;

static-var  gun_1;

// Signal definitions
#define SIG_MOVE			2


Create()
{
	gun_1 = torp1;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 259 from bubbles1;
		emit-sfx 259 from bubbles2;
		emit-sfx 259 from bubbles3;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

AimPrimary(heading, pitch)
{
	return (1);
}

FirePrimary()
{
	if( gun_1 == 1 )
	{
		gun_1 = torp2;
		return (0);
	}
	if( gun_1 == 2 )
	{
		gun_1 = torp1;
		return (0);
	}
}

AimFromPrimary(piecenum)
{
	piecenum = base;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 1 )
	{
		piecenum = torp1;
	}
	if( gun_1 == 2 )
	{
		piecenum = torp2;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY;
		explode torp1 type BITMAPONLY;
		explode torp2 type BITMAPONLY;
		explode bubbles1 type BITMAPONLY;
		explode bubbles2 type BITMAPONLY;
		explode bubbles3 type BITMAPONLY;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY;
		explode torp1 type FALL;
		explode torp2 type FIRE | SMOKE | FALL;
		explode bubbles1 type FIRE | SMOKE | FALL;
		explode bubbles2 type FIRE | SMOKE | FALL;
		explode bubbles3 type FALL;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode torp1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode torp2 type EXPLODE_ON_HIT | SMOKE | FALL;
		explode bubbles1 type FIRE | SMOKE | FALL;
		explode bubbles2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode bubbles3 type FIRE | SMOKE | FALL;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY;
		explode torp1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode torp2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
		explode bubbles1 type EXPLODE_ON_HIT | FIRE | FALL;
		explode bubbles2 type EXPLODE_ON_HIT | FIRE | FALL;
		explode bubbles3 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL;
	return corpsetype;
}
